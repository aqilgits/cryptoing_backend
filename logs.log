2022-10-01 13:02:02,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:02,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:02,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:02,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:06,135:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:02:10,463:INFO:PyCaret RegressionExperiment
2022-10-01 13:02:10,464:INFO:Logging name: reg-default-name
2022-10-01 13:02:10,464:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:02:10,464:INFO:version 3.0.0.rc4
2022-10-01 13:02:10,464:INFO:Initializing setup()
2022-10-01 13:02:10,464:INFO:self.USI: 0cf0
2022-10-01 13:02:10,464:INFO:self.variable_keys: {'X', 'display_container', 'data', 'logging_param', 'USI', 'master_model_container', '_all_models', 'log_plots_param', 'memory', '_ml_usecase', 'fold_shuffle_param', 'variable_keys', '_gpu_n_jobs_param', 'X_test', 'y_test', 'fold_generator', 'transform_target_param', 'transform_target_method_param', '_available_plots', 'gpu_param', 'idx', 'target_param', 'exp_id', 'exp_name_log', 'pipeline', '_all_models_internal', 'y', 'X_train', '_all_metrics', 'n_jobs_param', 'html_param', 'fold_groups_param', 'y_train', 'seed'}
2022-10-01 13:02:10,464:INFO:Checking environment
2022-10-01 13:02:10,464:INFO:python_version: 3.10.7
2022-10-01 13:02:10,464:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:02:10,464:INFO:machine: AMD64
2022-10-01 13:02:10,481:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:02:10,481:INFO:Memory: svmem(total=8497213440, available=1843040256, percent=78.3, used=6654173184, free=1843040256)
2022-10-01 13:02:10,481:INFO:Physical Core: 6
2022-10-01 13:02:10,481:INFO:Logical Core: 12
2022-10-01 13:02:10,481:INFO:Checking libraries
2022-10-01 13:02:10,481:INFO:System:
2022-10-01 13:02:10,482:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:02:10,482:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:02:10,482:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:02:10,482:INFO:PyCaret required dependencies:
2022-10-01 13:02:10,482:INFO:                 pip: 22.2.2
2022-10-01 13:02:10,482:INFO:          setuptools: 63.2.0
2022-10-01 13:02:10,482:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:02:10,482:INFO:             IPython: 8.5.0
2022-10-01 13:02:10,482:INFO:          ipywidgets: 8.0.2
2022-10-01 13:02:10,482:INFO:                tqdm: 4.64.1
2022-10-01 13:02:10,482:INFO:               numpy: 1.22.4
2022-10-01 13:02:10,482:INFO:              pandas: 1.4.4
2022-10-01 13:02:10,482:INFO:              jinja2: 3.1.2
2022-10-01 13:02:10,482:INFO:               scipy: 1.8.1
2022-10-01 13:02:10,482:INFO:              joblib: 1.2.0
2022-10-01 13:02:10,482:INFO:             sklearn: 1.1.2
2022-10-01 13:02:10,482:INFO:                pyod: 1.0.5
2022-10-01 13:02:10,482:INFO:            imblearn: 0.9.1
2022-10-01 13:02:10,482:INFO:   category_encoders: 2.5.0
2022-10-01 13:02:10,482:INFO:            lightgbm: 3.3.2
2022-10-01 13:02:10,482:INFO:               numba: 0.55.2
2022-10-01 13:02:10,482:INFO:            requests: 2.28.1
2022-10-01 13:02:10,482:INFO:          matplotlib: 3.6.0
2022-10-01 13:02:10,483:INFO:          scikitplot: 0.3.7
2022-10-01 13:02:10,483:INFO:         yellowbrick: 1.5
2022-10-01 13:02:10,483:INFO:              plotly: 5.10.0
2022-10-01 13:02:10,483:INFO:             kaleido: 0.2.1
2022-10-01 13:02:10,483:INFO:         statsmodels: 0.13.2
2022-10-01 13:02:10,483:INFO:              sktime: 0.13.4
2022-10-01 13:02:10,483:INFO:               tbats: 1.1.0
2022-10-01 13:02:10,483:INFO:            pmdarima: 1.8.5
2022-10-01 13:02:10,483:INFO:              psutil: 5.9.2
2022-10-01 13:02:10,483:INFO:PyCaret optional dependencies:
2022-10-01 13:02:10,498:INFO:                shap: Not installed
2022-10-01 13:02:10,498:INFO:           interpret: Not installed
2022-10-01 13:02:10,498:INFO:                umap: Not installed
2022-10-01 13:02:10,498:INFO:    pandas_profiling: Not installed
2022-10-01 13:02:10,498:INFO:  explainerdashboard: Not installed
2022-10-01 13:02:10,498:INFO:             autoviz: Not installed
2022-10-01 13:02:10,498:INFO:           fairlearn: Not installed
2022-10-01 13:02:10,498:INFO:             xgboost: Not installed
2022-10-01 13:02:10,498:INFO:            catboost: Not installed
2022-10-01 13:02:10,498:INFO:              kmodes: Not installed
2022-10-01 13:02:10,498:INFO:             mlxtend: Not installed
2022-10-01 13:02:10,498:INFO:       statsforecast: Not installed
2022-10-01 13:02:10,498:INFO:        tune_sklearn: Not installed
2022-10-01 13:02:10,498:INFO:                 ray: Not installed
2022-10-01 13:02:10,499:INFO:            hyperopt: Not installed
2022-10-01 13:02:10,499:INFO:              optuna: Not installed
2022-10-01 13:02:10,499:INFO:               skopt: Not installed
2022-10-01 13:02:10,499:INFO:              mlflow: Not installed
2022-10-01 13:02:10,499:INFO:              gradio: Not installed
2022-10-01 13:02:10,499:INFO:             fastapi: Not installed
2022-10-01 13:02:10,499:INFO:             uvicorn: Not installed
2022-10-01 13:02:10,499:INFO:              m2cgen: Not installed
2022-10-01 13:02:10,499:INFO:           evidently: Not installed
2022-10-01 13:02:10,499:INFO:                nltk: Not installed
2022-10-01 13:02:10,499:INFO:            pyLDAvis: Not installed
2022-10-01 13:02:10,499:INFO:              gensim: Not installed
2022-10-01 13:02:10,499:INFO:               spacy: Not installed
2022-10-01 13:02:10,499:INFO:           wordcloud: Not installed
2022-10-01 13:02:10,499:INFO:            textblob: Not installed
2022-10-01 13:02:10,499:INFO:               fugue: Not installed
2022-10-01 13:02:10,499:INFO:           streamlit: Not installed
2022-10-01 13:02:10,499:INFO:             prophet: Not installed
2022-10-01 13:02:10,499:INFO:None
2022-10-01 13:02:10,499:INFO:Set up GPU usage.
2022-10-01 13:02:10,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,500:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:02:10,500:INFO:Set up data.
2022-10-01 13:02:10,504:INFO:Set up train/test split.
2022-10-01 13:02:10,506:INFO:Set up index.
2022-10-01 13:02:10,506:INFO:Set up folding strategy.
2022-10-01 13:02:10,507:INFO:Assigning column types.
2022-10-01 13:02:10,509:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:02:10,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,509:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,514:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,518:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,618:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:15,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:15,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,872:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,880:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,888:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,982:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,360:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:02:16,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,368:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,375:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,504:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,778:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,785:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,870:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,914:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,141:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:02:17,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,155:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,584:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,008:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:02:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,537:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:02:18,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,800:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,256:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:19,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,530:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:02:19,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,277:INFO:Preparing preprocessing pipeline...
2022-10-01 13:02:20,278:INFO:Set up simple imputation.
2022-10-01 13:02:20,278:INFO:Set up variance threshold.
2022-10-01 13:02:20,335:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:02:20,341:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:02:20,342:INFO:Creating final display dataframe.
2022-10-01 13:02:20,517:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              0cf0
2022-10-01 13:02:20,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:21,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:21,456:INFO:setup() successfully completed in 11.0s...............
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:34,288:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:03:36,035:INFO:PyCaret RegressionExperiment
2022-10-01 13:03:36,035:INFO:Logging name: reg-default-name
2022-10-01 13:03:36,035:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:03:36,035:INFO:version 3.0.0.rc4
2022-10-01 13:03:36,035:INFO:Initializing setup()
2022-10-01 13:03:36,035:INFO:self.USI: 09e0
2022-10-01 13:03:36,035:INFO:self.variable_keys: {'gpu_param', 'target_param', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'transform_target_method_param', 'idx', 'variable_keys', 'display_container', 'X_train', '_all_models_internal', 'exp_name_log', 'y_test', '_gpu_n_jobs_param', 'memory', 'seed', 'transform_target_param', 'y', 'fold_generator', 'y_train', 'X_test', 'master_model_container', 'USI', 'html_param', 'exp_id', 'logging_param', 'X', '_available_plots', '_all_models', '_all_metrics', 'n_jobs_param', 'pipeline', 'fold_groups_param', 'data'}
2022-10-01 13:03:36,035:INFO:Checking environment
2022-10-01 13:03:36,035:INFO:python_version: 3.10.7
2022-10-01 13:03:36,035:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:03:36,035:INFO:machine: AMD64
2022-10-01 13:03:36,055:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:03:36,055:INFO:Memory: svmem(total=8497213440, available=2011459584, percent=76.3, used=6485753856, free=2011459584)
2022-10-01 13:03:36,056:INFO:Physical Core: 6
2022-10-01 13:03:36,056:INFO:Logical Core: 12
2022-10-01 13:03:36,056:INFO:Checking libraries
2022-10-01 13:03:36,056:INFO:System:
2022-10-01 13:03:36,056:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:03:36,056:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:03:36,056:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:03:36,056:INFO:PyCaret required dependencies:
2022-10-01 13:03:36,056:INFO:                 pip: 22.2.2
2022-10-01 13:03:36,056:INFO:          setuptools: 63.2.0
2022-10-01 13:03:36,056:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:03:36,056:INFO:             IPython: 8.5.0
2022-10-01 13:03:36,056:INFO:          ipywidgets: 8.0.2
2022-10-01 13:03:36,056:INFO:                tqdm: 4.64.1
2022-10-01 13:03:36,056:INFO:               numpy: 1.22.4
2022-10-01 13:03:36,056:INFO:              pandas: 1.4.4
2022-10-01 13:03:36,056:INFO:              jinja2: 3.1.2
2022-10-01 13:03:36,056:INFO:               scipy: 1.8.1
2022-10-01 13:03:36,057:INFO:              joblib: 1.2.0
2022-10-01 13:03:36,057:INFO:             sklearn: 1.1.2
2022-10-01 13:03:36,057:INFO:                pyod: 1.0.5
2022-10-01 13:03:36,057:INFO:            imblearn: 0.9.1
2022-10-01 13:03:36,057:INFO:   category_encoders: 2.5.0
2022-10-01 13:03:36,057:INFO:            lightgbm: 3.3.2
2022-10-01 13:03:36,057:INFO:               numba: 0.55.2
2022-10-01 13:03:36,057:INFO:            requests: 2.28.1
2022-10-01 13:03:36,057:INFO:          matplotlib: 3.6.0
2022-10-01 13:03:36,057:INFO:          scikitplot: 0.3.7
2022-10-01 13:03:36,057:INFO:         yellowbrick: 1.5
2022-10-01 13:03:36,057:INFO:              plotly: 5.10.0
2022-10-01 13:03:36,057:INFO:             kaleido: 0.2.1
2022-10-01 13:03:36,057:INFO:         statsmodels: 0.13.2
2022-10-01 13:03:36,057:INFO:              sktime: 0.13.4
2022-10-01 13:03:36,057:INFO:               tbats: 1.1.0
2022-10-01 13:03:36,057:INFO:            pmdarima: 1.8.5
2022-10-01 13:03:36,057:INFO:              psutil: 5.9.2
2022-10-01 13:03:36,057:INFO:PyCaret optional dependencies:
2022-10-01 13:03:36,076:INFO:                shap: Not installed
2022-10-01 13:03:36,076:INFO:           interpret: Not installed
2022-10-01 13:03:36,076:INFO:                umap: Not installed
2022-10-01 13:03:36,076:INFO:    pandas_profiling: Not installed
2022-10-01 13:03:36,076:INFO:  explainerdashboard: Not installed
2022-10-01 13:03:36,076:INFO:             autoviz: Not installed
2022-10-01 13:03:36,076:INFO:           fairlearn: Not installed
2022-10-01 13:03:36,076:INFO:             xgboost: Not installed
2022-10-01 13:03:36,076:INFO:            catboost: Not installed
2022-10-01 13:03:36,076:INFO:              kmodes: Not installed
2022-10-01 13:03:36,076:INFO:             mlxtend: Not installed
2022-10-01 13:03:36,076:INFO:       statsforecast: Not installed
2022-10-01 13:03:36,076:INFO:        tune_sklearn: Not installed
2022-10-01 13:03:36,076:INFO:                 ray: Not installed
2022-10-01 13:03:36,076:INFO:            hyperopt: Not installed
2022-10-01 13:03:36,077:INFO:              optuna: Not installed
2022-10-01 13:03:36,077:INFO:               skopt: Not installed
2022-10-01 13:03:36,077:INFO:              mlflow: Not installed
2022-10-01 13:03:36,077:INFO:              gradio: Not installed
2022-10-01 13:03:36,077:INFO:             fastapi: Not installed
2022-10-01 13:03:36,077:INFO:             uvicorn: Not installed
2022-10-01 13:03:36,077:INFO:              m2cgen: Not installed
2022-10-01 13:03:36,077:INFO:           evidently: Not installed
2022-10-01 13:03:36,077:INFO:                nltk: Not installed
2022-10-01 13:03:36,077:INFO:            pyLDAvis: Not installed
2022-10-01 13:03:36,077:INFO:              gensim: Not installed
2022-10-01 13:03:36,077:INFO:               spacy: Not installed
2022-10-01 13:03:36,077:INFO:           wordcloud: Not installed
2022-10-01 13:03:36,077:INFO:            textblob: Not installed
2022-10-01 13:03:36,077:INFO:               fugue: Not installed
2022-10-01 13:03:36,077:INFO:           streamlit: Not installed
2022-10-01 13:03:36,077:INFO:             prophet: Not installed
2022-10-01 13:03:36,077:INFO:None
2022-10-01 13:03:36,077:INFO:Set up GPU usage.
2022-10-01 13:03:36,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,077:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:03:36,078:INFO:Set up data.
2022-10-01 13:03:36,083:INFO:Set up train/test split.
2022-10-01 13:03:36,086:INFO:Set up index.
2022-10-01 13:03:36,087:INFO:Set up folding strategy.
2022-10-01 13:03:36,087:INFO:Assigning column types.
2022-10-01 13:03:36,091:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:03:36,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,091:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,099:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,598:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,612:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,978:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:03:36,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,985:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,992:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,374:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,374:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,381:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,740:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:03:37,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,840:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,128:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,475:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:03:38,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,482:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,876:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,876:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,976:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:39,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,256:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:03:39,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:39,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,741:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:39,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,014:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:03:40,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,883:INFO:Preparing preprocessing pipeline...
2022-10-01 13:03:40,884:INFO:Set up simple imputation.
2022-10-01 13:03:40,884:INFO:Set up variance threshold.
2022-10-01 13:03:40,915:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:03:40,922:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:03:40,922:INFO:Creating final display dataframe.
2022-10-01 13:03:41,004:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              09e0
2022-10-01 13:03:41,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,756:INFO:setup() successfully completed in 5.72s...............
2022-10-01 13:03:41,756:INFO:Initializing compare_models()
2022-10-01 13:03:41,756:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:03:41,756:INFO:Checking exceptions
2022-10-01 13:03:41,758:INFO:Preparing display monitor
2022-10-01 13:03:41,763:INFO:Initializing Linear Regression
2022-10-01 13:03:41,763:INFO:Total runtime is 0.0 minutes
2022-10-01 13:03:41,763:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:41,763:INFO:Initializing create_model()
2022-10-01 13:03:41,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:41,763:INFO:Checking exceptions
2022-10-01 13:03:41,765:INFO:Importing libraries
2022-10-01 13:03:41,765:INFO:Copying training dataset
2022-10-01 13:03:41,767:INFO:Defining folds
2022-10-01 13:03:41,767:INFO:Declaring metric variables
2022-10-01 13:03:41,767:INFO:Importing untrained model
2022-10-01 13:03:41,767:INFO:Linear Regression Imported successfully
2022-10-01 13:03:41,767:INFO:Starting cross validation
2022-10-01 13:03:41,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:42,523:INFO:Calculating mean and std
2022-10-01 13:03:42,524:INFO:Creating metrics dataframe
2022-10-01 13:03:42,526:INFO:Uploading results into container
2022-10-01 13:03:42,527:INFO:Uploading model into container now
2022-10-01 13:03:42,527:INFO:master_model_container: 1
2022-10-01 13:03:42,527:INFO:display_container: 2
2022-10-01 13:03:42,527:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:03:42,527:INFO:create_model() successfully completed......................................
2022-10-01 13:03:42,602:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:42,602:INFO:Creating metrics dataframe
2022-10-01 13:03:42,605:INFO:Initializing Lasso Regression
2022-10-01 13:03:42,605:INFO:Total runtime is 0.014032852649688721 minutes
2022-10-01 13:03:42,605:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:42,606:INFO:Initializing create_model()
2022-10-01 13:03:42,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:42,606:INFO:Checking exceptions
2022-10-01 13:03:42,607:INFO:Importing libraries
2022-10-01 13:03:42,607:INFO:Copying training dataset
2022-10-01 13:03:42,608:INFO:Defining folds
2022-10-01 13:03:42,608:INFO:Declaring metric variables
2022-10-01 13:03:42,608:INFO:Importing untrained model
2022-10-01 13:03:42,609:INFO:Lasso Regression Imported successfully
2022-10-01 13:03:42,609:INFO:Starting cross validation
2022-10-01 13:03:42,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:42,632:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,665:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,698:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,730:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,762:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,794:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,826:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,858:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,891:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,927:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,940:INFO:Calculating mean and std
2022-10-01 13:03:42,940:INFO:Creating metrics dataframe
2022-10-01 13:03:42,942:INFO:Uploading results into container
2022-10-01 13:03:42,942:INFO:Uploading model into container now
2022-10-01 13:03:42,943:INFO:master_model_container: 2
2022-10-01 13:03:42,943:INFO:display_container: 2
2022-10-01 13:03:42,943:INFO:Lasso(random_state=123)
2022-10-01 13:03:42,943:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,013:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,013:INFO:Creating metrics dataframe
2022-10-01 13:03:43,017:INFO:Initializing Ridge Regression
2022-10-01 13:03:43,017:INFO:Total runtime is 0.0209088404973348 minutes
2022-10-01 13:03:43,017:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,017:INFO:Initializing create_model()
2022-10-01 13:03:43,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,017:INFO:Checking exceptions
2022-10-01 13:03:43,018:INFO:Importing libraries
2022-10-01 13:03:43,018:INFO:Copying training dataset
2022-10-01 13:03:43,021:INFO:Defining folds
2022-10-01 13:03:43,021:INFO:Declaring metric variables
2022-10-01 13:03:43,021:INFO:Importing untrained model
2022-10-01 13:03:43,021:INFO:Ridge Regression Imported successfully
2022-10-01 13:03:43,022:INFO:Starting cross validation
2022-10-01 13:03:43,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,035:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,052:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,070:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,087:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,104:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,120:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,137:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,154:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,171:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,188:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,195:INFO:Calculating mean and std
2022-10-01 13:03:43,196:INFO:Creating metrics dataframe
2022-10-01 13:03:43,198:INFO:Uploading results into container
2022-10-01 13:03:43,199:INFO:Uploading model into container now
2022-10-01 13:03:43,199:INFO:master_model_container: 3
2022-10-01 13:03:43,199:INFO:display_container: 2
2022-10-01 13:03:43,199:INFO:Ridge(random_state=123)
2022-10-01 13:03:43,199:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,273:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,274:INFO:Creating metrics dataframe
2022-10-01 13:03:43,277:INFO:Initializing Elastic Net
2022-10-01 13:03:43,277:INFO:Total runtime is 0.025241188208262128 minutes
2022-10-01 13:03:43,278:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,278:INFO:Initializing create_model()
2022-10-01 13:03:43,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,278:INFO:Checking exceptions
2022-10-01 13:03:43,279:INFO:Importing libraries
2022-10-01 13:03:43,279:INFO:Copying training dataset
2022-10-01 13:03:43,281:INFO:Defining folds
2022-10-01 13:03:43,281:INFO:Declaring metric variables
2022-10-01 13:03:43,281:INFO:Importing untrained model
2022-10-01 13:03:43,281:INFO:Elastic Net Imported successfully
2022-10-01 13:03:43,281:INFO:Starting cross validation
2022-10-01 13:03:43,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,293:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,311:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,329:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,347:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,364:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,382:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,399:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,418:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,435:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,459:INFO:Calculating mean and std
2022-10-01 13:03:43,460:INFO:Creating metrics dataframe
2022-10-01 13:03:43,462:INFO:Uploading results into container
2022-10-01 13:03:43,463:INFO:Uploading model into container now
2022-10-01 13:03:43,463:INFO:master_model_container: 4
2022-10-01 13:03:43,463:INFO:display_container: 2
2022-10-01 13:03:43,463:INFO:ElasticNet(random_state=123)
2022-10-01 13:03:43,463:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,554:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,554:INFO:Creating metrics dataframe
2022-10-01 13:03:43,558:INFO:Initializing Least Angle Regression
2022-10-01 13:03:43,558:INFO:Total runtime is 0.029923697312672935 minutes
2022-10-01 13:03:43,558:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,559:INFO:Initializing create_model()
2022-10-01 13:03:43,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,559:INFO:Checking exceptions
2022-10-01 13:03:43,560:INFO:Importing libraries
2022-10-01 13:03:43,560:INFO:Copying training dataset
2022-10-01 13:03:43,562:INFO:Defining folds
2022-10-01 13:03:43,562:INFO:Declaring metric variables
2022-10-01 13:03:43,562:INFO:Importing untrained model
2022-10-01 13:03:43,562:INFO:Least Angle Regression Imported successfully
2022-10-01 13:03:43,562:INFO:Starting cross validation
2022-10-01 13:03:43,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,593:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,611:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,631:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,649:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,669:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,687:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,705:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,725:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,745:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,754:INFO:Calculating mean and std
2022-10-01 13:03:43,754:INFO:Creating metrics dataframe
2022-10-01 13:03:43,757:INFO:Uploading results into container
2022-10-01 13:03:43,757:INFO:Uploading model into container now
2022-10-01 13:03:43,758:INFO:master_model_container: 5
2022-10-01 13:03:43,758:INFO:display_container: 2
2022-10-01 13:03:43,758:INFO:Lars(random_state=123)
2022-10-01 13:03:43,758:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,829:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,829:INFO:Creating metrics dataframe
2022-10-01 13:03:43,833:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:03:43,833:INFO:Total runtime is 0.03450520435969035 minutes
2022-10-01 13:03:43,833:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,833:INFO:Initializing create_model()
2022-10-01 13:03:43,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,833:INFO:Checking exceptions
2022-10-01 13:03:43,834:INFO:Importing libraries
2022-10-01 13:03:43,834:INFO:Copying training dataset
2022-10-01 13:03:43,836:INFO:Defining folds
2022-10-01 13:03:43,836:INFO:Declaring metric variables
2022-10-01 13:03:43,836:INFO:Importing untrained model
2022-10-01 13:03:43,836:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:03:43,836:INFO:Starting cross validation
2022-10-01 13:03:43,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,847:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,865:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,883:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,901:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,919:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,937:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,954:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,972:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,989:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:44,007:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:44,015:INFO:Calculating mean and std
2022-10-01 13:03:44,016:INFO:Creating metrics dataframe
2022-10-01 13:03:44,018:INFO:Uploading results into container
2022-10-01 13:03:44,018:INFO:Uploading model into container now
2022-10-01 13:03:44,018:INFO:master_model_container: 6
2022-10-01 13:03:44,019:INFO:display_container: 2
2022-10-01 13:03:44,019:INFO:LassoLars(random_state=123)
2022-10-01 13:03:44,019:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,092:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,092:INFO:Creating metrics dataframe
2022-10-01 13:03:44,096:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:03:44,096:INFO:Total runtime is 0.038887719313303634 minutes
2022-10-01 13:03:44,096:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,096:INFO:Initializing create_model()
2022-10-01 13:03:44,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,096:INFO:Checking exceptions
2022-10-01 13:03:44,097:INFO:Importing libraries
2022-10-01 13:03:44,097:INFO:Copying training dataset
2022-10-01 13:03:44,099:INFO:Defining folds
2022-10-01 13:03:44,099:INFO:Declaring metric variables
2022-10-01 13:03:44,099:INFO:Importing untrained model
2022-10-01 13:03:44,099:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:03:44,099:INFO:Starting cross validation
2022-10-01 13:03:44,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:44,109:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,126:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,143:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,160:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,177:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,193:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,210:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,226:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,243:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,259:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,267:INFO:Calculating mean and std
2022-10-01 13:03:44,268:INFO:Creating metrics dataframe
2022-10-01 13:03:44,270:INFO:Uploading results into container
2022-10-01 13:03:44,271:INFO:Uploading model into container now
2022-10-01 13:03:44,271:INFO:master_model_container: 7
2022-10-01 13:03:44,271:INFO:display_container: 2
2022-10-01 13:03:44,271:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:03:44,271:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,343:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,343:INFO:Creating metrics dataframe
2022-10-01 13:03:44,347:INFO:Initializing Bayesian Ridge
2022-10-01 13:03:44,347:INFO:Total runtime is 0.04306993881861369 minutes
2022-10-01 13:03:44,347:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,347:INFO:Initializing create_model()
2022-10-01 13:03:44,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,347:INFO:Checking exceptions
2022-10-01 13:03:44,348:INFO:Importing libraries
2022-10-01 13:03:44,348:INFO:Copying training dataset
2022-10-01 13:03:44,350:INFO:Defining folds
2022-10-01 13:03:44,350:INFO:Declaring metric variables
2022-10-01 13:03:44,350:INFO:Importing untrained model
2022-10-01 13:03:44,350:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:03:44,351:INFO:Starting cross validation
2022-10-01 13:03:44,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:44,526:INFO:Calculating mean and std
2022-10-01 13:03:44,527:INFO:Creating metrics dataframe
2022-10-01 13:03:44,529:INFO:Uploading results into container
2022-10-01 13:03:44,530:INFO:Uploading model into container now
2022-10-01 13:03:44,530:INFO:master_model_container: 8
2022-10-01 13:03:44,530:INFO:display_container: 2
2022-10-01 13:03:44,530:INFO:BayesianRidge()
2022-10-01 13:03:44,530:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,602:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,602:INFO:Creating metrics dataframe
2022-10-01 13:03:44,606:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:03:44,606:INFO:Total runtime is 0.047386050224304206 minutes
2022-10-01 13:03:44,606:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,606:INFO:Initializing create_model()
2022-10-01 13:03:44,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,606:INFO:Checking exceptions
2022-10-01 13:03:44,607:INFO:Importing libraries
2022-10-01 13:03:44,607:INFO:Copying training dataset
2022-10-01 13:03:44,609:INFO:Defining folds
2022-10-01 13:03:44,609:INFO:Declaring metric variables
2022-10-01 13:03:44,609:INFO:Importing untrained model
2022-10-01 13:03:44,609:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:03:44,609:INFO:Starting cross validation
2022-10-01 13:03:44,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:44,780:INFO:Calculating mean and std
2022-10-01 13:03:44,780:INFO:Creating metrics dataframe
2022-10-01 13:03:44,783:INFO:Uploading results into container
2022-10-01 13:03:44,783:INFO:Uploading model into container now
2022-10-01 13:03:44,783:INFO:master_model_container: 9
2022-10-01 13:03:44,783:INFO:display_container: 2
2022-10-01 13:03:44,783:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:03:44,784:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,857:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,857:INFO:Creating metrics dataframe
2022-10-01 13:03:44,860:INFO:Initializing Huber Regressor
2022-10-01 13:03:44,861:INFO:Total runtime is 0.05163491566975912 minutes
2022-10-01 13:03:44,861:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,861:INFO:Initializing create_model()
2022-10-01 13:03:44,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,861:INFO:Checking exceptions
2022-10-01 13:03:44,862:INFO:Importing libraries
2022-10-01 13:03:44,862:INFO:Copying training dataset
2022-10-01 13:03:44,864:INFO:Defining folds
2022-10-01 13:03:44,864:INFO:Declaring metric variables
2022-10-01 13:03:44,864:INFO:Importing untrained model
2022-10-01 13:03:44,864:INFO:Huber Regressor Imported successfully
2022-10-01 13:03:44,864:INFO:Starting cross validation
2022-10-01 13:03:44,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:45,092:INFO:Calculating mean and std
2022-10-01 13:03:45,093:INFO:Creating metrics dataframe
2022-10-01 13:03:45,096:INFO:Uploading results into container
2022-10-01 13:03:45,096:INFO:Uploading model into container now
2022-10-01 13:03:45,096:INFO:master_model_container: 10
2022-10-01 13:03:45,096:INFO:display_container: 2
2022-10-01 13:03:45,096:INFO:HuberRegressor()
2022-10-01 13:03:45,097:INFO:create_model() successfully completed......................................
2022-10-01 13:03:45,170:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:45,170:INFO:Creating metrics dataframe
2022-10-01 13:03:45,174:INFO:Initializing K Neighbors Regressor
2022-10-01 13:03:45,174:INFO:Total runtime is 0.056850190957387296 minutes
2022-10-01 13:03:45,174:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:45,174:INFO:Initializing create_model()
2022-10-01 13:03:45,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:45,174:INFO:Checking exceptions
2022-10-01 13:03:45,175:INFO:Importing libraries
2022-10-01 13:03:45,175:INFO:Copying training dataset
2022-10-01 13:03:45,177:INFO:Defining folds
2022-10-01 13:03:45,177:INFO:Declaring metric variables
2022-10-01 13:03:45,177:INFO:Importing untrained model
2022-10-01 13:03:45,177:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:03:45,178:INFO:Starting cross validation
2022-10-01 13:03:45,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:52,329:INFO:Calculating mean and std
2022-10-01 13:03:52,329:INFO:Creating metrics dataframe
2022-10-01 13:03:52,332:INFO:Uploading results into container
2022-10-01 13:03:52,332:INFO:Uploading model into container now
2022-10-01 13:03:52,333:INFO:master_model_container: 11
2022-10-01 13:03:52,333:INFO:display_container: 2
2022-10-01 13:03:52,333:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:03:52,333:INFO:create_model() successfully completed......................................
2022-10-01 13:03:52,412:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:52,412:INFO:Creating metrics dataframe
2022-10-01 13:03:52,418:INFO:Initializing Decision Tree Regressor
2022-10-01 13:03:52,418:INFO:Total runtime is 0.17758172353108725 minutes
2022-10-01 13:03:52,418:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:52,419:INFO:Initializing create_model()
2022-10-01 13:03:52,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:52,419:INFO:Checking exceptions
2022-10-01 13:03:52,420:INFO:Importing libraries
2022-10-01 13:03:52,420:INFO:Copying training dataset
2022-10-01 13:03:52,421:INFO:Defining folds
2022-10-01 13:03:52,421:INFO:Declaring metric variables
2022-10-01 13:03:52,422:INFO:Importing untrained model
2022-10-01 13:03:52,422:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:03:52,422:INFO:Starting cross validation
2022-10-01 13:03:52,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:52,610:INFO:Calculating mean and std
2022-10-01 13:03:52,611:INFO:Creating metrics dataframe
2022-10-01 13:03:52,614:INFO:Uploading results into container
2022-10-01 13:03:52,614:INFO:Uploading model into container now
2022-10-01 13:03:52,615:INFO:master_model_container: 12
2022-10-01 13:03:52,615:INFO:display_container: 2
2022-10-01 13:03:52,615:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:03:52,615:INFO:create_model() successfully completed......................................
2022-10-01 13:03:52,692:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:52,692:INFO:Creating metrics dataframe
2022-10-01 13:03:52,696:INFO:Initializing Random Forest Regressor
2022-10-01 13:03:52,696:INFO:Total runtime is 0.18223048845926923 minutes
2022-10-01 13:03:52,696:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:52,697:INFO:Initializing create_model()
2022-10-01 13:03:52,697:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:52,697:INFO:Checking exceptions
2022-10-01 13:03:52,698:INFO:Importing libraries
2022-10-01 13:03:52,698:INFO:Copying training dataset
2022-10-01 13:03:52,699:INFO:Defining folds
2022-10-01 13:03:52,700:INFO:Declaring metric variables
2022-10-01 13:03:52,700:INFO:Importing untrained model
2022-10-01 13:03:52,700:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:03:52,700:INFO:Starting cross validation
2022-10-01 13:03:52,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:56,731:INFO:Calculating mean and std
2022-10-01 13:03:56,732:INFO:Creating metrics dataframe
2022-10-01 13:03:56,735:INFO:Uploading results into container
2022-10-01 13:03:56,735:INFO:Uploading model into container now
2022-10-01 13:03:56,735:INFO:master_model_container: 13
2022-10-01 13:03:56,736:INFO:display_container: 2
2022-10-01 13:03:56,736:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:03:56,736:INFO:create_model() successfully completed......................................
2022-10-01 13:03:56,823:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:56,823:INFO:Creating metrics dataframe
2022-10-01 13:03:56,827:INFO:Initializing Extra Trees Regressor
2022-10-01 13:03:56,827:INFO:Total runtime is 0.251081395149231 minutes
2022-10-01 13:03:56,827:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:56,828:INFO:Initializing create_model()
2022-10-01 13:03:56,828:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:56,828:INFO:Checking exceptions
2022-10-01 13:03:56,829:INFO:Importing libraries
2022-10-01 13:03:56,829:INFO:Copying training dataset
2022-10-01 13:03:56,831:INFO:Defining folds
2022-10-01 13:03:56,831:INFO:Declaring metric variables
2022-10-01 13:03:56,831:INFO:Importing untrained model
2022-10-01 13:03:56,831:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:03:56,831:INFO:Starting cross validation
2022-10-01 13:03:56,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:58,234:INFO:Calculating mean and std
2022-10-01 13:03:58,235:INFO:Creating metrics dataframe
2022-10-01 13:03:58,238:INFO:Uploading results into container
2022-10-01 13:03:58,238:INFO:Uploading model into container now
2022-10-01 13:03:58,238:INFO:master_model_container: 14
2022-10-01 13:03:58,238:INFO:display_container: 2
2022-10-01 13:03:58,239:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:03:58,239:INFO:create_model() successfully completed......................................
2022-10-01 13:03:58,313:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:58,313:INFO:Creating metrics dataframe
2022-10-01 13:03:58,317:INFO:Initializing AdaBoost Regressor
2022-10-01 13:03:58,317:INFO:Total runtime is 0.2759131312370301 minutes
2022-10-01 13:03:58,317:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:58,317:INFO:Initializing create_model()
2022-10-01 13:03:58,317:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:58,317:INFO:Checking exceptions
2022-10-01 13:03:58,318:INFO:Importing libraries
2022-10-01 13:03:58,318:INFO:Copying training dataset
2022-10-01 13:03:58,320:INFO:Defining folds
2022-10-01 13:03:58,320:INFO:Declaring metric variables
2022-10-01 13:03:58,320:INFO:Importing untrained model
2022-10-01 13:03:58,320:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:03:58,321:INFO:Starting cross validation
2022-10-01 13:03:58,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:59,105:INFO:Calculating mean and std
2022-10-01 13:03:59,106:INFO:Creating metrics dataframe
2022-10-01 13:03:59,108:INFO:Uploading results into container
2022-10-01 13:03:59,108:INFO:Uploading model into container now
2022-10-01 13:03:59,109:INFO:master_model_container: 15
2022-10-01 13:03:59,109:INFO:display_container: 2
2022-10-01 13:03:59,109:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:03:59,109:INFO:create_model() successfully completed......................................
2022-10-01 13:03:59,186:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:59,186:INFO:Creating metrics dataframe
2022-10-01 13:03:59,190:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:03:59,190:INFO:Total runtime is 0.29044857819875086 minutes
2022-10-01 13:03:59,190:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:59,190:INFO:Initializing create_model()
2022-10-01 13:03:59,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:59,191:INFO:Checking exceptions
2022-10-01 13:03:59,192:INFO:Importing libraries
2022-10-01 13:03:59,192:INFO:Copying training dataset
2022-10-01 13:03:59,193:INFO:Defining folds
2022-10-01 13:03:59,193:INFO:Declaring metric variables
2022-10-01 13:03:59,193:INFO:Importing untrained model
2022-10-01 13:03:59,194:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:03:59,194:INFO:Starting cross validation
2022-10-01 13:03:59,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:59,807:INFO:Calculating mean and std
2022-10-01 13:03:59,808:INFO:Creating metrics dataframe
2022-10-01 13:03:59,811:INFO:Uploading results into container
2022-10-01 13:03:59,812:INFO:Uploading model into container now
2022-10-01 13:03:59,812:INFO:master_model_container: 16
2022-10-01 13:03:59,812:INFO:display_container: 2
2022-10-01 13:03:59,813:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:03:59,813:INFO:create_model() successfully completed......................................
2022-10-01 13:03:59,899:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:59,900:INFO:Creating metrics dataframe
2022-10-01 13:03:59,905:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:03:59,905:INFO:Total runtime is 0.3023785551389059 minutes
2022-10-01 13:03:59,906:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:59,906:INFO:Initializing create_model()
2022-10-01 13:03:59,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:59,906:INFO:Checking exceptions
2022-10-01 13:03:59,908:INFO:Importing libraries
2022-10-01 13:03:59,908:INFO:Copying training dataset
2022-10-01 13:03:59,910:INFO:Defining folds
2022-10-01 13:03:59,910:INFO:Declaring metric variables
2022-10-01 13:03:59,911:INFO:Importing untrained model
2022-10-01 13:03:59,911:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:03:59,911:INFO:Starting cross validation
2022-10-01 13:03:59,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:04:09,120:INFO:Calculating mean and std
2022-10-01 13:04:09,121:INFO:Creating metrics dataframe
2022-10-01 13:04:09,124:INFO:Uploading results into container
2022-10-01 13:04:09,125:INFO:Uploading model into container now
2022-10-01 13:04:09,125:INFO:master_model_container: 17
2022-10-01 13:04:09,125:INFO:display_container: 2
2022-10-01 13:04:09,126:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:04:09,126:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,212:INFO:SubProcess create_model() end ==================================
2022-10-01 13:04:09,212:INFO:Creating metrics dataframe
2022-10-01 13:04:09,217:INFO:Initializing Dummy Regressor
2022-10-01 13:04:09,217:INFO:Total runtime is 0.45757633447647095 minutes
2022-10-01 13:04:09,217:INFO:SubProcess create_model() called ==================================
2022-10-01 13:04:09,217:INFO:Initializing create_model()
2022-10-01 13:04:09,218:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:04:09,218:INFO:Checking exceptions
2022-10-01 13:04:09,219:INFO:Importing libraries
2022-10-01 13:04:09,219:INFO:Copying training dataset
2022-10-01 13:04:09,221:INFO:Defining folds
2022-10-01 13:04:09,221:INFO:Declaring metric variables
2022-10-01 13:04:09,221:INFO:Importing untrained model
2022-10-01 13:04:09,222:INFO:Dummy Regressor Imported successfully
2022-10-01 13:04:09,222:INFO:Starting cross validation
2022-10-01 13:04:09,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:04:09,393:INFO:Calculating mean and std
2022-10-01 13:04:09,393:INFO:Creating metrics dataframe
2022-10-01 13:04:09,396:INFO:Uploading results into container
2022-10-01 13:04:09,397:INFO:Uploading model into container now
2022-10-01 13:04:09,397:INFO:master_model_container: 18
2022-10-01 13:04:09,397:INFO:display_container: 2
2022-10-01 13:04:09,397:INFO:DummyRegressor()
2022-10-01 13:04:09,397:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,478:INFO:SubProcess create_model() end ==================================
2022-10-01 13:04:09,478:INFO:Creating metrics dataframe
2022-10-01 13:04:09,485:INFO:Initializing create_model()
2022-10-01 13:04:09,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:04:09,485:INFO:Checking exceptions
2022-10-01 13:04:09,487:INFO:Importing libraries
2022-10-01 13:04:09,487:INFO:Copying training dataset
2022-10-01 13:04:09,489:INFO:Defining folds
2022-10-01 13:04:09,489:INFO:Declaring metric variables
2022-10-01 13:04:09,489:INFO:Importing untrained model
2022-10-01 13:04:09,489:INFO:Declaring custom model
2022-10-01 13:04:09,489:INFO:Linear Regression Imported successfully
2022-10-01 13:04:09,490:INFO:Cross validation set to False
2022-10-01 13:04:09,490:INFO:Fitting Model
2022-10-01 13:04:09,514:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:04:09,514:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,616:INFO:master_model_container: 18
2022-10-01 13:04:09,616:INFO:display_container: 2
2022-10-01 13:04:09,616:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:04:09,616:INFO:compare_models() successfully completed......................................
2022-10-01 13:04:09,616:INFO:Initializing create_model()
2022-10-01 13:04:09,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:04:09,616:INFO:Checking exceptions
2022-10-01 13:04:09,620:INFO:Importing libraries
2022-10-01 13:04:09,620:INFO:Copying training dataset
2022-10-01 13:04:09,622:INFO:Defining folds
2022-10-01 13:04:09,622:INFO:Declaring metric variables
2022-10-01 13:04:09,622:INFO:Importing untrained model
2022-10-01 13:04:09,622:INFO:Declaring custom model
2022-10-01 13:04:09,623:INFO:Linear Regression Imported successfully
2022-10-01 13:04:09,623:INFO:Starting cross validation
2022-10-01 13:04:09,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:04:09,828:INFO:Calculating mean and std
2022-10-01 13:04:09,828:INFO:Creating metrics dataframe
2022-10-01 13:04:09,830:INFO:Finalizing model
2022-10-01 13:04:09,844:INFO:Uploading results into container
2022-10-01 13:04:09,845:INFO:Uploading model into container now
2022-10-01 13:04:09,856:INFO:master_model_container: 19
2022-10-01 13:04:09,856:INFO:display_container: 3
2022-10-01 13:04:09,856:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:04:09,856:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,957:INFO:Initializing evaluate_model()
2022-10-01 13:04:09,957:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-10-01 13:04:10,168:INFO:Initializing plot_model()
2022-10-01 13:04:10,168:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, system=True)
2022-10-01 13:04:10,168:INFO:Checking exceptions
2022-10-01 13:04:10,170:INFO:Preloading libraries
2022-10-01 13:04:10,170:INFO:Copying training dataset
2022-10-01 13:04:10,170:INFO:Plot type: pipeline
2022-10-01 13:04:31,398:INFO:Visual Rendered Successfully
2022-10-01 13:04:31,478:INFO:plot_model() successfully completed......................................
2022-10-01 13:04:31,481:INFO:Initializing predict_model()
2022-10-01 13:04:31,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002213D19ECB0>)
2022-10-01 13:04:31,481:INFO:Checking exceptions
2022-10-01 13:04:31,481:INFO:Preloading libraries
2022-10-01 13:04:31,481:INFO:Set up data.
2022-10-01 13:04:31,484:INFO:Set up index.
2022-10-01 13:04:31,759:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:44: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:32,590:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:05:51,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,975:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:05:53,498:INFO:PyCaret RegressionExperiment
2022-10-01 13:05:53,498:INFO:Logging name: reg-default-name
2022-10-01 13:05:53,498:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:05:53,498:INFO:version 3.0.0.rc4
2022-10-01 13:05:53,498:INFO:Initializing setup()
2022-10-01 13:05:53,498:INFO:self.USI: e0c5
2022-10-01 13:05:53,498:INFO:self.variable_keys: {'exp_name_log', 'target_param', 'variable_keys', 'master_model_container', 'pipeline', 'gpu_param', 'y_train', '_all_models', 'y_test', 'exp_id', 'data', 'fold_shuffle_param', 'seed', 'html_param', 'X_test', 'X_train', '_all_models_internal', '_gpu_n_jobs_param', 'USI', 'log_plots_param', '_available_plots', 'y', 'X', 'idx', '_all_metrics', 'transform_target_method_param', 'memory', 'n_jobs_param', 'transform_target_param', 'fold_groups_param', 'logging_param', '_ml_usecase', 'fold_generator', 'display_container'}
2022-10-01 13:05:53,498:INFO:Checking environment
2022-10-01 13:05:53,498:INFO:python_version: 3.10.7
2022-10-01 13:05:53,498:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:05:53,498:INFO:machine: AMD64
2022-10-01 13:05:53,510:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:05:53,510:INFO:Memory: svmem(total=8497213440, available=2094174208, percent=75.4, used=6403039232, free=2094174208)
2022-10-01 13:05:53,510:INFO:Physical Core: 6
2022-10-01 13:05:53,510:INFO:Logical Core: 12
2022-10-01 13:05:53,510:INFO:Checking libraries
2022-10-01 13:05:53,510:INFO:System:
2022-10-01 13:05:53,510:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:05:53,510:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:05:53,510:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:05:53,510:INFO:PyCaret required dependencies:
2022-10-01 13:05:53,510:INFO:                 pip: 22.2.2
2022-10-01 13:05:53,510:INFO:          setuptools: 63.2.0
2022-10-01 13:05:53,510:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:05:53,510:INFO:             IPython: 8.5.0
2022-10-01 13:05:53,510:INFO:          ipywidgets: 8.0.2
2022-10-01 13:05:53,510:INFO:                tqdm: 4.64.1
2022-10-01 13:05:53,510:INFO:               numpy: 1.22.4
2022-10-01 13:05:53,510:INFO:              pandas: 1.4.4
2022-10-01 13:05:53,510:INFO:              jinja2: 3.1.2
2022-10-01 13:05:53,510:INFO:               scipy: 1.8.1
2022-10-01 13:05:53,510:INFO:              joblib: 1.2.0
2022-10-01 13:05:53,510:INFO:             sklearn: 1.1.2
2022-10-01 13:05:53,510:INFO:                pyod: 1.0.5
2022-10-01 13:05:53,510:INFO:            imblearn: 0.9.1
2022-10-01 13:05:53,510:INFO:   category_encoders: 2.5.0
2022-10-01 13:05:53,510:INFO:            lightgbm: 3.3.2
2022-10-01 13:05:53,510:INFO:               numba: 0.55.2
2022-10-01 13:05:53,510:INFO:            requests: 2.28.1
2022-10-01 13:05:53,510:INFO:          matplotlib: 3.6.0
2022-10-01 13:05:53,510:INFO:          scikitplot: 0.3.7
2022-10-01 13:05:53,510:INFO:         yellowbrick: 1.5
2022-10-01 13:05:53,510:INFO:              plotly: 5.10.0
2022-10-01 13:05:53,510:INFO:             kaleido: 0.2.1
2022-10-01 13:05:53,510:INFO:         statsmodels: 0.13.2
2022-10-01 13:05:53,510:INFO:              sktime: 0.13.4
2022-10-01 13:05:53,510:INFO:               tbats: 1.1.0
2022-10-01 13:05:53,510:INFO:            pmdarima: 1.8.5
2022-10-01 13:05:53,510:INFO:              psutil: 5.9.2
2022-10-01 13:05:53,511:INFO:PyCaret optional dependencies:
2022-10-01 13:05:53,526:INFO:                shap: Not installed
2022-10-01 13:05:53,526:INFO:           interpret: Not installed
2022-10-01 13:05:53,526:INFO:                umap: Not installed
2022-10-01 13:05:53,526:INFO:    pandas_profiling: Not installed
2022-10-01 13:05:53,526:INFO:  explainerdashboard: Not installed
2022-10-01 13:05:53,526:INFO:             autoviz: Not installed
2022-10-01 13:05:53,526:INFO:           fairlearn: Not installed
2022-10-01 13:05:53,527:INFO:             xgboost: Not installed
2022-10-01 13:05:53,527:INFO:            catboost: Not installed
2022-10-01 13:05:53,527:INFO:              kmodes: Not installed
2022-10-01 13:05:53,527:INFO:             mlxtend: Not installed
2022-10-01 13:05:53,527:INFO:       statsforecast: Not installed
2022-10-01 13:05:53,527:INFO:        tune_sklearn: Not installed
2022-10-01 13:05:53,527:INFO:                 ray: Not installed
2022-10-01 13:05:53,527:INFO:            hyperopt: Not installed
2022-10-01 13:05:53,527:INFO:              optuna: Not installed
2022-10-01 13:05:53,527:INFO:               skopt: Not installed
2022-10-01 13:05:53,527:INFO:              mlflow: Not installed
2022-10-01 13:05:53,527:INFO:              gradio: Not installed
2022-10-01 13:05:53,527:INFO:             fastapi: Not installed
2022-10-01 13:05:53,527:INFO:             uvicorn: Not installed
2022-10-01 13:05:53,527:INFO:              m2cgen: Not installed
2022-10-01 13:05:53,527:INFO:           evidently: Not installed
2022-10-01 13:05:53,527:INFO:                nltk: Not installed
2022-10-01 13:05:53,527:INFO:            pyLDAvis: Not installed
2022-10-01 13:05:53,527:INFO:              gensim: Not installed
2022-10-01 13:05:53,527:INFO:               spacy: Not installed
2022-10-01 13:05:53,527:INFO:           wordcloud: Not installed
2022-10-01 13:05:53,527:INFO:            textblob: Not installed
2022-10-01 13:05:53,527:INFO:               fugue: Not installed
2022-10-01 13:05:53,528:INFO:           streamlit: Not installed
2022-10-01 13:05:53,528:INFO:             prophet: Not installed
2022-10-01 13:05:53,528:INFO:None
2022-10-01 13:05:53,528:INFO:Set up GPU usage.
2022-10-01 13:05:53,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,528:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:05:53,528:INFO:Set up data.
2022-10-01 13:05:53,533:INFO:Set up train/test split.
2022-10-01 13:05:53,615:INFO:Set up index.
2022-10-01 13:05:53,615:INFO:Set up folding strategy.
2022-10-01 13:05:53,615:INFO:Assigning column types.
2022-10-01 13:05:53,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:05:53,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,618:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,622:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,681:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,682:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,724:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,110:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,117:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,124:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,484:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:05:54,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,491:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,498:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,581:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,862:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,862:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,868:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,951:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,228:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:05:55,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,241:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,595:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,684:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,959:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:05:55,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,056:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,429:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,429:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,474:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,711:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:05:56,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:57,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,475:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:05:57,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,482:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,235:INFO:Preparing preprocessing pipeline...
2022-10-01 13:05:58,236:INFO:Set up simple imputation.
2022-10-01 13:05:58,236:INFO:Set up variance threshold.
2022-10-01 13:05:58,252:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:05:58,259:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:05:58,259:INFO:Creating final display dataframe.
2022-10-01 13:05:58,342:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              e0c5
2022-10-01 13:05:58,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:59,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:59,117:INFO:setup() successfully completed in 5.62s...............
2022-10-01 13:05:59,117:INFO:Initializing compare_models()
2022-10-01 13:05:59,117:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:05:59,117:INFO:Checking exceptions
2022-10-01 13:05:59,118:INFO:Preparing display monitor
2022-10-01 13:05:59,122:INFO:Initializing Linear Regression
2022-10-01 13:05:59,122:INFO:Total runtime is 0.0 minutes
2022-10-01 13:05:59,122:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,122:INFO:Initializing create_model()
2022-10-01 13:05:59,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,122:INFO:Checking exceptions
2022-10-01 13:05:59,124:INFO:Importing libraries
2022-10-01 13:05:59,124:INFO:Copying training dataset
2022-10-01 13:05:59,126:INFO:Defining folds
2022-10-01 13:05:59,126:INFO:Declaring metric variables
2022-10-01 13:05:59,126:INFO:Importing untrained model
2022-10-01 13:05:59,126:INFO:Linear Regression Imported successfully
2022-10-01 13:05:59,126:INFO:Starting cross validation
2022-10-01 13:05:59,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,333:INFO:Calculating mean and std
2022-10-01 13:05:59,334:INFO:Creating metrics dataframe
2022-10-01 13:05:59,337:INFO:Uploading results into container
2022-10-01 13:05:59,337:INFO:Uploading model into container now
2022-10-01 13:05:59,337:INFO:master_model_container: 1
2022-10-01 13:05:59,337:INFO:display_container: 2
2022-10-01 13:05:59,337:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:05:59,338:INFO:create_model() successfully completed......................................
2022-10-01 13:05:59,414:INFO:SubProcess create_model() end ==================================
2022-10-01 13:05:59,415:INFO:Creating metrics dataframe
2022-10-01 13:05:59,418:INFO:Initializing Lasso Regression
2022-10-01 13:05:59,418:INFO:Total runtime is 0.004932638009389242 minutes
2022-10-01 13:05:59,418:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,418:INFO:Initializing create_model()
2022-10-01 13:05:59,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,418:INFO:Checking exceptions
2022-10-01 13:05:59,419:INFO:Importing libraries
2022-10-01 13:05:59,419:INFO:Copying training dataset
2022-10-01 13:05:59,421:INFO:Defining folds
2022-10-01 13:05:59,421:INFO:Declaring metric variables
2022-10-01 13:05:59,421:INFO:Importing untrained model
2022-10-01 13:05:59,421:INFO:Lasso Regression Imported successfully
2022-10-01 13:05:59,422:INFO:Starting cross validation
2022-10-01 13:05:59,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,434:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,470:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,488:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,506:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,523:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,541:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,558:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,575:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,592:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,600:INFO:Calculating mean and std
2022-10-01 13:05:59,600:INFO:Creating metrics dataframe
2022-10-01 13:05:59,603:INFO:Uploading results into container
2022-10-01 13:05:59,603:INFO:Uploading model into container now
2022-10-01 13:05:59,603:INFO:master_model_container: 2
2022-10-01 13:05:59,603:INFO:display_container: 2
2022-10-01 13:05:59,604:INFO:Lasso(random_state=123)
2022-10-01 13:05:59,604:INFO:create_model() successfully completed......................................
2022-10-01 13:05:59,677:INFO:SubProcess create_model() end ==================================
2022-10-01 13:05:59,677:INFO:Creating metrics dataframe
2022-10-01 13:05:59,681:INFO:Initializing Ridge Regression
2022-10-01 13:05:59,681:INFO:Total runtime is 0.009314374128977457 minutes
2022-10-01 13:05:59,681:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,681:INFO:Initializing create_model()
2022-10-01 13:05:59,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,682:INFO:Checking exceptions
2022-10-01 13:05:59,682:INFO:Importing libraries
2022-10-01 13:05:59,683:INFO:Copying training dataset
2022-10-01 13:05:59,684:INFO:Defining folds
2022-10-01 13:05:59,684:INFO:Declaring metric variables
2022-10-01 13:05:59,684:INFO:Importing untrained model
2022-10-01 13:05:59,685:INFO:Ridge Regression Imported successfully
2022-10-01 13:05:59,685:INFO:Starting cross validation
2022-10-01 13:05:59,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,696:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,713:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,731:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,748:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,765:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,783:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,801:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,819:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,836:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,853:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,861:INFO:Calculating mean and std
2022-10-01 13:05:59,862:INFO:Creating metrics dataframe
2022-10-01 13:05:59,864:INFO:Uploading results into container
2022-10-01 13:05:59,864:INFO:Uploading model into container now
2022-10-01 13:05:59,865:INFO:master_model_container: 3
2022-10-01 13:05:59,865:INFO:display_container: 2
2022-10-01 13:05:59,865:INFO:Ridge(random_state=123)
2022-10-01 13:05:59,865:INFO:create_model() successfully completed......................................
2022-10-01 13:05:59,938:INFO:SubProcess create_model() end ==================================
2022-10-01 13:05:59,938:INFO:Creating metrics dataframe
2022-10-01 13:05:59,943:INFO:Initializing Elastic Net
2022-10-01 13:05:59,943:INFO:Total runtime is 0.01368023157119751 minutes
2022-10-01 13:05:59,944:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,944:INFO:Initializing create_model()
2022-10-01 13:05:59,944:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,944:INFO:Checking exceptions
2022-10-01 13:05:59,946:INFO:Importing libraries
2022-10-01 13:05:59,946:INFO:Copying training dataset
2022-10-01 13:05:59,948:INFO:Defining folds
2022-10-01 13:05:59,948:INFO:Declaring metric variables
2022-10-01 13:05:59,948:INFO:Importing untrained model
2022-10-01 13:05:59,948:INFO:Elastic Net Imported successfully
2022-10-01 13:05:59,949:INFO:Starting cross validation
2022-10-01 13:05:59,949:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,963:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,981:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,000:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,018:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,036:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,053:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,071:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,088:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,106:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,123:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,131:INFO:Calculating mean and std
2022-10-01 13:06:00,132:INFO:Creating metrics dataframe
2022-10-01 13:06:00,134:INFO:Uploading results into container
2022-10-01 13:06:00,135:INFO:Uploading model into container now
2022-10-01 13:06:00,135:INFO:master_model_container: 4
2022-10-01 13:06:00,135:INFO:display_container: 2
2022-10-01 13:06:00,135:INFO:ElasticNet(random_state=123)
2022-10-01 13:06:00,135:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,207:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:00,207:INFO:Creating metrics dataframe
2022-10-01 13:06:00,211:INFO:Initializing Least Angle Regression
2022-10-01 13:06:00,211:INFO:Total runtime is 0.018145803610483804 minutes
2022-10-01 13:06:00,211:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:00,211:INFO:Initializing create_model()
2022-10-01 13:06:00,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:00,211:INFO:Checking exceptions
2022-10-01 13:06:00,212:INFO:Importing libraries
2022-10-01 13:06:00,212:INFO:Copying training dataset
2022-10-01 13:06:00,214:INFO:Defining folds
2022-10-01 13:06:00,214:INFO:Declaring metric variables
2022-10-01 13:06:00,214:INFO:Importing untrained model
2022-10-01 13:06:00,214:INFO:Least Angle Regression Imported successfully
2022-10-01 13:06:00,215:INFO:Starting cross validation
2022-10-01 13:06:00,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:00,225:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,243:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,261:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,278:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,296:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,313:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,330:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,348:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,366:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,383:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,392:INFO:Calculating mean and std
2022-10-01 13:06:00,392:INFO:Creating metrics dataframe
2022-10-01 13:06:00,395:INFO:Uploading results into container
2022-10-01 13:06:00,395:INFO:Uploading model into container now
2022-10-01 13:06:00,395:INFO:master_model_container: 5
2022-10-01 13:06:00,395:INFO:display_container: 2
2022-10-01 13:06:00,396:INFO:Lars(random_state=123)
2022-10-01 13:06:00,396:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,471:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:00,471:INFO:Creating metrics dataframe
2022-10-01 13:06:00,475:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:06:00,475:INFO:Total runtime is 0.02254459063212077 minutes
2022-10-01 13:06:00,475:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:00,476:INFO:Initializing create_model()
2022-10-01 13:06:00,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:00,476:INFO:Checking exceptions
2022-10-01 13:06:00,477:INFO:Importing libraries
2022-10-01 13:06:00,477:INFO:Copying training dataset
2022-10-01 13:06:00,478:INFO:Defining folds
2022-10-01 13:06:00,478:INFO:Declaring metric variables
2022-10-01 13:06:00,478:INFO:Importing untrained model
2022-10-01 13:06:00,479:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:06:00,479:INFO:Starting cross validation
2022-10-01 13:06:00,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:00,490:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,507:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,525:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,543:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,565:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,584:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,601:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,619:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,637:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,656:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,664:INFO:Calculating mean and std
2022-10-01 13:06:00,665:INFO:Creating metrics dataframe
2022-10-01 13:06:00,667:INFO:Uploading results into container
2022-10-01 13:06:00,667:INFO:Uploading model into container now
2022-10-01 13:06:00,668:INFO:master_model_container: 6
2022-10-01 13:06:00,668:INFO:display_container: 2
2022-10-01 13:06:00,668:INFO:LassoLars(random_state=123)
2022-10-01 13:06:00,668:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,741:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:00,741:INFO:Creating metrics dataframe
2022-10-01 13:06:00,745:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:06:00,745:INFO:Total runtime is 0.027043473720550538 minutes
2022-10-01 13:06:00,745:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:00,746:INFO:Initializing create_model()
2022-10-01 13:06:00,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:00,746:INFO:Checking exceptions
2022-10-01 13:06:00,747:INFO:Importing libraries
2022-10-01 13:06:00,747:INFO:Copying training dataset
2022-10-01 13:06:00,748:INFO:Defining folds
2022-10-01 13:06:00,748:INFO:Declaring metric variables
2022-10-01 13:06:00,749:INFO:Importing untrained model
2022-10-01 13:06:00,749:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:06:00,749:INFO:Starting cross validation
2022-10-01 13:06:00,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:00,759:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,776:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,794:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,810:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,827:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,845:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,862:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,879:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,896:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,912:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,921:INFO:Calculating mean and std
2022-10-01 13:06:00,921:INFO:Creating metrics dataframe
2022-10-01 13:06:00,924:INFO:Uploading results into container
2022-10-01 13:06:00,924:INFO:Uploading model into container now
2022-10-01 13:06:00,925:INFO:master_model_container: 7
2022-10-01 13:06:00,925:INFO:display_container: 2
2022-10-01 13:06:00,925:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:06:00,925:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,999:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,000:INFO:Creating metrics dataframe
2022-10-01 13:06:01,003:INFO:Initializing Bayesian Ridge
2022-10-01 13:06:01,003:INFO:Total runtime is 0.031342236200968425 minutes
2022-10-01 13:06:01,004:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,004:INFO:Initializing create_model()
2022-10-01 13:06:01,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,004:INFO:Checking exceptions
2022-10-01 13:06:01,005:INFO:Importing libraries
2022-10-01 13:06:01,005:INFO:Copying training dataset
2022-10-01 13:06:01,006:INFO:Defining folds
2022-10-01 13:06:01,006:INFO:Declaring metric variables
2022-10-01 13:06:01,007:INFO:Importing untrained model
2022-10-01 13:06:01,007:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:06:01,007:INFO:Starting cross validation
2022-10-01 13:06:01,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:01,181:INFO:Calculating mean and std
2022-10-01 13:06:01,181:INFO:Creating metrics dataframe
2022-10-01 13:06:01,184:INFO:Uploading results into container
2022-10-01 13:06:01,184:INFO:Uploading model into container now
2022-10-01 13:06:01,184:INFO:master_model_container: 8
2022-10-01 13:06:01,185:INFO:display_container: 2
2022-10-01 13:06:01,185:INFO:BayesianRidge()
2022-10-01 13:06:01,185:INFO:create_model() successfully completed......................................
2022-10-01 13:06:01,257:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,258:INFO:Creating metrics dataframe
2022-10-01 13:06:01,261:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:06:01,261:INFO:Total runtime is 0.03564048608144124 minutes
2022-10-01 13:06:01,262:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,262:INFO:Initializing create_model()
2022-10-01 13:06:01,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,262:INFO:Checking exceptions
2022-10-01 13:06:01,263:INFO:Importing libraries
2022-10-01 13:06:01,263:INFO:Copying training dataset
2022-10-01 13:06:01,264:INFO:Defining folds
2022-10-01 13:06:01,264:INFO:Declaring metric variables
2022-10-01 13:06:01,265:INFO:Importing untrained model
2022-10-01 13:06:01,265:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:06:01,265:INFO:Starting cross validation
2022-10-01 13:06:01,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:01,433:INFO:Calculating mean and std
2022-10-01 13:06:01,434:INFO:Creating metrics dataframe
2022-10-01 13:06:01,436:INFO:Uploading results into container
2022-10-01 13:06:01,436:INFO:Uploading model into container now
2022-10-01 13:06:01,437:INFO:master_model_container: 9
2022-10-01 13:06:01,437:INFO:display_container: 2
2022-10-01 13:06:01,437:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:06:01,437:INFO:create_model() successfully completed......................................
2022-10-01 13:06:01,512:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,512:INFO:Creating metrics dataframe
2022-10-01 13:06:01,516:INFO:Initializing Huber Regressor
2022-10-01 13:06:01,516:INFO:Total runtime is 0.03989164034525553 minutes
2022-10-01 13:06:01,517:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,517:INFO:Initializing create_model()
2022-10-01 13:06:01,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,517:INFO:Checking exceptions
2022-10-01 13:06:01,518:INFO:Importing libraries
2022-10-01 13:06:01,518:INFO:Copying training dataset
2022-10-01 13:06:01,519:INFO:Defining folds
2022-10-01 13:06:01,520:INFO:Declaring metric variables
2022-10-01 13:06:01,520:INFO:Importing untrained model
2022-10-01 13:06:01,520:INFO:Huber Regressor Imported successfully
2022-10-01 13:06:01,520:INFO:Starting cross validation
2022-10-01 13:06:01,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:01,745:INFO:Calculating mean and std
2022-10-01 13:06:01,745:INFO:Creating metrics dataframe
2022-10-01 13:06:01,748:INFO:Uploading results into container
2022-10-01 13:06:01,748:INFO:Uploading model into container now
2022-10-01 13:06:01,749:INFO:master_model_container: 10
2022-10-01 13:06:01,749:INFO:display_container: 2
2022-10-01 13:06:01,749:INFO:HuberRegressor()
2022-10-01 13:06:01,749:INFO:create_model() successfully completed......................................
2022-10-01 13:06:01,822:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,822:INFO:Creating metrics dataframe
2022-10-01 13:06:01,826:INFO:Initializing K Neighbors Regressor
2022-10-01 13:06:01,826:INFO:Total runtime is 0.04505751530329386 minutes
2022-10-01 13:06:01,826:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,826:INFO:Initializing create_model()
2022-10-01 13:06:01,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,826:INFO:Checking exceptions
2022-10-01 13:06:01,827:INFO:Importing libraries
2022-10-01 13:06:01,827:INFO:Copying training dataset
2022-10-01 13:06:01,829:INFO:Defining folds
2022-10-01 13:06:01,829:INFO:Declaring metric variables
2022-10-01 13:06:01,829:INFO:Importing untrained model
2022-10-01 13:06:01,829:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:06:01,829:INFO:Starting cross validation
2022-10-01 13:06:01,830:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:04,363:INFO:Calculating mean and std
2022-10-01 13:06:04,364:INFO:Creating metrics dataframe
2022-10-01 13:06:04,366:INFO:Uploading results into container
2022-10-01 13:06:04,367:INFO:Uploading model into container now
2022-10-01 13:06:04,367:INFO:master_model_container: 11
2022-10-01 13:06:04,367:INFO:display_container: 2
2022-10-01 13:06:04,367:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:06:04,368:INFO:create_model() successfully completed......................................
2022-10-01 13:06:04,477:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:04,478:INFO:Creating metrics dataframe
2022-10-01 13:06:04,484:INFO:Initializing Decision Tree Regressor
2022-10-01 13:06:04,484:INFO:Total runtime is 0.0893617312113444 minutes
2022-10-01 13:06:04,485:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:04,485:INFO:Initializing create_model()
2022-10-01 13:06:04,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:04,485:INFO:Checking exceptions
2022-10-01 13:06:04,487:INFO:Importing libraries
2022-10-01 13:06:04,487:INFO:Copying training dataset
2022-10-01 13:06:04,490:INFO:Defining folds
2022-10-01 13:06:04,490:INFO:Declaring metric variables
2022-10-01 13:06:04,490:INFO:Importing untrained model
2022-10-01 13:06:04,490:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:06:04,490:INFO:Starting cross validation
2022-10-01 13:06:04,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:04,769:INFO:Calculating mean and std
2022-10-01 13:06:04,770:INFO:Creating metrics dataframe
2022-10-01 13:06:04,773:INFO:Uploading results into container
2022-10-01 13:06:04,774:INFO:Uploading model into container now
2022-10-01 13:06:04,774:INFO:master_model_container: 12
2022-10-01 13:06:04,775:INFO:display_container: 2
2022-10-01 13:06:04,775:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:06:04,775:INFO:create_model() successfully completed......................................
2022-10-01 13:06:04,870:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:04,870:INFO:Creating metrics dataframe
2022-10-01 13:06:04,875:INFO:Initializing Random Forest Regressor
2022-10-01 13:06:04,876:INFO:Total runtime is 0.09589329957962037 minutes
2022-10-01 13:06:04,876:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:04,876:INFO:Initializing create_model()
2022-10-01 13:06:04,876:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:04,876:INFO:Checking exceptions
2022-10-01 13:06:04,878:INFO:Importing libraries
2022-10-01 13:06:04,878:INFO:Copying training dataset
2022-10-01 13:06:04,880:INFO:Defining folds
2022-10-01 13:06:04,880:INFO:Declaring metric variables
2022-10-01 13:06:04,881:INFO:Importing untrained model
2022-10-01 13:06:04,881:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:06:04,882:INFO:Starting cross validation
2022-10-01 13:06:04,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:06,131:INFO:Calculating mean and std
2022-10-01 13:06:06,131:INFO:Creating metrics dataframe
2022-10-01 13:06:06,134:INFO:Uploading results into container
2022-10-01 13:06:06,134:INFO:Uploading model into container now
2022-10-01 13:06:06,135:INFO:master_model_container: 13
2022-10-01 13:06:06,135:INFO:display_container: 2
2022-10-01 13:06:06,135:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:06:06,135:INFO:create_model() successfully completed......................................
2022-10-01 13:06:06,207:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:06,207:INFO:Creating metrics dataframe
2022-10-01 13:06:06,211:INFO:Initializing Extra Trees Regressor
2022-10-01 13:06:06,211:INFO:Total runtime is 0.11813648541768393 minutes
2022-10-01 13:06:06,211:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:06,212:INFO:Initializing create_model()
2022-10-01 13:06:06,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:06,212:INFO:Checking exceptions
2022-10-01 13:06:06,213:INFO:Importing libraries
2022-10-01 13:06:06,213:INFO:Copying training dataset
2022-10-01 13:06:06,214:INFO:Defining folds
2022-10-01 13:06:06,214:INFO:Declaring metric variables
2022-10-01 13:06:06,215:INFO:Importing untrained model
2022-10-01 13:06:06,215:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:06:06,215:INFO:Starting cross validation
2022-10-01 13:06:06,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:07,340:INFO:Calculating mean and std
2022-10-01 13:06:07,341:INFO:Creating metrics dataframe
2022-10-01 13:06:07,343:INFO:Uploading results into container
2022-10-01 13:06:07,343:INFO:Uploading model into container now
2022-10-01 13:06:07,344:INFO:master_model_container: 14
2022-10-01 13:06:07,344:INFO:display_container: 2
2022-10-01 13:06:07,344:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:06:07,344:INFO:create_model() successfully completed......................................
2022-10-01 13:06:07,415:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:07,415:INFO:Creating metrics dataframe
2022-10-01 13:06:07,419:INFO:Initializing AdaBoost Regressor
2022-10-01 13:06:07,419:INFO:Total runtime is 0.13827123244603476 minutes
2022-10-01 13:06:07,419:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:07,419:INFO:Initializing create_model()
2022-10-01 13:06:07,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:07,419:INFO:Checking exceptions
2022-10-01 13:06:07,420:INFO:Importing libraries
2022-10-01 13:06:07,420:INFO:Copying training dataset
2022-10-01 13:06:07,422:INFO:Defining folds
2022-10-01 13:06:07,422:INFO:Declaring metric variables
2022-10-01 13:06:07,422:INFO:Importing untrained model
2022-10-01 13:06:07,422:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:06:07,423:INFO:Starting cross validation
2022-10-01 13:06:07,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:08,084:INFO:Calculating mean and std
2022-10-01 13:06:08,085:INFO:Creating metrics dataframe
2022-10-01 13:06:08,087:INFO:Uploading results into container
2022-10-01 13:06:08,088:INFO:Uploading model into container now
2022-10-01 13:06:08,088:INFO:master_model_container: 15
2022-10-01 13:06:08,088:INFO:display_container: 2
2022-10-01 13:06:08,088:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:06:08,088:INFO:create_model() successfully completed......................................
2022-10-01 13:06:08,162:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:08,162:INFO:Creating metrics dataframe
2022-10-01 13:06:08,166:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:06:08,166:INFO:Total runtime is 0.15071785052617392 minutes
2022-10-01 13:06:08,166:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:08,166:INFO:Initializing create_model()
2022-10-01 13:06:08,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:08,166:INFO:Checking exceptions
2022-10-01 13:06:08,167:INFO:Importing libraries
2022-10-01 13:06:08,167:INFO:Copying training dataset
2022-10-01 13:06:08,169:INFO:Defining folds
2022-10-01 13:06:08,169:INFO:Declaring metric variables
2022-10-01 13:06:08,169:INFO:Importing untrained model
2022-10-01 13:06:08,169:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:06:08,170:INFO:Starting cross validation
2022-10-01 13:06:08,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:08,747:INFO:Calculating mean and std
2022-10-01 13:06:08,748:INFO:Creating metrics dataframe
2022-10-01 13:06:08,750:INFO:Uploading results into container
2022-10-01 13:06:08,750:INFO:Uploading model into container now
2022-10-01 13:06:08,751:INFO:master_model_container: 16
2022-10-01 13:06:08,751:INFO:display_container: 2
2022-10-01 13:06:08,751:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:06:08,751:INFO:create_model() successfully completed......................................
2022-10-01 13:06:08,826:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:08,826:INFO:Creating metrics dataframe
2022-10-01 13:06:08,830:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:06:08,830:INFO:Total runtime is 0.16179788112640384 minutes
2022-10-01 13:06:08,831:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:08,831:INFO:Initializing create_model()
2022-10-01 13:06:08,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:08,831:INFO:Checking exceptions
2022-10-01 13:06:08,832:INFO:Importing libraries
2022-10-01 13:06:08,832:INFO:Copying training dataset
2022-10-01 13:06:08,833:INFO:Defining folds
2022-10-01 13:06:08,833:INFO:Declaring metric variables
2022-10-01 13:06:08,834:INFO:Importing untrained model
2022-10-01 13:06:08,834:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:06:08,834:INFO:Starting cross validation
2022-10-01 13:06:08,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:13,294:INFO:Calculating mean and std
2022-10-01 13:06:13,294:INFO:Creating metrics dataframe
2022-10-01 13:06:13,297:INFO:Uploading results into container
2022-10-01 13:06:13,298:INFO:Uploading model into container now
2022-10-01 13:06:13,298:INFO:master_model_container: 17
2022-10-01 13:06:13,299:INFO:display_container: 2
2022-10-01 13:06:13,299:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:06:13,299:INFO:create_model() successfully completed......................................
2022-10-01 13:06:13,384:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:13,384:INFO:Creating metrics dataframe
2022-10-01 13:06:13,389:INFO:Initializing Dummy Regressor
2022-10-01 13:06:13,389:INFO:Total runtime is 0.23777735233306888 minutes
2022-10-01 13:06:13,390:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:13,390:INFO:Initializing create_model()
2022-10-01 13:06:13,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:13,390:INFO:Checking exceptions
2022-10-01 13:06:13,391:INFO:Importing libraries
2022-10-01 13:06:13,391:INFO:Copying training dataset
2022-10-01 13:06:13,393:INFO:Defining folds
2022-10-01 13:06:13,394:INFO:Declaring metric variables
2022-10-01 13:06:13,394:INFO:Importing untrained model
2022-10-01 13:06:13,394:INFO:Dummy Regressor Imported successfully
2022-10-01 13:06:13,394:INFO:Starting cross validation
2022-10-01 13:06:13,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:13,548:INFO:Calculating mean and std
2022-10-01 13:06:13,549:INFO:Creating metrics dataframe
2022-10-01 13:06:13,551:INFO:Uploading results into container
2022-10-01 13:06:13,552:INFO:Uploading model into container now
2022-10-01 13:06:13,552:INFO:master_model_container: 18
2022-10-01 13:06:13,552:INFO:display_container: 2
2022-10-01 13:06:13,552:INFO:DummyRegressor()
2022-10-01 13:06:13,552:INFO:create_model() successfully completed......................................
2022-10-01 13:06:13,628:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:13,628:INFO:Creating metrics dataframe
2022-10-01 13:06:13,633:INFO:Initializing create_model()
2022-10-01 13:06:13,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:13,633:INFO:Checking exceptions
2022-10-01 13:06:13,634:INFO:Importing libraries
2022-10-01 13:06:13,635:INFO:Copying training dataset
2022-10-01 13:06:13,636:INFO:Defining folds
2022-10-01 13:06:13,636:INFO:Declaring metric variables
2022-10-01 13:06:13,636:INFO:Importing untrained model
2022-10-01 13:06:13,636:INFO:Declaring custom model
2022-10-01 13:06:13,637:INFO:Linear Regression Imported successfully
2022-10-01 13:06:13,637:INFO:Cross validation set to False
2022-10-01 13:06:13,637:INFO:Fitting Model
2022-10-01 13:06:13,646:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:06:13,646:INFO:create_model() successfully completed......................................
2022-10-01 13:06:13,733:INFO:master_model_container: 18
2022-10-01 13:06:13,733:INFO:display_container: 2
2022-10-01 13:06:13,733:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:06:13,733:INFO:compare_models() successfully completed......................................
2022-10-01 13:06:13,734:INFO:Initializing create_model()
2022-10-01 13:06:13,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:13,734:INFO:Checking exceptions
2022-10-01 13:06:13,737:INFO:Importing libraries
2022-10-01 13:06:13,737:INFO:Copying training dataset
2022-10-01 13:06:13,739:INFO:Defining folds
2022-10-01 13:06:13,739:INFO:Declaring metric variables
2022-10-01 13:06:13,739:INFO:Importing untrained model
2022-10-01 13:06:13,739:INFO:Declaring custom model
2022-10-01 13:06:13,739:INFO:Linear Regression Imported successfully
2022-10-01 13:06:13,740:INFO:Starting cross validation
2022-10-01 13:06:13,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:13,954:INFO:Calculating mean and std
2022-10-01 13:06:13,955:INFO:Creating metrics dataframe
2022-10-01 13:06:13,956:INFO:Finalizing model
2022-10-01 13:06:13,967:INFO:Uploading results into container
2022-10-01 13:06:13,967:INFO:Uploading model into container now
2022-10-01 13:06:13,976:INFO:master_model_container: 19
2022-10-01 13:06:13,976:INFO:display_container: 3
2022-10-01 13:06:13,976:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:06:13,977:INFO:create_model() successfully completed......................................
2022-10-01 13:06:14,077:INFO:Initializing evaluate_model()
2022-10-01 13:06:14,077:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-10-01 13:06:14,118:INFO:Initializing plot_model()
2022-10-01 13:06:14,118:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, system=True)
2022-10-01 13:06:14,118:INFO:Checking exceptions
2022-10-01 13:06:14,120:INFO:Preloading libraries
2022-10-01 13:06:14,120:INFO:Copying training dataset
2022-10-01 13:06:14,120:INFO:Plot type: pipeline
2022-10-01 13:06:20,737:INFO:Visual Rendered Successfully
2022-10-01 13:06:20,839:INFO:plot_model() successfully completed......................................
2022-10-01 13:06:20,842:INFO:Initializing predict_model()
2022-10-01 13:06:20,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000280D1B92C20>)
2022-10-01 13:06:20,842:INFO:Checking exceptions
2022-10-01 13:06:20,842:INFO:Preloading libraries
2022-10-01 13:06:20,842:INFO:Set up data.
2022-10-01 13:06:20,846:INFO:Set up index.
2022-10-01 13:06:20,981:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:44: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:08,425:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:08:09,916:INFO:PyCaret RegressionExperiment
2022-10-01 13:08:09,916:INFO:Logging name: reg-default-name
2022-10-01 13:08:09,916:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:08:09,916:INFO:version 3.0.0.rc4
2022-10-01 13:08:09,917:INFO:Initializing setup()
2022-10-01 13:08:09,917:INFO:self.USI: 8662
2022-10-01 13:08:09,917:INFO:self.variable_keys: {'fold_shuffle_param', '_available_plots', 'pipeline', 'X', 'transform_target_param', 'display_container', 'data', 'logging_param', 'fold_groups_param', 'n_jobs_param', 'y_test', 'transform_target_method_param', 'master_model_container', '_all_models', 'gpu_param', 'X_test', 'idx', '_gpu_n_jobs_param', 'memory', 'target_param', 'y_train', '_ml_usecase', 'html_param', 'fold_generator', 'USI', 'exp_id', '_all_models_internal', 'variable_keys', 'exp_name_log', 'seed', 'log_plots_param', '_all_metrics', 'X_train', 'y'}
2022-10-01 13:08:09,917:INFO:Checking environment
2022-10-01 13:08:09,917:INFO:python_version: 3.10.7
2022-10-01 13:08:09,917:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:08:09,917:INFO:machine: AMD64
2022-10-01 13:08:09,930:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:08:09,930:INFO:Memory: svmem(total=8497213440, available=2150166528, percent=74.7, used=6347046912, free=2150166528)
2022-10-01 13:08:09,930:INFO:Physical Core: 6
2022-10-01 13:08:09,930:INFO:Logical Core: 12
2022-10-01 13:08:09,930:INFO:Checking libraries
2022-10-01 13:08:09,930:INFO:System:
2022-10-01 13:08:09,930:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:08:09,930:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:08:09,930:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:08:09,930:INFO:PyCaret required dependencies:
2022-10-01 13:08:09,930:INFO:                 pip: 22.2.2
2022-10-01 13:08:09,930:INFO:          setuptools: 63.2.0
2022-10-01 13:08:09,930:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:08:09,931:INFO:             IPython: 8.5.0
2022-10-01 13:08:09,931:INFO:          ipywidgets: 8.0.2
2022-10-01 13:08:09,931:INFO:                tqdm: 4.64.1
2022-10-01 13:08:09,931:INFO:               numpy: 1.22.4
2022-10-01 13:08:09,931:INFO:              pandas: 1.4.4
2022-10-01 13:08:09,931:INFO:              jinja2: 3.1.2
2022-10-01 13:08:09,931:INFO:               scipy: 1.8.1
2022-10-01 13:08:09,931:INFO:              joblib: 1.2.0
2022-10-01 13:08:09,931:INFO:             sklearn: 1.1.2
2022-10-01 13:08:09,931:INFO:                pyod: 1.0.5
2022-10-01 13:08:09,931:INFO:            imblearn: 0.9.1
2022-10-01 13:08:09,931:INFO:   category_encoders: 2.5.0
2022-10-01 13:08:09,931:INFO:            lightgbm: 3.3.2
2022-10-01 13:08:09,931:INFO:               numba: 0.55.2
2022-10-01 13:08:09,931:INFO:            requests: 2.28.1
2022-10-01 13:08:09,931:INFO:          matplotlib: 3.6.0
2022-10-01 13:08:09,931:INFO:          scikitplot: 0.3.7
2022-10-01 13:08:09,931:INFO:         yellowbrick: 1.5
2022-10-01 13:08:09,931:INFO:              plotly: 5.10.0
2022-10-01 13:08:09,931:INFO:             kaleido: 0.2.1
2022-10-01 13:08:09,932:INFO:         statsmodels: 0.13.2
2022-10-01 13:08:09,932:INFO:              sktime: 0.13.4
2022-10-01 13:08:09,932:INFO:               tbats: 1.1.0
2022-10-01 13:08:09,932:INFO:            pmdarima: 1.8.5
2022-10-01 13:08:09,932:INFO:              psutil: 5.9.2
2022-10-01 13:08:09,932:INFO:PyCaret optional dependencies:
2022-10-01 13:08:09,946:INFO:                shap: Not installed
2022-10-01 13:08:09,946:INFO:           interpret: Not installed
2022-10-01 13:08:09,946:INFO:                umap: Not installed
2022-10-01 13:08:09,946:INFO:    pandas_profiling: Not installed
2022-10-01 13:08:09,946:INFO:  explainerdashboard: Not installed
2022-10-01 13:08:09,946:INFO:             autoviz: Not installed
2022-10-01 13:08:09,947:INFO:           fairlearn: Not installed
2022-10-01 13:08:09,947:INFO:             xgboost: Not installed
2022-10-01 13:08:09,947:INFO:            catboost: Not installed
2022-10-01 13:08:09,947:INFO:              kmodes: Not installed
2022-10-01 13:08:09,947:INFO:             mlxtend: Not installed
2022-10-01 13:08:09,947:INFO:       statsforecast: Not installed
2022-10-01 13:08:09,947:INFO:        tune_sklearn: Not installed
2022-10-01 13:08:09,947:INFO:                 ray: Not installed
2022-10-01 13:08:09,947:INFO:            hyperopt: Not installed
2022-10-01 13:08:09,947:INFO:              optuna: Not installed
2022-10-01 13:08:09,947:INFO:               skopt: Not installed
2022-10-01 13:08:09,947:INFO:              mlflow: Not installed
2022-10-01 13:08:09,947:INFO:              gradio: Not installed
2022-10-01 13:08:09,947:INFO:             fastapi: Not installed
2022-10-01 13:08:09,947:INFO:             uvicorn: Not installed
2022-10-01 13:08:09,947:INFO:              m2cgen: Not installed
2022-10-01 13:08:09,947:INFO:           evidently: Not installed
2022-10-01 13:08:09,947:INFO:                nltk: Not installed
2022-10-01 13:08:09,947:INFO:            pyLDAvis: Not installed
2022-10-01 13:08:09,948:INFO:              gensim: Not installed
2022-10-01 13:08:09,948:INFO:               spacy: Not installed
2022-10-01 13:08:09,948:INFO:           wordcloud: Not installed
2022-10-01 13:08:09,948:INFO:            textblob: Not installed
2022-10-01 13:08:09,948:INFO:               fugue: Not installed
2022-10-01 13:08:09,948:INFO:           streamlit: Not installed
2022-10-01 13:08:09,948:INFO:             prophet: Not installed
2022-10-01 13:08:09,948:INFO:None
2022-10-01 13:08:09,948:INFO:Set up GPU usage.
2022-10-01 13:08:09,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,948:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:08:09,948:INFO:Set up data.
2022-10-01 13:08:09,952:INFO:Set up train/test split.
2022-10-01 13:08:09,955:INFO:Set up index.
2022-10-01 13:08:09,955:INFO:Set up folding strategy.
2022-10-01 13:08:09,955:INFO:Assigning column types.
2022-10-01 13:08:09,957:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:08:09,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,957:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:08:09,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,962:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:09,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,967:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:09,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,067:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:10,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:10,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,650:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,658:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,658:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,667:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,116:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:08:11,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,125:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,546:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,546:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,553:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,560:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,644:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,977:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:08:11,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,992:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,127:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,509:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,795:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:08:12,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,894:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:13,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:13,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,552:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:08:13,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:13,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,055:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:14,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,321:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:08:14,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,417:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,052:INFO:Preparing preprocessing pipeline...
2022-10-01 13:08:15,053:INFO:Set up simple imputation.
2022-10-01 13:08:15,053:INFO:Set up variance threshold.
2022-10-01 13:08:15,069:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:08:15,076:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:08:15,076:INFO:Creating final display dataframe.
2022-10-01 13:08:15,155:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              8662
2022-10-01 13:08:15,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,888:INFO:setup() successfully completed in 5.97s...............
2022-10-01 13:08:15,888:INFO:Initializing compare_models()
2022-10-01 13:08:15,888:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:08:15,888:INFO:Checking exceptions
2022-10-01 13:08:15,890:INFO:Preparing display monitor
2022-10-01 13:08:15,893:INFO:Initializing Linear Regression
2022-10-01 13:08:15,893:INFO:Total runtime is 0.0 minutes
2022-10-01 13:08:15,893:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:15,893:INFO:Initializing create_model()
2022-10-01 13:08:15,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:15,894:INFO:Checking exceptions
2022-10-01 13:08:15,895:INFO:Importing libraries
2022-10-01 13:08:15,895:INFO:Copying training dataset
2022-10-01 13:08:15,897:INFO:Defining folds
2022-10-01 13:08:15,897:INFO:Declaring metric variables
2022-10-01 13:08:15,897:INFO:Importing untrained model
2022-10-01 13:08:15,898:INFO:Linear Regression Imported successfully
2022-10-01 13:08:15,898:INFO:Starting cross validation
2022-10-01 13:08:15,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,099:INFO:Calculating mean and std
2022-10-01 13:08:16,100:INFO:Creating metrics dataframe
2022-10-01 13:08:16,102:INFO:Uploading results into container
2022-10-01 13:08:16,102:INFO:Uploading model into container now
2022-10-01 13:08:16,103:INFO:master_model_container: 1
2022-10-01 13:08:16,103:INFO:display_container: 2
2022-10-01 13:08:16,103:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:16,103:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,182:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,182:INFO:Creating metrics dataframe
2022-10-01 13:08:16,185:INFO:Initializing Lasso Regression
2022-10-01 13:08:16,185:INFO:Total runtime is 0.004865928490956625 minutes
2022-10-01 13:08:16,186:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,186:INFO:Initializing create_model()
2022-10-01 13:08:16,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,186:INFO:Checking exceptions
2022-10-01 13:08:16,187:INFO:Importing libraries
2022-10-01 13:08:16,187:INFO:Copying training dataset
2022-10-01 13:08:16,188:INFO:Defining folds
2022-10-01 13:08:16,189:INFO:Declaring metric variables
2022-10-01 13:08:16,189:INFO:Importing untrained model
2022-10-01 13:08:16,189:INFO:Lasso Regression Imported successfully
2022-10-01 13:08:16,189:INFO:Starting cross validation
2022-10-01 13:08:16,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,202:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,220:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,238:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,256:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,274:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,290:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,308:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,326:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,344:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,362:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,370:INFO:Calculating mean and std
2022-10-01 13:08:16,370:INFO:Creating metrics dataframe
2022-10-01 13:08:16,373:INFO:Uploading results into container
2022-10-01 13:08:16,373:INFO:Uploading model into container now
2022-10-01 13:08:16,373:INFO:master_model_container: 2
2022-10-01 13:08:16,373:INFO:display_container: 2
2022-10-01 13:08:16,374:INFO:Lasso(random_state=123)
2022-10-01 13:08:16,374:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,451:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,451:INFO:Creating metrics dataframe
2022-10-01 13:08:16,455:INFO:Initializing Ridge Regression
2022-10-01 13:08:16,455:INFO:Total runtime is 0.009381421407063802 minutes
2022-10-01 13:08:16,455:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,455:INFO:Initializing create_model()
2022-10-01 13:08:16,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,455:INFO:Checking exceptions
2022-10-01 13:08:16,457:INFO:Importing libraries
2022-10-01 13:08:16,457:INFO:Copying training dataset
2022-10-01 13:08:16,458:INFO:Defining folds
2022-10-01 13:08:16,458:INFO:Declaring metric variables
2022-10-01 13:08:16,459:INFO:Importing untrained model
2022-10-01 13:08:16,459:INFO:Ridge Regression Imported successfully
2022-10-01 13:08:16,459:INFO:Starting cross validation
2022-10-01 13:08:16,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,472:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,491:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,509:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,527:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,544:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,562:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,580:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,597:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,615:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,633:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,641:INFO:Calculating mean and std
2022-10-01 13:08:16,642:INFO:Creating metrics dataframe
2022-10-01 13:08:16,644:INFO:Uploading results into container
2022-10-01 13:08:16,645:INFO:Uploading model into container now
2022-10-01 13:08:16,645:INFO:master_model_container: 3
2022-10-01 13:08:16,645:INFO:display_container: 2
2022-10-01 13:08:16,645:INFO:Ridge(random_state=123)
2022-10-01 13:08:16,645:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,716:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,717:INFO:Creating metrics dataframe
2022-10-01 13:08:16,721:INFO:Initializing Elastic Net
2022-10-01 13:08:16,721:INFO:Total runtime is 0.013813165823618571 minutes
2022-10-01 13:08:16,721:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,721:INFO:Initializing create_model()
2022-10-01 13:08:16,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,721:INFO:Checking exceptions
2022-10-01 13:08:16,722:INFO:Importing libraries
2022-10-01 13:08:16,722:INFO:Copying training dataset
2022-10-01 13:08:16,724:INFO:Defining folds
2022-10-01 13:08:16,724:INFO:Declaring metric variables
2022-10-01 13:08:16,724:INFO:Importing untrained model
2022-10-01 13:08:16,724:INFO:Elastic Net Imported successfully
2022-10-01 13:08:16,725:INFO:Starting cross validation
2022-10-01 13:08:16,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,737:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,755:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,773:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,792:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,810:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,828:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,845:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,863:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,881:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,898:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,906:INFO:Calculating mean and std
2022-10-01 13:08:16,907:INFO:Creating metrics dataframe
2022-10-01 13:08:16,909:INFO:Uploading results into container
2022-10-01 13:08:16,909:INFO:Uploading model into container now
2022-10-01 13:08:16,910:INFO:master_model_container: 4
2022-10-01 13:08:16,910:INFO:display_container: 2
2022-10-01 13:08:16,910:INFO:ElasticNet(random_state=123)
2022-10-01 13:08:16,910:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,988:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,988:INFO:Creating metrics dataframe
2022-10-01 13:08:16,992:INFO:Initializing Least Angle Regression
2022-10-01 13:08:16,992:INFO:Total runtime is 0.018328972657521567 minutes
2022-10-01 13:08:16,992:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,992:INFO:Initializing create_model()
2022-10-01 13:08:16,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,992:INFO:Checking exceptions
2022-10-01 13:08:16,993:INFO:Importing libraries
2022-10-01 13:08:16,993:INFO:Copying training dataset
2022-10-01 13:08:16,995:INFO:Defining folds
2022-10-01 13:08:16,995:INFO:Declaring metric variables
2022-10-01 13:08:16,995:INFO:Importing untrained model
2022-10-01 13:08:16,995:INFO:Least Angle Regression Imported successfully
2022-10-01 13:08:16,996:INFO:Starting cross validation
2022-10-01 13:08:16,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,007:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,024:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,042:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,060:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,077:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,095:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,112:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,130:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,147:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,164:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,173:INFO:Calculating mean and std
2022-10-01 13:08:17,174:INFO:Creating metrics dataframe
2022-10-01 13:08:17,176:INFO:Uploading results into container
2022-10-01 13:08:17,176:INFO:Uploading model into container now
2022-10-01 13:08:17,177:INFO:master_model_container: 5
2022-10-01 13:08:17,177:INFO:display_container: 2
2022-10-01 13:08:17,177:INFO:Lars(random_state=123)
2022-10-01 13:08:17,177:INFO:create_model() successfully completed......................................
2022-10-01 13:08:17,250:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:17,250:INFO:Creating metrics dataframe
2022-10-01 13:08:17,254:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:08:17,254:INFO:Total runtime is 0.022697432835896814 minutes
2022-10-01 13:08:17,255:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:17,255:INFO:Initializing create_model()
2022-10-01 13:08:17,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:17,255:INFO:Checking exceptions
2022-10-01 13:08:17,256:INFO:Importing libraries
2022-10-01 13:08:17,256:INFO:Copying training dataset
2022-10-01 13:08:17,257:INFO:Defining folds
2022-10-01 13:08:17,257:INFO:Declaring metric variables
2022-10-01 13:08:17,258:INFO:Importing untrained model
2022-10-01 13:08:17,258:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:08:17,258:INFO:Starting cross validation
2022-10-01 13:08:17,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,268:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,286:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,321:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,338:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,355:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,373:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,390:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,407:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,423:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,431:INFO:Calculating mean and std
2022-10-01 13:08:17,432:INFO:Creating metrics dataframe
2022-10-01 13:08:17,434:INFO:Uploading results into container
2022-10-01 13:08:17,435:INFO:Uploading model into container now
2022-10-01 13:08:17,435:INFO:master_model_container: 6
2022-10-01 13:08:17,435:INFO:display_container: 2
2022-10-01 13:08:17,435:INFO:LassoLars(random_state=123)
2022-10-01 13:08:17,435:INFO:create_model() successfully completed......................................
2022-10-01 13:08:17,509:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:17,509:INFO:Creating metrics dataframe
2022-10-01 13:08:17,513:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:08:17,513:INFO:Total runtime is 0.02701296408971151 minutes
2022-10-01 13:08:17,513:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:17,514:INFO:Initializing create_model()
2022-10-01 13:08:17,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:17,514:INFO:Checking exceptions
2022-10-01 13:08:17,515:INFO:Importing libraries
2022-10-01 13:08:17,515:INFO:Copying training dataset
2022-10-01 13:08:17,516:INFO:Defining folds
2022-10-01 13:08:17,516:INFO:Declaring metric variables
2022-10-01 13:08:17,516:INFO:Importing untrained model
2022-10-01 13:08:17,517:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:08:17,517:INFO:Starting cross validation
2022-10-01 13:08:17,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,527:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,543:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,560:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,577:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,594:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,610:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,627:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,643:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,660:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,677:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,685:INFO:Calculating mean and std
2022-10-01 13:08:17,686:INFO:Creating metrics dataframe
2022-10-01 13:08:17,688:INFO:Uploading results into container
2022-10-01 13:08:17,688:INFO:Uploading model into container now
2022-10-01 13:08:17,689:INFO:master_model_container: 7
2022-10-01 13:08:17,689:INFO:display_container: 2
2022-10-01 13:08:17,689:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:08:17,689:INFO:create_model() successfully completed......................................
2022-10-01 13:08:17,764:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:17,764:INFO:Creating metrics dataframe
2022-10-01 13:08:17,768:INFO:Initializing Bayesian Ridge
2022-10-01 13:08:17,768:INFO:Total runtime is 0.03126139640808106 minutes
2022-10-01 13:08:17,768:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:17,768:INFO:Initializing create_model()
2022-10-01 13:08:17,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:17,769:INFO:Checking exceptions
2022-10-01 13:08:17,770:INFO:Importing libraries
2022-10-01 13:08:17,770:INFO:Copying training dataset
2022-10-01 13:08:17,771:INFO:Defining folds
2022-10-01 13:08:17,771:INFO:Declaring metric variables
2022-10-01 13:08:17,771:INFO:Importing untrained model
2022-10-01 13:08:17,772:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:08:17,772:INFO:Starting cross validation
2022-10-01 13:08:17,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,951:INFO:Calculating mean and std
2022-10-01 13:08:17,951:INFO:Creating metrics dataframe
2022-10-01 13:08:17,954:INFO:Uploading results into container
2022-10-01 13:08:17,954:INFO:Uploading model into container now
2022-10-01 13:08:17,955:INFO:master_model_container: 8
2022-10-01 13:08:17,955:INFO:display_container: 2
2022-10-01 13:08:17,955:INFO:BayesianRidge()
2022-10-01 13:08:17,955:INFO:create_model() successfully completed......................................
2022-10-01 13:08:18,027:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:18,027:INFO:Creating metrics dataframe
2022-10-01 13:08:18,031:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:08:18,031:INFO:Total runtime is 0.03564391136169434 minutes
2022-10-01 13:08:18,031:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:18,031:INFO:Initializing create_model()
2022-10-01 13:08:18,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:18,031:INFO:Checking exceptions
2022-10-01 13:08:18,032:INFO:Importing libraries
2022-10-01 13:08:18,032:INFO:Copying training dataset
2022-10-01 13:08:18,034:INFO:Defining folds
2022-10-01 13:08:18,034:INFO:Declaring metric variables
2022-10-01 13:08:18,034:INFO:Importing untrained model
2022-10-01 13:08:18,034:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:08:18,035:INFO:Starting cross validation
2022-10-01 13:08:18,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:18,206:INFO:Calculating mean and std
2022-10-01 13:08:18,207:INFO:Creating metrics dataframe
2022-10-01 13:08:18,209:INFO:Uploading results into container
2022-10-01 13:08:18,210:INFO:Uploading model into container now
2022-10-01 13:08:18,210:INFO:master_model_container: 9
2022-10-01 13:08:18,210:INFO:display_container: 2
2022-10-01 13:08:18,210:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:08:18,210:INFO:create_model() successfully completed......................................
2022-10-01 13:08:18,283:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:18,283:INFO:Creating metrics dataframe
2022-10-01 13:08:18,286:INFO:Initializing Huber Regressor
2022-10-01 13:08:18,287:INFO:Total runtime is 0.039909434318542485 minutes
2022-10-01 13:08:18,287:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:18,287:INFO:Initializing create_model()
2022-10-01 13:08:18,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:18,287:INFO:Checking exceptions
2022-10-01 13:08:18,288:INFO:Importing libraries
2022-10-01 13:08:18,288:INFO:Copying training dataset
2022-10-01 13:08:18,290:INFO:Defining folds
2022-10-01 13:08:18,290:INFO:Declaring metric variables
2022-10-01 13:08:18,290:INFO:Importing untrained model
2022-10-01 13:08:18,290:INFO:Huber Regressor Imported successfully
2022-10-01 13:08:18,291:INFO:Starting cross validation
2022-10-01 13:08:18,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:18,520:INFO:Calculating mean and std
2022-10-01 13:08:18,522:INFO:Creating metrics dataframe
2022-10-01 13:08:18,524:INFO:Uploading results into container
2022-10-01 13:08:18,524:INFO:Uploading model into container now
2022-10-01 13:08:18,525:INFO:master_model_container: 10
2022-10-01 13:08:18,525:INFO:display_container: 2
2022-10-01 13:08:18,525:INFO:HuberRegressor()
2022-10-01 13:08:18,525:INFO:create_model() successfully completed......................................
2022-10-01 13:08:18,596:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:18,596:INFO:Creating metrics dataframe
2022-10-01 13:08:18,600:INFO:Initializing K Neighbors Regressor
2022-10-01 13:08:18,601:INFO:Total runtime is 0.04513713916142782 minutes
2022-10-01 13:08:18,601:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:18,601:INFO:Initializing create_model()
2022-10-01 13:08:18,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:18,601:INFO:Checking exceptions
2022-10-01 13:08:18,602:INFO:Importing libraries
2022-10-01 13:08:18,602:INFO:Copying training dataset
2022-10-01 13:08:18,604:INFO:Defining folds
2022-10-01 13:08:18,604:INFO:Declaring metric variables
2022-10-01 13:08:18,604:INFO:Importing untrained model
2022-10-01 13:08:18,604:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:08:18,604:INFO:Starting cross validation
2022-10-01 13:08:18,605:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:21,241:INFO:Calculating mean and std
2022-10-01 13:08:21,242:INFO:Creating metrics dataframe
2022-10-01 13:08:21,245:INFO:Uploading results into container
2022-10-01 13:08:21,246:INFO:Uploading model into container now
2022-10-01 13:08:21,246:INFO:master_model_container: 11
2022-10-01 13:08:21,247:INFO:display_container: 2
2022-10-01 13:08:21,247:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:08:21,247:INFO:create_model() successfully completed......................................
2022-10-01 13:08:21,358:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:21,358:INFO:Creating metrics dataframe
2022-10-01 13:08:21,363:INFO:Initializing Decision Tree Regressor
2022-10-01 13:08:21,363:INFO:Total runtime is 0.09117413759231568 minutes
2022-10-01 13:08:21,364:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:21,364:INFO:Initializing create_model()
2022-10-01 13:08:21,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:21,364:INFO:Checking exceptions
2022-10-01 13:08:21,366:INFO:Importing libraries
2022-10-01 13:08:21,366:INFO:Copying training dataset
2022-10-01 13:08:21,368:INFO:Defining folds
2022-10-01 13:08:21,368:INFO:Declaring metric variables
2022-10-01 13:08:21,369:INFO:Importing untrained model
2022-10-01 13:08:21,369:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:08:21,369:INFO:Starting cross validation
2022-10-01 13:08:21,370:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:21,623:INFO:Calculating mean and std
2022-10-01 13:08:21,624:INFO:Creating metrics dataframe
2022-10-01 13:08:21,628:INFO:Uploading results into container
2022-10-01 13:08:21,629:INFO:Uploading model into container now
2022-10-01 13:08:21,629:INFO:master_model_container: 12
2022-10-01 13:08:21,629:INFO:display_container: 2
2022-10-01 13:08:21,630:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:08:21,630:INFO:create_model() successfully completed......................................
2022-10-01 13:08:21,748:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:21,748:INFO:Creating metrics dataframe
2022-10-01 13:08:21,754:INFO:Initializing Random Forest Regressor
2022-10-01 13:08:21,754:INFO:Total runtime is 0.09768903652826946 minutes
2022-10-01 13:08:21,754:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:21,754:INFO:Initializing create_model()
2022-10-01 13:08:21,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:21,755:INFO:Checking exceptions
2022-10-01 13:08:21,756:INFO:Importing libraries
2022-10-01 13:08:21,756:INFO:Copying training dataset
2022-10-01 13:08:21,759:INFO:Defining folds
2022-10-01 13:08:21,759:INFO:Declaring metric variables
2022-10-01 13:08:21,759:INFO:Importing untrained model
2022-10-01 13:08:21,760:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:08:21,760:INFO:Starting cross validation
2022-10-01 13:08:21,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:23,086:INFO:Calculating mean and std
2022-10-01 13:08:23,087:INFO:Creating metrics dataframe
2022-10-01 13:08:23,089:INFO:Uploading results into container
2022-10-01 13:08:23,089:INFO:Uploading model into container now
2022-10-01 13:08:23,090:INFO:master_model_container: 13
2022-10-01 13:08:23,090:INFO:display_container: 2
2022-10-01 13:08:23,090:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:08:23,090:INFO:create_model() successfully completed......................................
2022-10-01 13:08:23,162:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:23,162:INFO:Creating metrics dataframe
2022-10-01 13:08:23,166:INFO:Initializing Extra Trees Regressor
2022-10-01 13:08:23,166:INFO:Total runtime is 0.12122886180877687 minutes
2022-10-01 13:08:23,166:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:23,166:INFO:Initializing create_model()
2022-10-01 13:08:23,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:23,166:INFO:Checking exceptions
2022-10-01 13:08:23,167:INFO:Importing libraries
2022-10-01 13:08:23,167:INFO:Copying training dataset
2022-10-01 13:08:23,169:INFO:Defining folds
2022-10-01 13:08:23,169:INFO:Declaring metric variables
2022-10-01 13:08:23,169:INFO:Importing untrained model
2022-10-01 13:08:23,169:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:08:23,170:INFO:Starting cross validation
2022-10-01 13:08:23,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:24,294:INFO:Calculating mean and std
2022-10-01 13:08:24,295:INFO:Creating metrics dataframe
2022-10-01 13:08:24,297:INFO:Uploading results into container
2022-10-01 13:08:24,298:INFO:Uploading model into container now
2022-10-01 13:08:24,298:INFO:master_model_container: 14
2022-10-01 13:08:24,298:INFO:display_container: 2
2022-10-01 13:08:24,298:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:08:24,298:INFO:create_model() successfully completed......................................
2022-10-01 13:08:24,371:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:24,371:INFO:Creating metrics dataframe
2022-10-01 13:08:24,375:INFO:Initializing AdaBoost Regressor
2022-10-01 13:08:24,375:INFO:Total runtime is 0.14137912193934124 minutes
2022-10-01 13:08:24,375:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:24,375:INFO:Initializing create_model()
2022-10-01 13:08:24,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:24,375:INFO:Checking exceptions
2022-10-01 13:08:24,376:INFO:Importing libraries
2022-10-01 13:08:24,376:INFO:Copying training dataset
2022-10-01 13:08:24,378:INFO:Defining folds
2022-10-01 13:08:24,378:INFO:Declaring metric variables
2022-10-01 13:08:24,378:INFO:Importing untrained model
2022-10-01 13:08:24,378:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:08:24,378:INFO:Starting cross validation
2022-10-01 13:08:24,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:25,038:INFO:Calculating mean and std
2022-10-01 13:08:25,038:INFO:Creating metrics dataframe
2022-10-01 13:08:25,041:INFO:Uploading results into container
2022-10-01 13:08:25,041:INFO:Uploading model into container now
2022-10-01 13:08:25,042:INFO:master_model_container: 15
2022-10-01 13:08:25,042:INFO:display_container: 2
2022-10-01 13:08:25,042:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:08:25,042:INFO:create_model() successfully completed......................................
2022-10-01 13:08:25,114:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:25,114:INFO:Creating metrics dataframe
2022-10-01 13:08:25,118:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:08:25,118:INFO:Total runtime is 0.15375872850418093 minutes
2022-10-01 13:08:25,118:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:25,119:INFO:Initializing create_model()
2022-10-01 13:08:25,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:25,119:INFO:Checking exceptions
2022-10-01 13:08:25,120:INFO:Importing libraries
2022-10-01 13:08:25,120:INFO:Copying training dataset
2022-10-01 13:08:25,121:INFO:Defining folds
2022-10-01 13:08:25,121:INFO:Declaring metric variables
2022-10-01 13:08:25,122:INFO:Importing untrained model
2022-10-01 13:08:25,122:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:08:25,122:INFO:Starting cross validation
2022-10-01 13:08:25,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:25,693:INFO:Calculating mean and std
2022-10-01 13:08:25,694:INFO:Creating metrics dataframe
2022-10-01 13:08:25,697:INFO:Uploading results into container
2022-10-01 13:08:25,697:INFO:Uploading model into container now
2022-10-01 13:08:25,697:INFO:master_model_container: 16
2022-10-01 13:08:25,697:INFO:display_container: 2
2022-10-01 13:08:25,698:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:08:25,698:INFO:create_model() successfully completed......................................
2022-10-01 13:08:25,769:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:25,769:INFO:Creating metrics dataframe
2022-10-01 13:08:25,773:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:08:25,773:INFO:Total runtime is 0.16467247406641644 minutes
2022-10-01 13:08:25,774:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:25,774:INFO:Initializing create_model()
2022-10-01 13:08:25,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:25,774:INFO:Checking exceptions
2022-10-01 13:08:25,775:INFO:Importing libraries
2022-10-01 13:08:25,775:INFO:Copying training dataset
2022-10-01 13:08:25,776:INFO:Defining folds
2022-10-01 13:08:25,776:INFO:Declaring metric variables
2022-10-01 13:08:25,777:INFO:Importing untrained model
2022-10-01 13:08:25,777:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:08:25,777:INFO:Starting cross validation
2022-10-01 13:08:25,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:30,177:INFO:Calculating mean and std
2022-10-01 13:08:30,177:INFO:Creating metrics dataframe
2022-10-01 13:08:30,180:INFO:Uploading results into container
2022-10-01 13:08:30,181:INFO:Uploading model into container now
2022-10-01 13:08:30,181:INFO:master_model_container: 17
2022-10-01 13:08:30,181:INFO:display_container: 2
2022-10-01 13:08:30,182:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:08:30,182:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,265:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:30,265:INFO:Creating metrics dataframe
2022-10-01 13:08:30,270:INFO:Initializing Dummy Regressor
2022-10-01 13:08:30,270:INFO:Total runtime is 0.23962361812591554 minutes
2022-10-01 13:08:30,270:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:30,271:INFO:Initializing create_model()
2022-10-01 13:08:30,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:30,271:INFO:Checking exceptions
2022-10-01 13:08:30,272:INFO:Importing libraries
2022-10-01 13:08:30,272:INFO:Copying training dataset
2022-10-01 13:08:30,274:INFO:Defining folds
2022-10-01 13:08:30,274:INFO:Declaring metric variables
2022-10-01 13:08:30,275:INFO:Importing untrained model
2022-10-01 13:08:30,275:INFO:Dummy Regressor Imported successfully
2022-10-01 13:08:30,275:INFO:Starting cross validation
2022-10-01 13:08:30,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:30,426:INFO:Calculating mean and std
2022-10-01 13:08:30,427:INFO:Creating metrics dataframe
2022-10-01 13:08:30,429:INFO:Uploading results into container
2022-10-01 13:08:30,429:INFO:Uploading model into container now
2022-10-01 13:08:30,430:INFO:master_model_container: 18
2022-10-01 13:08:30,430:INFO:display_container: 2
2022-10-01 13:08:30,430:INFO:DummyRegressor()
2022-10-01 13:08:30,430:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,503:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:30,503:INFO:Creating metrics dataframe
2022-10-01 13:08:30,508:INFO:Initializing create_model()
2022-10-01 13:08:30,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:30,508:INFO:Checking exceptions
2022-10-01 13:08:30,510:INFO:Importing libraries
2022-10-01 13:08:30,510:INFO:Copying training dataset
2022-10-01 13:08:30,511:INFO:Defining folds
2022-10-01 13:08:30,511:INFO:Declaring metric variables
2022-10-01 13:08:30,511:INFO:Importing untrained model
2022-10-01 13:08:30,512:INFO:Declaring custom model
2022-10-01 13:08:30,512:INFO:Linear Regression Imported successfully
2022-10-01 13:08:30,512:INFO:Cross validation set to False
2022-10-01 13:08:30,512:INFO:Fitting Model
2022-10-01 13:08:30,521:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:30,521:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,606:INFO:master_model_container: 18
2022-10-01 13:08:30,606:INFO:display_container: 2
2022-10-01 13:08:30,606:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:30,606:INFO:compare_models() successfully completed......................................
2022-10-01 13:08:30,606:INFO:Initializing create_model()
2022-10-01 13:08:30,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:30,607:INFO:Checking exceptions
2022-10-01 13:08:30,610:INFO:Importing libraries
2022-10-01 13:08:30,610:INFO:Copying training dataset
2022-10-01 13:08:30,613:INFO:Defining folds
2022-10-01 13:08:30,613:INFO:Declaring metric variables
2022-10-01 13:08:30,613:INFO:Importing untrained model
2022-10-01 13:08:30,613:INFO:Declaring custom model
2022-10-01 13:08:30,614:INFO:Linear Regression Imported successfully
2022-10-01 13:08:30,614:INFO:Starting cross validation
2022-10-01 13:08:30,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:30,820:INFO:Calculating mean and std
2022-10-01 13:08:30,821:INFO:Creating metrics dataframe
2022-10-01 13:08:30,822:INFO:Finalizing model
2022-10-01 13:08:30,833:INFO:Uploading results into container
2022-10-01 13:08:30,833:INFO:Uploading model into container now
2022-10-01 13:08:30,842:INFO:master_model_container: 19
2022-10-01 13:08:30,842:INFO:display_container: 3
2022-10-01 13:08:30,842:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:30,842:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,941:INFO:Initializing predict_model()
2022-10-01 13:08:30,941:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021D046BB6D0>)
2022-10-01 13:08:30,941:INFO:Checking exceptions
2022-10-01 13:08:30,941:INFO:Preloading libraries
2022-10-01 13:08:30,941:INFO:Set up data.
2022-10-01 13:08:30,945:INFO:Set up index.
2022-10-01 13:08:31,075:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:09:48,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:48,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:48,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:48,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:49,588:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:09:51,116:INFO:PyCaret RegressionExperiment
2022-10-01 13:09:51,116:INFO:Logging name: reg-default-name
2022-10-01 13:09:51,116:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:09:51,116:INFO:version 3.0.0.rc4
2022-10-01 13:09:51,116:INFO:Initializing setup()
2022-10-01 13:09:51,116:INFO:self.USI: df73
2022-10-01 13:09:51,116:INFO:self.variable_keys: {'variable_keys', 'display_container', 'y_test', 'USI', 'seed', '_available_plots', 'data', '_all_metrics', 'exp_name_log', 'memory', 'fold_groups_param', 'fold_shuffle_param', 'X_test', 'target_param', '_all_models_internal', 'transform_target_method_param', '_gpu_n_jobs_param', 'y_train', 'X', 'fold_generator', 'n_jobs_param', 'master_model_container', 'gpu_param', '_all_models', 'exp_id', 'pipeline', 'logging_param', 'y', 'idx', 'html_param', 'log_plots_param', 'X_train', 'transform_target_param', '_ml_usecase'}
2022-10-01 13:09:51,116:INFO:Checking environment
2022-10-01 13:09:51,116:INFO:python_version: 3.10.7
2022-10-01 13:09:51,117:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:09:51,117:INFO:machine: AMD64
2022-10-01 13:09:51,128:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:09:51,128:INFO:Memory: svmem(total=8497213440, available=2144919552, percent=74.8, used=6352293888, free=2144919552)
2022-10-01 13:09:51,128:INFO:Physical Core: 6
2022-10-01 13:09:51,128:INFO:Logical Core: 12
2022-10-01 13:09:51,128:INFO:Checking libraries
2022-10-01 13:09:51,128:INFO:System:
2022-10-01 13:09:51,128:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:09:51,128:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:09:51,128:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:09:51,128:INFO:PyCaret required dependencies:
2022-10-01 13:09:51,128:INFO:                 pip: 22.2.2
2022-10-01 13:09:51,128:INFO:          setuptools: 63.2.0
2022-10-01 13:09:51,128:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:09:51,128:INFO:             IPython: 8.5.0
2022-10-01 13:09:51,128:INFO:          ipywidgets: 8.0.2
2022-10-01 13:09:51,129:INFO:                tqdm: 4.64.1
2022-10-01 13:09:51,129:INFO:               numpy: 1.22.4
2022-10-01 13:09:51,129:INFO:              pandas: 1.4.4
2022-10-01 13:09:51,129:INFO:              jinja2: 3.1.2
2022-10-01 13:09:51,129:INFO:               scipy: 1.8.1
2022-10-01 13:09:51,129:INFO:              joblib: 1.2.0
2022-10-01 13:09:51,129:INFO:             sklearn: 1.1.2
2022-10-01 13:09:51,129:INFO:                pyod: 1.0.5
2022-10-01 13:09:51,129:INFO:            imblearn: 0.9.1
2022-10-01 13:09:51,129:INFO:   category_encoders: 2.5.0
2022-10-01 13:09:51,129:INFO:            lightgbm: 3.3.2
2022-10-01 13:09:51,129:INFO:               numba: 0.55.2
2022-10-01 13:09:51,129:INFO:            requests: 2.28.1
2022-10-01 13:09:51,129:INFO:          matplotlib: 3.6.0
2022-10-01 13:09:51,129:INFO:          scikitplot: 0.3.7
2022-10-01 13:09:51,129:INFO:         yellowbrick: 1.5
2022-10-01 13:09:51,129:INFO:              plotly: 5.10.0
2022-10-01 13:09:51,129:INFO:             kaleido: 0.2.1
2022-10-01 13:09:51,129:INFO:         statsmodels: 0.13.2
2022-10-01 13:09:51,129:INFO:              sktime: 0.13.4
2022-10-01 13:09:51,129:INFO:               tbats: 1.1.0
2022-10-01 13:09:51,129:INFO:            pmdarima: 1.8.5
2022-10-01 13:09:51,129:INFO:              psutil: 5.9.2
2022-10-01 13:09:51,130:INFO:PyCaret optional dependencies:
2022-10-01 13:09:51,144:INFO:                shap: Not installed
2022-10-01 13:09:51,144:INFO:           interpret: Not installed
2022-10-01 13:09:51,144:INFO:                umap: Not installed
2022-10-01 13:09:51,144:INFO:    pandas_profiling: Not installed
2022-10-01 13:09:51,144:INFO:  explainerdashboard: Not installed
2022-10-01 13:09:51,144:INFO:             autoviz: Not installed
2022-10-01 13:09:51,144:INFO:           fairlearn: Not installed
2022-10-01 13:09:51,145:INFO:             xgboost: Not installed
2022-10-01 13:09:51,145:INFO:            catboost: Not installed
2022-10-01 13:09:51,145:INFO:              kmodes: Not installed
2022-10-01 13:09:51,145:INFO:             mlxtend: Not installed
2022-10-01 13:09:51,145:INFO:       statsforecast: Not installed
2022-10-01 13:09:51,145:INFO:        tune_sklearn: Not installed
2022-10-01 13:09:51,145:INFO:                 ray: Not installed
2022-10-01 13:09:51,145:INFO:            hyperopt: Not installed
2022-10-01 13:09:51,145:INFO:              optuna: Not installed
2022-10-01 13:09:51,145:INFO:               skopt: Not installed
2022-10-01 13:09:51,145:INFO:              mlflow: Not installed
2022-10-01 13:09:51,145:INFO:              gradio: Not installed
2022-10-01 13:09:51,145:INFO:             fastapi: Not installed
2022-10-01 13:09:51,145:INFO:             uvicorn: Not installed
2022-10-01 13:09:51,145:INFO:              m2cgen: Not installed
2022-10-01 13:09:51,145:INFO:           evidently: Not installed
2022-10-01 13:09:51,146:INFO:                nltk: Not installed
2022-10-01 13:09:51,146:INFO:            pyLDAvis: Not installed
2022-10-01 13:09:51,146:INFO:              gensim: Not installed
2022-10-01 13:09:51,146:INFO:               spacy: Not installed
2022-10-01 13:09:51,146:INFO:           wordcloud: Not installed
2022-10-01 13:09:51,146:INFO:            textblob: Not installed
2022-10-01 13:09:51,146:INFO:               fugue: Not installed
2022-10-01 13:09:51,146:INFO:           streamlit: Not installed
2022-10-01 13:09:51,146:INFO:             prophet: Not installed
2022-10-01 13:09:51,146:INFO:None
2022-10-01 13:09:51,146:INFO:Set up GPU usage.
2022-10-01 13:09:51,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,146:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:09:51,146:INFO:Set up data.
2022-10-01 13:09:51,150:INFO:Set up train/test split.
2022-10-01 13:09:51,152:INFO:Set up index.
2022-10-01 13:09:51,152:INFO:Set up folding strategy.
2022-10-01 13:09:51,153:INFO:Assigning column types.
2022-10-01 13:09:51,155:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:09:51,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,155:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,160:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,165:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,221:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,631:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,638:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,645:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,999:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:09:51,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,007:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,014:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,098:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,380:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,386:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,469:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,752:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:09:52,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,767:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,851:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,140:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,501:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:09:53,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,997:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:54,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,254:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:09:54,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,353:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:54,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:54,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,021:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:09:55,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,780:INFO:Preparing preprocessing pipeline...
2022-10-01 13:09:55,781:INFO:Set up simple imputation.
2022-10-01 13:09:55,781:INFO:Set up variance threshold.
2022-10-01 13:09:55,796:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:09:55,803:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:09:55,803:INFO:Creating final display dataframe.
2022-10-01 13:09:55,881:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              df73
2022-10-01 13:09:55,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,588:INFO:setup() successfully completed in 5.47s...............
2022-10-01 13:09:56,588:INFO:Initializing compare_models()
2022-10-01 13:09:56,589:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:09:56,589:INFO:Checking exceptions
2022-10-01 13:09:56,590:INFO:Preparing display monitor
2022-10-01 13:09:56,593:INFO:Initializing Linear Regression
2022-10-01 13:09:56,593:INFO:Total runtime is 0.0 minutes
2022-10-01 13:09:56,593:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:56,594:INFO:Initializing create_model()
2022-10-01 13:09:56,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:56,594:INFO:Checking exceptions
2022-10-01 13:09:56,595:INFO:Importing libraries
2022-10-01 13:09:56,595:INFO:Copying training dataset
2022-10-01 13:09:56,597:INFO:Defining folds
2022-10-01 13:09:56,597:INFO:Declaring metric variables
2022-10-01 13:09:56,597:INFO:Importing untrained model
2022-10-01 13:09:56,598:INFO:Linear Regression Imported successfully
2022-10-01 13:09:56,598:INFO:Starting cross validation
2022-10-01 13:09:56,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:56,801:INFO:Calculating mean and std
2022-10-01 13:09:56,802:INFO:Creating metrics dataframe
2022-10-01 13:09:56,805:INFO:Uploading results into container
2022-10-01 13:09:56,805:INFO:Uploading model into container now
2022-10-01 13:09:56,806:INFO:master_model_container: 1
2022-10-01 13:09:56,806:INFO:display_container: 2
2022-10-01 13:09:56,806:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:09:56,806:INFO:create_model() successfully completed......................................
2022-10-01 13:09:56,880:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:56,880:INFO:Creating metrics dataframe
2022-10-01 13:09:56,883:INFO:Initializing Lasso Regression
2022-10-01 13:09:56,884:INFO:Total runtime is 0.0048493146896362305 minutes
2022-10-01 13:09:56,884:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:56,884:INFO:Initializing create_model()
2022-10-01 13:09:56,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:56,884:INFO:Checking exceptions
2022-10-01 13:09:56,885:INFO:Importing libraries
2022-10-01 13:09:56,885:INFO:Copying training dataset
2022-10-01 13:09:56,887:INFO:Defining folds
2022-10-01 13:09:56,887:INFO:Declaring metric variables
2022-10-01 13:09:56,887:INFO:Importing untrained model
2022-10-01 13:09:56,887:INFO:Lasso Regression Imported successfully
2022-10-01 13:09:56,888:INFO:Starting cross validation
2022-10-01 13:09:56,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:56,900:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,918:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,935:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,952:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,969:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,987:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,004:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,022:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,039:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,057:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,064:INFO:Calculating mean and std
2022-10-01 13:09:57,065:INFO:Creating metrics dataframe
2022-10-01 13:09:57,068:INFO:Uploading results into container
2022-10-01 13:09:57,069:INFO:Uploading model into container now
2022-10-01 13:09:57,069:INFO:master_model_container: 2
2022-10-01 13:09:57,069:INFO:display_container: 2
2022-10-01 13:09:57,069:INFO:Lasso(random_state=123)
2022-10-01 13:09:57,069:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,143:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,143:INFO:Creating metrics dataframe
2022-10-01 13:09:57,147:INFO:Initializing Ridge Regression
2022-10-01 13:09:57,147:INFO:Total runtime is 0.009248085816701253 minutes
2022-10-01 13:09:57,147:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,148:INFO:Initializing create_model()
2022-10-01 13:09:57,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,148:INFO:Checking exceptions
2022-10-01 13:09:57,149:INFO:Importing libraries
2022-10-01 13:09:57,149:INFO:Copying training dataset
2022-10-01 13:09:57,150:INFO:Defining folds
2022-10-01 13:09:57,150:INFO:Declaring metric variables
2022-10-01 13:09:57,151:INFO:Importing untrained model
2022-10-01 13:09:57,151:INFO:Ridge Regression Imported successfully
2022-10-01 13:09:57,151:INFO:Starting cross validation
2022-10-01 13:09:57,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,163:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,180:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,197:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,214:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,231:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,248:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,265:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,281:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,298:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,315:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,323:INFO:Calculating mean and std
2022-10-01 13:09:57,324:INFO:Creating metrics dataframe
2022-10-01 13:09:57,326:INFO:Uploading results into container
2022-10-01 13:09:57,326:INFO:Uploading model into container now
2022-10-01 13:09:57,327:INFO:master_model_container: 3
2022-10-01 13:09:57,327:INFO:display_container: 2
2022-10-01 13:09:57,327:INFO:Ridge(random_state=123)
2022-10-01 13:09:57,327:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,399:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,399:INFO:Creating metrics dataframe
2022-10-01 13:09:57,403:INFO:Initializing Elastic Net
2022-10-01 13:09:57,403:INFO:Total runtime is 0.013513620694478354 minutes
2022-10-01 13:09:57,403:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,404:INFO:Initializing create_model()
2022-10-01 13:09:57,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,404:INFO:Checking exceptions
2022-10-01 13:09:57,405:INFO:Importing libraries
2022-10-01 13:09:57,405:INFO:Copying training dataset
2022-10-01 13:09:57,406:INFO:Defining folds
2022-10-01 13:09:57,406:INFO:Declaring metric variables
2022-10-01 13:09:57,407:INFO:Importing untrained model
2022-10-01 13:09:57,407:INFO:Elastic Net Imported successfully
2022-10-01 13:09:57,407:INFO:Starting cross validation
2022-10-01 13:09:57,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,419:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,437:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,455:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,472:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,490:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,507:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,524:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,542:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,559:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,576:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,583:INFO:Calculating mean and std
2022-10-01 13:09:57,584:INFO:Creating metrics dataframe
2022-10-01 13:09:57,586:INFO:Uploading results into container
2022-10-01 13:09:57,587:INFO:Uploading model into container now
2022-10-01 13:09:57,587:INFO:master_model_container: 4
2022-10-01 13:09:57,587:INFO:display_container: 2
2022-10-01 13:09:57,587:INFO:ElasticNet(random_state=123)
2022-10-01 13:09:57,587:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,660:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,660:INFO:Creating metrics dataframe
2022-10-01 13:09:57,664:INFO:Initializing Least Angle Regression
2022-10-01 13:09:57,664:INFO:Total runtime is 0.01786251465479533 minutes
2022-10-01 13:09:57,664:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,664:INFO:Initializing create_model()
2022-10-01 13:09:57,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,664:INFO:Checking exceptions
2022-10-01 13:09:57,665:INFO:Importing libraries
2022-10-01 13:09:57,665:INFO:Copying training dataset
2022-10-01 13:09:57,667:INFO:Defining folds
2022-10-01 13:09:57,667:INFO:Declaring metric variables
2022-10-01 13:09:57,667:INFO:Importing untrained model
2022-10-01 13:09:57,667:INFO:Least Angle Regression Imported successfully
2022-10-01 13:09:57,668:INFO:Starting cross validation
2022-10-01 13:09:57,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,679:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,697:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,715:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,733:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,751:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,769:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,786:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,804:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,821:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,839:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,847:INFO:Calculating mean and std
2022-10-01 13:09:57,848:INFO:Creating metrics dataframe
2022-10-01 13:09:57,850:INFO:Uploading results into container
2022-10-01 13:09:57,850:INFO:Uploading model into container now
2022-10-01 13:09:57,851:INFO:master_model_container: 5
2022-10-01 13:09:57,851:INFO:display_container: 2
2022-10-01 13:09:57,851:INFO:Lars(random_state=123)
2022-10-01 13:09:57,851:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,923:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,923:INFO:Creating metrics dataframe
2022-10-01 13:09:57,927:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:09:57,927:INFO:Total runtime is 0.022244664033253987 minutes
2022-10-01 13:09:57,927:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,927:INFO:Initializing create_model()
2022-10-01 13:09:57,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,927:INFO:Checking exceptions
2022-10-01 13:09:57,928:INFO:Importing libraries
2022-10-01 13:09:57,928:INFO:Copying training dataset
2022-10-01 13:09:57,930:INFO:Defining folds
2022-10-01 13:09:57,930:INFO:Declaring metric variables
2022-10-01 13:09:57,930:INFO:Importing untrained model
2022-10-01 13:09:57,930:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:09:57,930:INFO:Starting cross validation
2022-10-01 13:09:57,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,941:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:57,958:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:57,977:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:57,996:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,014:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,032:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,050:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,068:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,085:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,103:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,111:INFO:Calculating mean and std
2022-10-01 13:09:58,112:INFO:Creating metrics dataframe
2022-10-01 13:09:58,114:INFO:Uploading results into container
2022-10-01 13:09:58,115:INFO:Uploading model into container now
2022-10-01 13:09:58,115:INFO:master_model_container: 6
2022-10-01 13:09:58,115:INFO:display_container: 2
2022-10-01 13:09:58,115:INFO:LassoLars(random_state=123)
2022-10-01 13:09:58,115:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,186:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,186:INFO:Creating metrics dataframe
2022-10-01 13:09:58,190:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:09:58,190:INFO:Total runtime is 0.026626821358998617 minutes
2022-10-01 13:09:58,190:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,191:INFO:Initializing create_model()
2022-10-01 13:09:58,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,191:INFO:Checking exceptions
2022-10-01 13:09:58,192:INFO:Importing libraries
2022-10-01 13:09:58,192:INFO:Copying training dataset
2022-10-01 13:09:58,193:INFO:Defining folds
2022-10-01 13:09:58,193:INFO:Declaring metric variables
2022-10-01 13:09:58,193:INFO:Importing untrained model
2022-10-01 13:09:58,194:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:09:58,194:INFO:Starting cross validation
2022-10-01 13:09:58,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:58,203:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,220:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,237:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,253:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,270:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,287:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,320:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,337:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,353:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,362:INFO:Calculating mean and std
2022-10-01 13:09:58,362:INFO:Creating metrics dataframe
2022-10-01 13:09:58,365:INFO:Uploading results into container
2022-10-01 13:09:58,365:INFO:Uploading model into container now
2022-10-01 13:09:58,365:INFO:master_model_container: 7
2022-10-01 13:09:58,366:INFO:display_container: 2
2022-10-01 13:09:58,366:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:09:58,366:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,438:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,438:INFO:Creating metrics dataframe
2022-10-01 13:09:58,442:INFO:Initializing Bayesian Ridge
2022-10-01 13:09:58,442:INFO:Total runtime is 0.030825102329254152 minutes
2022-10-01 13:09:58,442:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,442:INFO:Initializing create_model()
2022-10-01 13:09:58,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,442:INFO:Checking exceptions
2022-10-01 13:09:58,443:INFO:Importing libraries
2022-10-01 13:09:58,443:INFO:Copying training dataset
2022-10-01 13:09:58,445:INFO:Defining folds
2022-10-01 13:09:58,445:INFO:Declaring metric variables
2022-10-01 13:09:58,445:INFO:Importing untrained model
2022-10-01 13:09:58,445:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:09:58,446:INFO:Starting cross validation
2022-10-01 13:09:58,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:58,617:INFO:Calculating mean and std
2022-10-01 13:09:58,617:INFO:Creating metrics dataframe
2022-10-01 13:09:58,620:INFO:Uploading results into container
2022-10-01 13:09:58,620:INFO:Uploading model into container now
2022-10-01 13:09:58,620:INFO:master_model_container: 8
2022-10-01 13:09:58,620:INFO:display_container: 2
2022-10-01 13:09:58,621:INFO:BayesianRidge()
2022-10-01 13:09:58,621:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,694:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,694:INFO:Creating metrics dataframe
2022-10-01 13:09:58,698:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:09:58,698:INFO:Total runtime is 0.03509122927983602 minutes
2022-10-01 13:09:58,698:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,698:INFO:Initializing create_model()
2022-10-01 13:09:58,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,699:INFO:Checking exceptions
2022-10-01 13:09:58,700:INFO:Importing libraries
2022-10-01 13:09:58,700:INFO:Copying training dataset
2022-10-01 13:09:58,701:INFO:Defining folds
2022-10-01 13:09:58,701:INFO:Declaring metric variables
2022-10-01 13:09:58,701:INFO:Importing untrained model
2022-10-01 13:09:58,702:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:09:58,702:INFO:Starting cross validation
2022-10-01 13:09:58,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:58,875:INFO:Calculating mean and std
2022-10-01 13:09:58,876:INFO:Creating metrics dataframe
2022-10-01 13:09:58,878:INFO:Uploading results into container
2022-10-01 13:09:58,878:INFO:Uploading model into container now
2022-10-01 13:09:58,879:INFO:master_model_container: 9
2022-10-01 13:09:58,879:INFO:display_container: 2
2022-10-01 13:09:58,879:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:09:58,879:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,952:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,952:INFO:Creating metrics dataframe
2022-10-01 13:09:58,956:INFO:Initializing Huber Regressor
2022-10-01 13:09:58,956:INFO:Total runtime is 0.03938958644866943 minutes
2022-10-01 13:09:58,956:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,956:INFO:Initializing create_model()
2022-10-01 13:09:58,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,957:INFO:Checking exceptions
2022-10-01 13:09:58,957:INFO:Importing libraries
2022-10-01 13:09:58,958:INFO:Copying training dataset
2022-10-01 13:09:58,959:INFO:Defining folds
2022-10-01 13:09:58,959:INFO:Declaring metric variables
2022-10-01 13:09:58,959:INFO:Importing untrained model
2022-10-01 13:09:58,960:INFO:Huber Regressor Imported successfully
2022-10-01 13:09:58,960:INFO:Starting cross validation
2022-10-01 13:09:58,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:59,184:INFO:Calculating mean and std
2022-10-01 13:09:59,185:INFO:Creating metrics dataframe
2022-10-01 13:09:59,187:INFO:Uploading results into container
2022-10-01 13:09:59,188:INFO:Uploading model into container now
2022-10-01 13:09:59,188:INFO:master_model_container: 10
2022-10-01 13:09:59,188:INFO:display_container: 2
2022-10-01 13:09:59,188:INFO:HuberRegressor()
2022-10-01 13:09:59,188:INFO:create_model() successfully completed......................................
2022-10-01 13:09:59,261:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:59,261:INFO:Creating metrics dataframe
2022-10-01 13:09:59,264:INFO:Initializing K Neighbors Regressor
2022-10-01 13:09:59,265:INFO:Total runtime is 0.044538625081380206 minutes
2022-10-01 13:09:59,265:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:59,265:INFO:Initializing create_model()
2022-10-01 13:09:59,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:59,265:INFO:Checking exceptions
2022-10-01 13:09:59,266:INFO:Importing libraries
2022-10-01 13:09:59,266:INFO:Copying training dataset
2022-10-01 13:09:59,268:INFO:Defining folds
2022-10-01 13:09:59,268:INFO:Declaring metric variables
2022-10-01 13:09:59,268:INFO:Importing untrained model
2022-10-01 13:09:59,268:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:09:59,268:INFO:Starting cross validation
2022-10-01 13:09:59,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:02,243:INFO:Calculating mean and std
2022-10-01 13:10:02,243:INFO:Creating metrics dataframe
2022-10-01 13:10:02,246:INFO:Uploading results into container
2022-10-01 13:10:02,247:INFO:Uploading model into container now
2022-10-01 13:10:02,247:INFO:master_model_container: 11
2022-10-01 13:10:02,247:INFO:display_container: 2
2022-10-01 13:10:02,247:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:10:02,247:INFO:create_model() successfully completed......................................
2022-10-01 13:10:02,340:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:02,340:INFO:Creating metrics dataframe
2022-10-01 13:10:02,344:INFO:Initializing Decision Tree Regressor
2022-10-01 13:10:02,344:INFO:Total runtime is 0.09585729837417603 minutes
2022-10-01 13:10:02,344:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:02,345:INFO:Initializing create_model()
2022-10-01 13:10:02,345:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:02,345:INFO:Checking exceptions
2022-10-01 13:10:02,346:INFO:Importing libraries
2022-10-01 13:10:02,346:INFO:Copying training dataset
2022-10-01 13:10:02,348:INFO:Defining folds
2022-10-01 13:10:02,348:INFO:Declaring metric variables
2022-10-01 13:10:02,348:INFO:Importing untrained model
2022-10-01 13:10:02,349:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:10:02,349:INFO:Starting cross validation
2022-10-01 13:10:02,350:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:02,556:INFO:Calculating mean and std
2022-10-01 13:10:02,557:INFO:Creating metrics dataframe
2022-10-01 13:10:02,559:INFO:Uploading results into container
2022-10-01 13:10:02,560:INFO:Uploading model into container now
2022-10-01 13:10:02,560:INFO:master_model_container: 12
2022-10-01 13:10:02,560:INFO:display_container: 2
2022-10-01 13:10:02,560:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:10:02,560:INFO:create_model() successfully completed......................................
2022-10-01 13:10:02,636:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:02,636:INFO:Creating metrics dataframe
2022-10-01 13:10:02,640:INFO:Initializing Random Forest Regressor
2022-10-01 13:10:02,640:INFO:Total runtime is 0.10078946749369304 minutes
2022-10-01 13:10:02,640:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:02,640:INFO:Initializing create_model()
2022-10-01 13:10:02,640:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:02,640:INFO:Checking exceptions
2022-10-01 13:10:02,641:INFO:Importing libraries
2022-10-01 13:10:02,641:INFO:Copying training dataset
2022-10-01 13:10:02,643:INFO:Defining folds
2022-10-01 13:10:02,643:INFO:Declaring metric variables
2022-10-01 13:10:02,643:INFO:Importing untrained model
2022-10-01 13:10:02,644:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:10:02,644:INFO:Starting cross validation
2022-10-01 13:10:02,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:03,829:INFO:Calculating mean and std
2022-10-01 13:10:03,830:INFO:Creating metrics dataframe
2022-10-01 13:10:03,832:INFO:Uploading results into container
2022-10-01 13:10:03,832:INFO:Uploading model into container now
2022-10-01 13:10:03,833:INFO:master_model_container: 13
2022-10-01 13:10:03,833:INFO:display_container: 2
2022-10-01 13:10:03,833:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:10:03,833:INFO:create_model() successfully completed......................................
2022-10-01 13:10:03,904:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:03,904:INFO:Creating metrics dataframe
2022-10-01 13:10:03,908:INFO:Initializing Extra Trees Regressor
2022-10-01 13:10:03,908:INFO:Total runtime is 0.12193002700805665 minutes
2022-10-01 13:10:03,908:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:03,908:INFO:Initializing create_model()
2022-10-01 13:10:03,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:03,908:INFO:Checking exceptions
2022-10-01 13:10:03,909:INFO:Importing libraries
2022-10-01 13:10:03,909:INFO:Copying training dataset
2022-10-01 13:10:03,911:INFO:Defining folds
2022-10-01 13:10:03,911:INFO:Declaring metric variables
2022-10-01 13:10:03,911:INFO:Importing untrained model
2022-10-01 13:10:03,912:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:10:03,912:INFO:Starting cross validation
2022-10-01 13:10:03,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:05,069:INFO:Calculating mean and std
2022-10-01 13:10:05,069:INFO:Creating metrics dataframe
2022-10-01 13:10:05,072:INFO:Uploading results into container
2022-10-01 13:10:05,073:INFO:Uploading model into container now
2022-10-01 13:10:05,073:INFO:master_model_container: 14
2022-10-01 13:10:05,073:INFO:display_container: 2
2022-10-01 13:10:05,074:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:10:05,074:INFO:create_model() successfully completed......................................
2022-10-01 13:10:05,145:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:05,145:INFO:Creating metrics dataframe
2022-10-01 13:10:05,149:INFO:Initializing AdaBoost Regressor
2022-10-01 13:10:05,150:INFO:Total runtime is 0.1426245133082072 minutes
2022-10-01 13:10:05,150:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:05,150:INFO:Initializing create_model()
2022-10-01 13:10:05,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:05,150:INFO:Checking exceptions
2022-10-01 13:10:05,151:INFO:Importing libraries
2022-10-01 13:10:05,151:INFO:Copying training dataset
2022-10-01 13:10:05,153:INFO:Defining folds
2022-10-01 13:10:05,153:INFO:Declaring metric variables
2022-10-01 13:10:05,153:INFO:Importing untrained model
2022-10-01 13:10:05,153:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:10:05,153:INFO:Starting cross validation
2022-10-01 13:10:05,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:05,823:INFO:Calculating mean and std
2022-10-01 13:10:05,823:INFO:Creating metrics dataframe
2022-10-01 13:10:05,826:INFO:Uploading results into container
2022-10-01 13:10:05,826:INFO:Uploading model into container now
2022-10-01 13:10:05,827:INFO:master_model_container: 15
2022-10-01 13:10:05,827:INFO:display_container: 2
2022-10-01 13:10:05,827:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:10:05,827:INFO:create_model() successfully completed......................................
2022-10-01 13:10:05,899:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:05,899:INFO:Creating metrics dataframe
2022-10-01 13:10:05,903:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:10:05,903:INFO:Total runtime is 0.1551711599032084 minutes
2022-10-01 13:10:05,903:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:05,904:INFO:Initializing create_model()
2022-10-01 13:10:05,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:05,904:INFO:Checking exceptions
2022-10-01 13:10:05,905:INFO:Importing libraries
2022-10-01 13:10:05,905:INFO:Copying training dataset
2022-10-01 13:10:05,906:INFO:Defining folds
2022-10-01 13:10:05,906:INFO:Declaring metric variables
2022-10-01 13:10:05,906:INFO:Importing untrained model
2022-10-01 13:10:05,907:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:10:05,907:INFO:Starting cross validation
2022-10-01 13:10:05,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:06,479:INFO:Calculating mean and std
2022-10-01 13:10:06,480:INFO:Creating metrics dataframe
2022-10-01 13:10:06,482:INFO:Uploading results into container
2022-10-01 13:10:06,483:INFO:Uploading model into container now
2022-10-01 13:10:06,483:INFO:master_model_container: 16
2022-10-01 13:10:06,483:INFO:display_container: 2
2022-10-01 13:10:06,483:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:10:06,483:INFO:create_model() successfully completed......................................
2022-10-01 13:10:06,559:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:06,559:INFO:Creating metrics dataframe
2022-10-01 13:10:06,563:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:10:06,563:INFO:Total runtime is 0.16616882880528766 minutes
2022-10-01 13:10:06,563:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:06,564:INFO:Initializing create_model()
2022-10-01 13:10:06,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:06,564:INFO:Checking exceptions
2022-10-01 13:10:06,565:INFO:Importing libraries
2022-10-01 13:10:06,565:INFO:Copying training dataset
2022-10-01 13:10:06,567:INFO:Defining folds
2022-10-01 13:10:06,567:INFO:Declaring metric variables
2022-10-01 13:10:06,567:INFO:Importing untrained model
2022-10-01 13:10:06,567:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:10:06,567:INFO:Starting cross validation
2022-10-01 13:10:06,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:10,947:INFO:Calculating mean and std
2022-10-01 13:10:10,948:INFO:Creating metrics dataframe
2022-10-01 13:10:10,951:INFO:Uploading results into container
2022-10-01 13:10:10,952:INFO:Uploading model into container now
2022-10-01 13:10:10,952:INFO:master_model_container: 17
2022-10-01 13:10:10,952:INFO:display_container: 2
2022-10-01 13:10:10,953:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:10:10,953:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,037:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:11,037:INFO:Creating metrics dataframe
2022-10-01 13:10:11,042:INFO:Initializing Dummy Regressor
2022-10-01 13:10:11,042:INFO:Total runtime is 0.24082986513773597 minutes
2022-10-01 13:10:11,043:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:11,043:INFO:Initializing create_model()
2022-10-01 13:10:11,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:11,043:INFO:Checking exceptions
2022-10-01 13:10:11,044:INFO:Importing libraries
2022-10-01 13:10:11,044:INFO:Copying training dataset
2022-10-01 13:10:11,045:INFO:Defining folds
2022-10-01 13:10:11,046:INFO:Declaring metric variables
2022-10-01 13:10:11,046:INFO:Importing untrained model
2022-10-01 13:10:11,046:INFO:Dummy Regressor Imported successfully
2022-10-01 13:10:11,046:INFO:Starting cross validation
2022-10-01 13:10:11,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:11,200:INFO:Calculating mean and std
2022-10-01 13:10:11,200:INFO:Creating metrics dataframe
2022-10-01 13:10:11,203:INFO:Uploading results into container
2022-10-01 13:10:11,203:INFO:Uploading model into container now
2022-10-01 13:10:11,203:INFO:master_model_container: 18
2022-10-01 13:10:11,204:INFO:display_container: 2
2022-10-01 13:10:11,204:INFO:DummyRegressor()
2022-10-01 13:10:11,204:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,277:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:11,277:INFO:Creating metrics dataframe
2022-10-01 13:10:11,282:INFO:Initializing create_model()
2022-10-01 13:10:11,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:11,282:INFO:Checking exceptions
2022-10-01 13:10:11,284:INFO:Importing libraries
2022-10-01 13:10:11,284:INFO:Copying training dataset
2022-10-01 13:10:11,285:INFO:Defining folds
2022-10-01 13:10:11,285:INFO:Declaring metric variables
2022-10-01 13:10:11,286:INFO:Importing untrained model
2022-10-01 13:10:11,286:INFO:Declaring custom model
2022-10-01 13:10:11,286:INFO:Linear Regression Imported successfully
2022-10-01 13:10:11,286:INFO:Cross validation set to False
2022-10-01 13:10:11,287:INFO:Fitting Model
2022-10-01 13:10:11,295:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:10:11,296:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,380:INFO:master_model_container: 18
2022-10-01 13:10:11,381:INFO:display_container: 2
2022-10-01 13:10:11,381:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:10:11,381:INFO:compare_models() successfully completed......................................
2022-10-01 13:10:11,382:INFO:Initializing create_model()
2022-10-01 13:10:11,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:11,382:INFO:Checking exceptions
2022-10-01 13:10:11,385:INFO:Importing libraries
2022-10-01 13:10:11,386:INFO:Copying training dataset
2022-10-01 13:10:11,387:INFO:Defining folds
2022-10-01 13:10:11,387:INFO:Declaring metric variables
2022-10-01 13:10:11,388:INFO:Importing untrained model
2022-10-01 13:10:11,388:INFO:Declaring custom model
2022-10-01 13:10:11,388:INFO:Linear Regression Imported successfully
2022-10-01 13:10:11,388:INFO:Starting cross validation
2022-10-01 13:10:11,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:11,597:INFO:Calculating mean and std
2022-10-01 13:10:11,597:INFO:Creating metrics dataframe
2022-10-01 13:10:11,599:INFO:Finalizing model
2022-10-01 13:10:11,609:INFO:Uploading results into container
2022-10-01 13:10:11,609:INFO:Uploading model into container now
2022-10-01 13:10:11,618:INFO:master_model_container: 19
2022-10-01 13:10:11,618:INFO:display_container: 3
2022-10-01 13:10:11,618:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:10:11,619:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,746:INFO:Initializing predict_model()
2022-10-01 13:10:11,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000027DE3CBB6D0>)
2022-10-01 13:10:11,746:INFO:Checking exceptions
2022-10-01 13:10:11,746:INFO:Preloading libraries
2022-10-01 13:10:11,746:INFO:Set up data.
2022-10-01 13:10:11,750:INFO:Set up index.
2022-10-01 13:10:11,882:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:11:02,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:02,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:02,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:02,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:03,258:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:11:05,022:INFO:PyCaret RegressionExperiment
2022-10-01 13:11:05,022:INFO:Logging name: reg-default-name
2022-10-01 13:11:05,022:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:11:05,022:INFO:version 3.0.0.rc4
2022-10-01 13:11:05,022:INFO:Initializing setup()
2022-10-01 13:11:05,022:INFO:self.USI: f933
2022-10-01 13:11:05,022:INFO:self.variable_keys: {'html_param', '_all_models', 'fold_groups_param', 'fold_shuffle_param', 'y', '_gpu_n_jobs_param', 'target_param', 'USI', 'X_train', 'fold_generator', 'X', '_available_plots', 'variable_keys', 'display_container', 'data', 'exp_id', 'transform_target_method_param', 'logging_param', 'y_train', 'exp_name_log', '_ml_usecase', 'master_model_container', 'idx', 'gpu_param', 'n_jobs_param', 'pipeline', 'log_plots_param', 'y_test', 'transform_target_param', 'memory', 'seed', 'X_test', '_all_metrics', '_all_models_internal'}
2022-10-01 13:11:05,022:INFO:Checking environment
2022-10-01 13:11:05,022:INFO:python_version: 3.10.7
2022-10-01 13:11:05,022:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:11:05,022:INFO:machine: AMD64
2022-10-01 13:11:05,034:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:11:05,034:INFO:Memory: svmem(total=8497213440, available=2212753408, percent=74.0, used=6284460032, free=2212753408)
2022-10-01 13:11:05,034:INFO:Physical Core: 6
2022-10-01 13:11:05,034:INFO:Logical Core: 12
2022-10-01 13:11:05,034:INFO:Checking libraries
2022-10-01 13:11:05,034:INFO:System:
2022-10-01 13:11:05,034:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:11:05,034:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:11:05,034:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:11:05,034:INFO:PyCaret required dependencies:
2022-10-01 13:11:05,034:INFO:                 pip: 22.2.2
2022-10-01 13:11:05,034:INFO:          setuptools: 63.2.0
2022-10-01 13:11:05,035:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:11:05,035:INFO:             IPython: 8.5.0
2022-10-01 13:11:05,035:INFO:          ipywidgets: 8.0.2
2022-10-01 13:11:05,035:INFO:                tqdm: 4.64.1
2022-10-01 13:11:05,035:INFO:               numpy: 1.22.4
2022-10-01 13:11:05,035:INFO:              pandas: 1.4.4
2022-10-01 13:11:05,035:INFO:              jinja2: 3.1.2
2022-10-01 13:11:05,035:INFO:               scipy: 1.8.1
2022-10-01 13:11:05,035:INFO:              joblib: 1.2.0
2022-10-01 13:11:05,035:INFO:             sklearn: 1.1.2
2022-10-01 13:11:05,035:INFO:                pyod: 1.0.5
2022-10-01 13:11:05,035:INFO:            imblearn: 0.9.1
2022-10-01 13:11:05,035:INFO:   category_encoders: 2.5.0
2022-10-01 13:11:05,035:INFO:            lightgbm: 3.3.2
2022-10-01 13:11:05,035:INFO:               numba: 0.55.2
2022-10-01 13:11:05,035:INFO:            requests: 2.28.1
2022-10-01 13:11:05,035:INFO:          matplotlib: 3.6.0
2022-10-01 13:11:05,035:INFO:          scikitplot: 0.3.7
2022-10-01 13:11:05,035:INFO:         yellowbrick: 1.5
2022-10-01 13:11:05,035:INFO:              plotly: 5.10.0
2022-10-01 13:11:05,035:INFO:             kaleido: 0.2.1
2022-10-01 13:11:05,035:INFO:         statsmodels: 0.13.2
2022-10-01 13:11:05,035:INFO:              sktime: 0.13.4
2022-10-01 13:11:05,035:INFO:               tbats: 1.1.0
2022-10-01 13:11:05,036:INFO:            pmdarima: 1.8.5
2022-10-01 13:11:05,036:INFO:              psutil: 5.9.2
2022-10-01 13:11:05,036:INFO:PyCaret optional dependencies:
2022-10-01 13:11:05,049:INFO:                shap: Not installed
2022-10-01 13:11:05,049:INFO:           interpret: Not installed
2022-10-01 13:11:05,049:INFO:                umap: Not installed
2022-10-01 13:11:05,050:INFO:    pandas_profiling: Not installed
2022-10-01 13:11:05,050:INFO:  explainerdashboard: Not installed
2022-10-01 13:11:05,050:INFO:             autoviz: Not installed
2022-10-01 13:11:05,050:INFO:           fairlearn: Not installed
2022-10-01 13:11:05,050:INFO:             xgboost: Not installed
2022-10-01 13:11:05,050:INFO:            catboost: Not installed
2022-10-01 13:11:05,050:INFO:              kmodes: Not installed
2022-10-01 13:11:05,050:INFO:             mlxtend: Not installed
2022-10-01 13:11:05,050:INFO:       statsforecast: Not installed
2022-10-01 13:11:05,050:INFO:        tune_sklearn: Not installed
2022-10-01 13:11:05,050:INFO:                 ray: Not installed
2022-10-01 13:11:05,050:INFO:            hyperopt: Not installed
2022-10-01 13:11:05,050:INFO:              optuna: Not installed
2022-10-01 13:11:05,050:INFO:               skopt: Not installed
2022-10-01 13:11:05,050:INFO:              mlflow: Not installed
2022-10-01 13:11:05,050:INFO:              gradio: Not installed
2022-10-01 13:11:05,050:INFO:             fastapi: Not installed
2022-10-01 13:11:05,050:INFO:             uvicorn: Not installed
2022-10-01 13:11:05,050:INFO:              m2cgen: Not installed
2022-10-01 13:11:05,050:INFO:           evidently: Not installed
2022-10-01 13:11:05,050:INFO:                nltk: Not installed
2022-10-01 13:11:05,050:INFO:            pyLDAvis: Not installed
2022-10-01 13:11:05,051:INFO:              gensim: Not installed
2022-10-01 13:11:05,051:INFO:               spacy: Not installed
2022-10-01 13:11:05,051:INFO:           wordcloud: Not installed
2022-10-01 13:11:05,051:INFO:            textblob: Not installed
2022-10-01 13:11:05,051:INFO:               fugue: Not installed
2022-10-01 13:11:05,051:INFO:           streamlit: Not installed
2022-10-01 13:11:05,051:INFO:             prophet: Not installed
2022-10-01 13:11:05,051:INFO:None
2022-10-01 13:11:05,051:INFO:Set up GPU usage.
2022-10-01 13:11:05,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,051:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:11:05,051:INFO:Set up data.
2022-10-01 13:11:05,055:INFO:Set up train/test split.
2022-10-01 13:11:05,057:INFO:Set up index.
2022-10-01 13:11:05,057:INFO:Set up folding strategy.
2022-10-01 13:11:05,058:INFO:Assigning column types.
2022-10-01 13:11:05,060:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:11:05,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,060:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,064:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,069:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,123:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,166:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:05,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:05,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,627:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,634:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,016:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:11:06,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,023:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,113:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,402:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,408:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,757:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:11:06,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,771:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,771:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,895:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,214:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,482:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:11:07,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:08,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,253:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:11:08,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:08,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:08,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,030:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:11:09,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,837:INFO:Preparing preprocessing pipeline...
2022-10-01 13:11:09,838:INFO:Set up simple imputation.
2022-10-01 13:11:09,838:INFO:Set up variance threshold.
2022-10-01 13:11:09,856:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:11:09,864:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:11:09,864:INFO:Creating final display dataframe.
2022-10-01 13:11:09,959:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              f933
2022-10-01 13:11:09,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,974:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,693:INFO:setup() successfully completed in 5.67s...............
2022-10-01 13:11:10,693:INFO:Initializing compare_models()
2022-10-01 13:11:10,693:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:11:10,693:INFO:Checking exceptions
2022-10-01 13:11:10,694:INFO:Preparing display monitor
2022-10-01 13:11:10,697:INFO:Initializing Linear Regression
2022-10-01 13:11:10,697:INFO:Total runtime is 0.0 minutes
2022-10-01 13:11:10,698:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:10,698:INFO:Initializing create_model()
2022-10-01 13:11:10,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:10,698:INFO:Checking exceptions
2022-10-01 13:11:10,699:INFO:Importing libraries
2022-10-01 13:11:10,699:INFO:Copying training dataset
2022-10-01 13:11:10,701:INFO:Defining folds
2022-10-01 13:11:10,701:INFO:Declaring metric variables
2022-10-01 13:11:10,702:INFO:Importing untrained model
2022-10-01 13:11:10,702:INFO:Linear Regression Imported successfully
2022-10-01 13:11:10,702:INFO:Starting cross validation
2022-10-01 13:11:10,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:10,910:INFO:Calculating mean and std
2022-10-01 13:11:10,911:INFO:Creating metrics dataframe
2022-10-01 13:11:10,913:INFO:Uploading results into container
2022-10-01 13:11:10,913:INFO:Uploading model into container now
2022-10-01 13:11:10,914:INFO:master_model_container: 1
2022-10-01 13:11:10,914:INFO:display_container: 2
2022-10-01 13:11:10,914:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:10,914:INFO:create_model() successfully completed......................................
2022-10-01 13:11:10,990:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:10,990:INFO:Creating metrics dataframe
2022-10-01 13:11:10,993:INFO:Initializing Lasso Regression
2022-10-01 13:11:10,994:INFO:Total runtime is 0.004949319362640381 minutes
2022-10-01 13:11:10,994:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:10,994:INFO:Initializing create_model()
2022-10-01 13:11:10,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:10,994:INFO:Checking exceptions
2022-10-01 13:11:10,995:INFO:Importing libraries
2022-10-01 13:11:10,995:INFO:Copying training dataset
2022-10-01 13:11:10,997:INFO:Defining folds
2022-10-01 13:11:10,997:INFO:Declaring metric variables
2022-10-01 13:11:10,997:INFO:Importing untrained model
2022-10-01 13:11:10,997:INFO:Lasso Regression Imported successfully
2022-10-01 13:11:10,997:INFO:Starting cross validation
2022-10-01 13:11:10,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,010:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,027:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,045:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,063:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,080:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,099:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,118:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,137:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,155:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,172:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,180:INFO:Calculating mean and std
2022-10-01 13:11:11,181:INFO:Creating metrics dataframe
2022-10-01 13:11:11,183:INFO:Uploading results into container
2022-10-01 13:11:11,183:INFO:Uploading model into container now
2022-10-01 13:11:11,184:INFO:master_model_container: 2
2022-10-01 13:11:11,184:INFO:display_container: 2
2022-10-01 13:11:11,184:INFO:Lasso(random_state=123)
2022-10-01 13:11:11,184:INFO:create_model() successfully completed......................................
2022-10-01 13:11:11,255:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:11,255:INFO:Creating metrics dataframe
2022-10-01 13:11:11,259:INFO:Initializing Ridge Regression
2022-10-01 13:11:11,259:INFO:Total runtime is 0.009364831447601318 minutes
2022-10-01 13:11:11,259:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:11,259:INFO:Initializing create_model()
2022-10-01 13:11:11,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:11,259:INFO:Checking exceptions
2022-10-01 13:11:11,260:INFO:Importing libraries
2022-10-01 13:11:11,260:INFO:Copying training dataset
2022-10-01 13:11:11,262:INFO:Defining folds
2022-10-01 13:11:11,262:INFO:Declaring metric variables
2022-10-01 13:11:11,262:INFO:Importing untrained model
2022-10-01 13:11:11,262:INFO:Ridge Regression Imported successfully
2022-10-01 13:11:11,262:INFO:Starting cross validation
2022-10-01 13:11:11,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,274:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,291:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,308:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,326:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,342:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,359:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,376:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,392:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,409:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,426:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,433:INFO:Calculating mean and std
2022-10-01 13:11:11,433:INFO:Creating metrics dataframe
2022-10-01 13:11:11,436:INFO:Uploading results into container
2022-10-01 13:11:11,436:INFO:Uploading model into container now
2022-10-01 13:11:11,436:INFO:master_model_container: 3
2022-10-01 13:11:11,436:INFO:display_container: 2
2022-10-01 13:11:11,437:INFO:Ridge(random_state=123)
2022-10-01 13:11:11,437:INFO:create_model() successfully completed......................................
2022-10-01 13:11:11,512:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:11,512:INFO:Creating metrics dataframe
2022-10-01 13:11:11,516:INFO:Initializing Elastic Net
2022-10-01 13:11:11,516:INFO:Total runtime is 0.013646944363911947 minutes
2022-10-01 13:11:11,516:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:11,516:INFO:Initializing create_model()
2022-10-01 13:11:11,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:11,516:INFO:Checking exceptions
2022-10-01 13:11:11,517:INFO:Importing libraries
2022-10-01 13:11:11,517:INFO:Copying training dataset
2022-10-01 13:11:11,519:INFO:Defining folds
2022-10-01 13:11:11,519:INFO:Declaring metric variables
2022-10-01 13:11:11,519:INFO:Importing untrained model
2022-10-01 13:11:11,519:INFO:Elastic Net Imported successfully
2022-10-01 13:11:11,519:INFO:Starting cross validation
2022-10-01 13:11:11,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,531:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,549:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,566:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,584:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,602:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,620:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,637:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,656:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,673:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,690:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,698:INFO:Calculating mean and std
2022-10-01 13:11:11,699:INFO:Creating metrics dataframe
2022-10-01 13:11:11,700:INFO:Uploading results into container
2022-10-01 13:11:11,701:INFO:Uploading model into container now
2022-10-01 13:11:11,701:INFO:master_model_container: 4
2022-10-01 13:11:11,701:INFO:display_container: 2
2022-10-01 13:11:11,701:INFO:ElasticNet(random_state=123)
2022-10-01 13:11:11,701:INFO:create_model() successfully completed......................................
2022-10-01 13:11:11,773:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:11,773:INFO:Creating metrics dataframe
2022-10-01 13:11:11,777:INFO:Initializing Least Angle Regression
2022-10-01 13:11:11,777:INFO:Total runtime is 0.01800063451131185 minutes
2022-10-01 13:11:11,777:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:11,777:INFO:Initializing create_model()
2022-10-01 13:11:11,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:11,777:INFO:Checking exceptions
2022-10-01 13:11:11,778:INFO:Importing libraries
2022-10-01 13:11:11,778:INFO:Copying training dataset
2022-10-01 13:11:11,780:INFO:Defining folds
2022-10-01 13:11:11,780:INFO:Declaring metric variables
2022-10-01 13:11:11,780:INFO:Importing untrained model
2022-10-01 13:11:11,780:INFO:Least Angle Regression Imported successfully
2022-10-01 13:11:11,781:INFO:Starting cross validation
2022-10-01 13:11:11,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,791:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,809:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,827:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,844:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,862:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,879:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,896:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,913:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,931:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,948:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,956:INFO:Calculating mean and std
2022-10-01 13:11:11,957:INFO:Creating metrics dataframe
2022-10-01 13:11:11,959:INFO:Uploading results into container
2022-10-01 13:11:11,960:INFO:Uploading model into container now
2022-10-01 13:11:11,960:INFO:master_model_container: 5
2022-10-01 13:11:11,960:INFO:display_container: 2
2022-10-01 13:11:11,960:INFO:Lars(random_state=123)
2022-10-01 13:11:11,960:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,033:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,033:INFO:Creating metrics dataframe
2022-10-01 13:11:12,037:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:11:12,037:INFO:Total runtime is 0.02233216365178426 minutes
2022-10-01 13:11:12,037:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,037:INFO:Initializing create_model()
2022-10-01 13:11:12,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,037:INFO:Checking exceptions
2022-10-01 13:11:12,038:INFO:Importing libraries
2022-10-01 13:11:12,038:INFO:Copying training dataset
2022-10-01 13:11:12,040:INFO:Defining folds
2022-10-01 13:11:12,040:INFO:Declaring metric variables
2022-10-01 13:11:12,040:INFO:Importing untrained model
2022-10-01 13:11:12,040:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:11:12,041:INFO:Starting cross validation
2022-10-01 13:11:12,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,052:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,070:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,087:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,105:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,124:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,141:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,158:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,175:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,192:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,209:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,217:INFO:Calculating mean and std
2022-10-01 13:11:12,218:INFO:Creating metrics dataframe
2022-10-01 13:11:12,220:INFO:Uploading results into container
2022-10-01 13:11:12,221:INFO:Uploading model into container now
2022-10-01 13:11:12,221:INFO:master_model_container: 6
2022-10-01 13:11:12,221:INFO:display_container: 2
2022-10-01 13:11:12,221:INFO:LassoLars(random_state=123)
2022-10-01 13:11:12,221:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,299:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,299:INFO:Creating metrics dataframe
2022-10-01 13:11:12,302:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:11:12,303:INFO:Total runtime is 0.026764289538065592 minutes
2022-10-01 13:11:12,303:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,303:INFO:Initializing create_model()
2022-10-01 13:11:12,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,303:INFO:Checking exceptions
2022-10-01 13:11:12,304:INFO:Importing libraries
2022-10-01 13:11:12,304:INFO:Copying training dataset
2022-10-01 13:11:12,306:INFO:Defining folds
2022-10-01 13:11:12,306:INFO:Declaring metric variables
2022-10-01 13:11:12,306:INFO:Importing untrained model
2022-10-01 13:11:12,306:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:11:12,306:INFO:Starting cross validation
2022-10-01 13:11:12,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,316:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,333:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,351:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,368:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,385:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,402:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,419:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,436:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,469:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,477:INFO:Calculating mean and std
2022-10-01 13:11:12,478:INFO:Creating metrics dataframe
2022-10-01 13:11:12,480:INFO:Uploading results into container
2022-10-01 13:11:12,481:INFO:Uploading model into container now
2022-10-01 13:11:12,481:INFO:master_model_container: 7
2022-10-01 13:11:12,481:INFO:display_container: 2
2022-10-01 13:11:12,481:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:11:12,481:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,553:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,553:INFO:Creating metrics dataframe
2022-10-01 13:11:12,557:INFO:Initializing Bayesian Ridge
2022-10-01 13:11:12,557:INFO:Total runtime is 0.030997029940287274 minutes
2022-10-01 13:11:12,558:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,558:INFO:Initializing create_model()
2022-10-01 13:11:12,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,558:INFO:Checking exceptions
2022-10-01 13:11:12,559:INFO:Importing libraries
2022-10-01 13:11:12,559:INFO:Copying training dataset
2022-10-01 13:11:12,561:INFO:Defining folds
2022-10-01 13:11:12,561:INFO:Declaring metric variables
2022-10-01 13:11:12,561:INFO:Importing untrained model
2022-10-01 13:11:12,561:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:11:12,561:INFO:Starting cross validation
2022-10-01 13:11:12,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,734:INFO:Calculating mean and std
2022-10-01 13:11:12,735:INFO:Creating metrics dataframe
2022-10-01 13:11:12,737:INFO:Uploading results into container
2022-10-01 13:11:12,738:INFO:Uploading model into container now
2022-10-01 13:11:12,738:INFO:master_model_container: 8
2022-10-01 13:11:12,738:INFO:display_container: 2
2022-10-01 13:11:12,738:INFO:BayesianRidge()
2022-10-01 13:11:12,738:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,815:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,815:INFO:Creating metrics dataframe
2022-10-01 13:11:12,818:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:11:12,819:INFO:Total runtime is 0.035345947742462164 minutes
2022-10-01 13:11:12,819:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,819:INFO:Initializing create_model()
2022-10-01 13:11:12,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,819:INFO:Checking exceptions
2022-10-01 13:11:12,820:INFO:Importing libraries
2022-10-01 13:11:12,820:INFO:Copying training dataset
2022-10-01 13:11:12,821:INFO:Defining folds
2022-10-01 13:11:12,822:INFO:Declaring metric variables
2022-10-01 13:11:12,822:INFO:Importing untrained model
2022-10-01 13:11:12,822:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:11:12,822:INFO:Starting cross validation
2022-10-01 13:11:12,823:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,990:INFO:Calculating mean and std
2022-10-01 13:11:12,991:INFO:Creating metrics dataframe
2022-10-01 13:11:12,994:INFO:Uploading results into container
2022-10-01 13:11:12,994:INFO:Uploading model into container now
2022-10-01 13:11:12,994:INFO:master_model_container: 9
2022-10-01 13:11:12,994:INFO:display_container: 2
2022-10-01 13:11:12,995:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:11:12,995:INFO:create_model() successfully completed......................................
2022-10-01 13:11:13,070:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:13,070:INFO:Creating metrics dataframe
2022-10-01 13:11:13,074:INFO:Initializing Huber Regressor
2022-10-01 13:11:13,074:INFO:Total runtime is 0.03961147864659628 minutes
2022-10-01 13:11:13,074:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:13,075:INFO:Initializing create_model()
2022-10-01 13:11:13,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:13,075:INFO:Checking exceptions
2022-10-01 13:11:13,076:INFO:Importing libraries
2022-10-01 13:11:13,076:INFO:Copying training dataset
2022-10-01 13:11:13,077:INFO:Defining folds
2022-10-01 13:11:13,077:INFO:Declaring metric variables
2022-10-01 13:11:13,077:INFO:Importing untrained model
2022-10-01 13:11:13,078:INFO:Huber Regressor Imported successfully
2022-10-01 13:11:13,078:INFO:Starting cross validation
2022-10-01 13:11:13,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:13,304:INFO:Calculating mean and std
2022-10-01 13:11:13,304:INFO:Creating metrics dataframe
2022-10-01 13:11:13,307:INFO:Uploading results into container
2022-10-01 13:11:13,307:INFO:Uploading model into container now
2022-10-01 13:11:13,308:INFO:master_model_container: 10
2022-10-01 13:11:13,308:INFO:display_container: 2
2022-10-01 13:11:13,308:INFO:HuberRegressor()
2022-10-01 13:11:13,308:INFO:create_model() successfully completed......................................
2022-10-01 13:11:13,381:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:13,381:INFO:Creating metrics dataframe
2022-10-01 13:11:13,385:INFO:Initializing K Neighbors Regressor
2022-10-01 13:11:13,385:INFO:Total runtime is 0.0447928269704183 minutes
2022-10-01 13:11:13,385:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:13,385:INFO:Initializing create_model()
2022-10-01 13:11:13,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:13,385:INFO:Checking exceptions
2022-10-01 13:11:13,386:INFO:Importing libraries
2022-10-01 13:11:13,386:INFO:Copying training dataset
2022-10-01 13:11:13,388:INFO:Defining folds
2022-10-01 13:11:13,388:INFO:Declaring metric variables
2022-10-01 13:11:13,388:INFO:Importing untrained model
2022-10-01 13:11:13,388:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:11:13,388:INFO:Starting cross validation
2022-10-01 13:11:13,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:16,810:INFO:Calculating mean and std
2022-10-01 13:11:16,811:INFO:Creating metrics dataframe
2022-10-01 13:11:16,813:INFO:Uploading results into container
2022-10-01 13:11:16,814:INFO:Uploading model into container now
2022-10-01 13:11:16,814:INFO:master_model_container: 11
2022-10-01 13:11:16,814:INFO:display_container: 2
2022-10-01 13:11:16,814:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:11:16,814:INFO:create_model() successfully completed......................................
2022-10-01 13:11:16,887:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:16,887:INFO:Creating metrics dataframe
2022-10-01 13:11:16,891:INFO:Initializing Decision Tree Regressor
2022-10-01 13:11:16,891:INFO:Total runtime is 0.10322792132695516 minutes
2022-10-01 13:11:16,891:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:16,892:INFO:Initializing create_model()
2022-10-01 13:11:16,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:16,892:INFO:Checking exceptions
2022-10-01 13:11:16,893:INFO:Importing libraries
2022-10-01 13:11:16,893:INFO:Copying training dataset
2022-10-01 13:11:16,894:INFO:Defining folds
2022-10-01 13:11:16,894:INFO:Declaring metric variables
2022-10-01 13:11:16,894:INFO:Importing untrained model
2022-10-01 13:11:16,895:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:11:16,895:INFO:Starting cross validation
2022-10-01 13:11:16,896:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:17,073:INFO:Calculating mean and std
2022-10-01 13:11:17,074:INFO:Creating metrics dataframe
2022-10-01 13:11:17,076:INFO:Uploading results into container
2022-10-01 13:11:17,077:INFO:Uploading model into container now
2022-10-01 13:11:17,077:INFO:master_model_container: 12
2022-10-01 13:11:17,077:INFO:display_container: 2
2022-10-01 13:11:17,077:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:11:17,077:INFO:create_model() successfully completed......................................
2022-10-01 13:11:17,150:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:17,150:INFO:Creating metrics dataframe
2022-10-01 13:11:17,154:INFO:Initializing Random Forest Regressor
2022-10-01 13:11:17,154:INFO:Total runtime is 0.10761003096898397 minutes
2022-10-01 13:11:17,154:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:17,155:INFO:Initializing create_model()
2022-10-01 13:11:17,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:17,155:INFO:Checking exceptions
2022-10-01 13:11:17,156:INFO:Importing libraries
2022-10-01 13:11:17,156:INFO:Copying training dataset
2022-10-01 13:11:17,157:INFO:Defining folds
2022-10-01 13:11:17,157:INFO:Declaring metric variables
2022-10-01 13:11:17,158:INFO:Importing untrained model
2022-10-01 13:11:17,158:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:11:17,158:INFO:Starting cross validation
2022-10-01 13:11:17,159:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:18,341:INFO:Calculating mean and std
2022-10-01 13:11:18,342:INFO:Creating metrics dataframe
2022-10-01 13:11:18,344:INFO:Uploading results into container
2022-10-01 13:11:18,345:INFO:Uploading model into container now
2022-10-01 13:11:18,345:INFO:master_model_container: 13
2022-10-01 13:11:18,345:INFO:display_container: 2
2022-10-01 13:11:18,345:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:11:18,345:INFO:create_model() successfully completed......................................
2022-10-01 13:11:18,418:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:18,418:INFO:Creating metrics dataframe
2022-10-01 13:11:18,422:INFO:Initializing Extra Trees Regressor
2022-10-01 13:11:18,422:INFO:Total runtime is 0.12874761819839478 minutes
2022-10-01 13:11:18,422:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:18,422:INFO:Initializing create_model()
2022-10-01 13:11:18,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:18,423:INFO:Checking exceptions
2022-10-01 13:11:18,424:INFO:Importing libraries
2022-10-01 13:11:18,424:INFO:Copying training dataset
2022-10-01 13:11:18,425:INFO:Defining folds
2022-10-01 13:11:18,425:INFO:Declaring metric variables
2022-10-01 13:11:18,425:INFO:Importing untrained model
2022-10-01 13:11:18,426:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:11:18,426:INFO:Starting cross validation
2022-10-01 13:11:18,427:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:19,554:INFO:Calculating mean and std
2022-10-01 13:11:19,555:INFO:Creating metrics dataframe
2022-10-01 13:11:19,558:INFO:Uploading results into container
2022-10-01 13:11:19,558:INFO:Uploading model into container now
2022-10-01 13:11:19,558:INFO:master_model_container: 14
2022-10-01 13:11:19,558:INFO:display_container: 2
2022-10-01 13:11:19,559:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:11:19,559:INFO:create_model() successfully completed......................................
2022-10-01 13:11:19,631:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:19,631:INFO:Creating metrics dataframe
2022-10-01 13:11:19,634:INFO:Initializing AdaBoost Regressor
2022-10-01 13:11:19,635:INFO:Total runtime is 0.14896668593088785 minutes
2022-10-01 13:11:19,635:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:19,635:INFO:Initializing create_model()
2022-10-01 13:11:19,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:19,635:INFO:Checking exceptions
2022-10-01 13:11:19,636:INFO:Importing libraries
2022-10-01 13:11:19,636:INFO:Copying training dataset
2022-10-01 13:11:19,638:INFO:Defining folds
2022-10-01 13:11:19,638:INFO:Declaring metric variables
2022-10-01 13:11:19,638:INFO:Importing untrained model
2022-10-01 13:11:19,638:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:11:19,638:INFO:Starting cross validation
2022-10-01 13:11:19,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:20,306:INFO:Calculating mean and std
2022-10-01 13:11:20,307:INFO:Creating metrics dataframe
2022-10-01 13:11:20,310:INFO:Uploading results into container
2022-10-01 13:11:20,310:INFO:Uploading model into container now
2022-10-01 13:11:20,310:INFO:master_model_container: 15
2022-10-01 13:11:20,310:INFO:display_container: 2
2022-10-01 13:11:20,310:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:11:20,310:INFO:create_model() successfully completed......................................
2022-10-01 13:11:20,387:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:20,387:INFO:Creating metrics dataframe
2022-10-01 13:11:20,391:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:11:20,392:INFO:Total runtime is 0.16157998243967692 minutes
2022-10-01 13:11:20,392:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:20,392:INFO:Initializing create_model()
2022-10-01 13:11:20,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:20,392:INFO:Checking exceptions
2022-10-01 13:11:20,393:INFO:Importing libraries
2022-10-01 13:11:20,393:INFO:Copying training dataset
2022-10-01 13:11:20,395:INFO:Defining folds
2022-10-01 13:11:20,395:INFO:Declaring metric variables
2022-10-01 13:11:20,395:INFO:Importing untrained model
2022-10-01 13:11:20,395:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:11:20,395:INFO:Starting cross validation
2022-10-01 13:11:20,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:20,964:INFO:Calculating mean and std
2022-10-01 13:11:20,965:INFO:Creating metrics dataframe
2022-10-01 13:11:20,967:INFO:Uploading results into container
2022-10-01 13:11:20,968:INFO:Uploading model into container now
2022-10-01 13:11:20,968:INFO:master_model_container: 16
2022-10-01 13:11:20,968:INFO:display_container: 2
2022-10-01 13:11:20,968:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:11:20,968:INFO:create_model() successfully completed......................................
2022-10-01 13:11:21,042:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:21,042:INFO:Creating metrics dataframe
2022-10-01 13:11:21,046:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:11:21,047:INFO:Total runtime is 0.17248994509379068 minutes
2022-10-01 13:11:21,047:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:21,047:INFO:Initializing create_model()
2022-10-01 13:11:21,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:21,047:INFO:Checking exceptions
2022-10-01 13:11:21,048:INFO:Importing libraries
2022-10-01 13:11:21,048:INFO:Copying training dataset
2022-10-01 13:11:21,050:INFO:Defining folds
2022-10-01 13:11:21,050:INFO:Declaring metric variables
2022-10-01 13:11:21,050:INFO:Importing untrained model
2022-10-01 13:11:21,050:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:11:21,050:INFO:Starting cross validation
2022-10-01 13:11:21,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:25,517:INFO:Calculating mean and std
2022-10-01 13:11:25,518:INFO:Creating metrics dataframe
2022-10-01 13:11:25,521:INFO:Uploading results into container
2022-10-01 13:11:25,522:INFO:Uploading model into container now
2022-10-01 13:11:25,522:INFO:master_model_container: 17
2022-10-01 13:11:25,522:INFO:display_container: 2
2022-10-01 13:11:25,523:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:11:25,523:INFO:create_model() successfully completed......................................
2022-10-01 13:11:25,607:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:25,607:INFO:Creating metrics dataframe
2022-10-01 13:11:25,612:INFO:Initializing Dummy Regressor
2022-10-01 13:11:25,612:INFO:Total runtime is 0.2485697786013285 minutes
2022-10-01 13:11:25,612:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:25,613:INFO:Initializing create_model()
2022-10-01 13:11:25,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:25,613:INFO:Checking exceptions
2022-10-01 13:11:25,614:INFO:Importing libraries
2022-10-01 13:11:25,614:INFO:Copying training dataset
2022-10-01 13:11:25,616:INFO:Defining folds
2022-10-01 13:11:25,616:INFO:Declaring metric variables
2022-10-01 13:11:25,616:INFO:Importing untrained model
2022-10-01 13:11:25,616:INFO:Dummy Regressor Imported successfully
2022-10-01 13:11:25,617:INFO:Starting cross validation
2022-10-01 13:11:25,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:25,768:INFO:Calculating mean and std
2022-10-01 13:11:25,769:INFO:Creating metrics dataframe
2022-10-01 13:11:25,771:INFO:Uploading results into container
2022-10-01 13:11:25,771:INFO:Uploading model into container now
2022-10-01 13:11:25,772:INFO:master_model_container: 18
2022-10-01 13:11:25,772:INFO:display_container: 2
2022-10-01 13:11:25,772:INFO:DummyRegressor()
2022-10-01 13:11:25,772:INFO:create_model() successfully completed......................................
2022-10-01 13:11:25,846:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:25,846:INFO:Creating metrics dataframe
2022-10-01 13:11:25,851:INFO:Initializing create_model()
2022-10-01 13:11:25,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:25,851:INFO:Checking exceptions
2022-10-01 13:11:25,853:INFO:Importing libraries
2022-10-01 13:11:25,853:INFO:Copying training dataset
2022-10-01 13:11:25,855:INFO:Defining folds
2022-10-01 13:11:25,855:INFO:Declaring metric variables
2022-10-01 13:11:25,855:INFO:Importing untrained model
2022-10-01 13:11:25,855:INFO:Declaring custom model
2022-10-01 13:11:25,855:INFO:Linear Regression Imported successfully
2022-10-01 13:11:25,856:INFO:Cross validation set to False
2022-10-01 13:11:25,856:INFO:Fitting Model
2022-10-01 13:11:25,865:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:25,865:INFO:create_model() successfully completed......................................
2022-10-01 13:11:25,951:INFO:master_model_container: 18
2022-10-01 13:11:25,951:INFO:display_container: 2
2022-10-01 13:11:25,951:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:25,951:INFO:compare_models() successfully completed......................................
2022-10-01 13:11:25,952:INFO:Initializing create_model()
2022-10-01 13:11:25,952:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:25,952:INFO:Checking exceptions
2022-10-01 13:11:25,955:INFO:Importing libraries
2022-10-01 13:11:25,956:INFO:Copying training dataset
2022-10-01 13:11:25,958:INFO:Defining folds
2022-10-01 13:11:25,959:INFO:Declaring metric variables
2022-10-01 13:11:25,959:INFO:Importing untrained model
2022-10-01 13:11:25,959:INFO:Declaring custom model
2022-10-01 13:11:25,959:INFO:Linear Regression Imported successfully
2022-10-01 13:11:25,959:INFO:Starting cross validation
2022-10-01 13:11:25,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:26,164:INFO:Calculating mean and std
2022-10-01 13:11:26,165:INFO:Creating metrics dataframe
2022-10-01 13:11:26,166:INFO:Finalizing model
2022-10-01 13:11:26,176:INFO:Uploading results into container
2022-10-01 13:11:26,176:INFO:Uploading model into container now
2022-10-01 13:11:26,185:INFO:master_model_container: 19
2022-10-01 13:11:26,185:INFO:display_container: 3
2022-10-01 13:11:26,186:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:26,186:INFO:create_model() successfully completed......................................
2022-10-01 13:11:26,278:INFO:Initializing predict_model()
2022-10-01 13:11:26,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000203842BB6D0>)
2022-10-01 13:11:26,278:INFO:Checking exceptions
2022-10-01 13:11:26,278:INFO:Preloading libraries
2022-10-01 13:11:26,278:INFO:Set up data.
2022-10-01 13:11:26,281:INFO:Set up index.
2022-10-01 13:11:26,419:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,918:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:11:55,078:INFO:PyCaret RegressionExperiment
2022-10-01 13:11:55,078:INFO:Logging name: reg-default-name
2022-10-01 13:11:55,078:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:11:55,078:INFO:version 3.0.0.rc4
2022-10-01 13:11:55,078:INFO:Initializing setup()
2022-10-01 13:11:55,078:INFO:self.USI: ec85
2022-10-01 13:11:55,078:INFO:self.variable_keys: {'data', 'y', 'gpu_param', 'target_param', 'X', 'exp_id', 'fold_generator', 'transform_target_param', 'fold_shuffle_param', 'idx', '_available_plots', 'USI', 'master_model_container', '_all_metrics', 'display_container', 'memory', 'variable_keys', 'html_param', 'exp_name_log', 'fold_groups_param', 'X_test', 'pipeline', 'log_plots_param', '_gpu_n_jobs_param', 'y_train', '_ml_usecase', 'logging_param', '_all_models_internal', 'n_jobs_param', 'y_test', 'seed', 'X_train', 'transform_target_method_param', '_all_models'}
2022-10-01 13:11:55,078:INFO:Checking environment
2022-10-01 13:11:55,078:INFO:python_version: 3.10.7
2022-10-01 13:11:55,078:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:11:55,078:INFO:machine: AMD64
2022-10-01 13:11:55,090:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:11:55,090:INFO:Memory: svmem(total=8497213440, available=2254368768, percent=73.5, used=6242844672, free=2254368768)
2022-10-01 13:11:55,091:INFO:Physical Core: 6
2022-10-01 13:11:55,091:INFO:Logical Core: 12
2022-10-01 13:11:55,091:INFO:Checking libraries
2022-10-01 13:11:55,091:INFO:System:
2022-10-01 13:11:55,091:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:11:55,091:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:11:55,091:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:11:55,091:INFO:PyCaret required dependencies:
2022-10-01 13:11:55,091:INFO:                 pip: 22.2.2
2022-10-01 13:11:55,091:INFO:          setuptools: 63.2.0
2022-10-01 13:11:55,091:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:11:55,091:INFO:             IPython: 8.5.0
2022-10-01 13:11:55,091:INFO:          ipywidgets: 8.0.2
2022-10-01 13:11:55,092:INFO:                tqdm: 4.64.1
2022-10-01 13:11:55,092:INFO:               numpy: 1.22.4
2022-10-01 13:11:55,092:INFO:              pandas: 1.4.4
2022-10-01 13:11:55,092:INFO:              jinja2: 3.1.2
2022-10-01 13:11:55,092:INFO:               scipy: 1.8.1
2022-10-01 13:11:55,092:INFO:              joblib: 1.2.0
2022-10-01 13:11:55,092:INFO:             sklearn: 1.1.2
2022-10-01 13:11:55,092:INFO:                pyod: 1.0.5
2022-10-01 13:11:55,092:INFO:            imblearn: 0.9.1
2022-10-01 13:11:55,092:INFO:   category_encoders: 2.5.0
2022-10-01 13:11:55,092:INFO:            lightgbm: 3.3.2
2022-10-01 13:11:55,092:INFO:               numba: 0.55.2
2022-10-01 13:11:55,092:INFO:            requests: 2.28.1
2022-10-01 13:11:55,092:INFO:          matplotlib: 3.6.0
2022-10-01 13:11:55,092:INFO:          scikitplot: 0.3.7
2022-10-01 13:11:55,092:INFO:         yellowbrick: 1.5
2022-10-01 13:11:55,093:INFO:              plotly: 5.10.0
2022-10-01 13:11:55,093:INFO:             kaleido: 0.2.1
2022-10-01 13:11:55,093:INFO:         statsmodels: 0.13.2
2022-10-01 13:11:55,093:INFO:              sktime: 0.13.4
2022-10-01 13:11:55,093:INFO:               tbats: 1.1.0
2022-10-01 13:11:55,093:INFO:            pmdarima: 1.8.5
2022-10-01 13:11:55,093:INFO:              psutil: 5.9.2
2022-10-01 13:11:55,093:INFO:PyCaret optional dependencies:
2022-10-01 13:11:55,108:INFO:                shap: Not installed
2022-10-01 13:11:55,108:INFO:           interpret: Not installed
2022-10-01 13:11:55,108:INFO:                umap: Not installed
2022-10-01 13:11:55,108:INFO:    pandas_profiling: Not installed
2022-10-01 13:11:55,108:INFO:  explainerdashboard: Not installed
2022-10-01 13:11:55,108:INFO:             autoviz: Not installed
2022-10-01 13:11:55,108:INFO:           fairlearn: Not installed
2022-10-01 13:11:55,108:INFO:             xgboost: Not installed
2022-10-01 13:11:55,108:INFO:            catboost: Not installed
2022-10-01 13:11:55,108:INFO:              kmodes: Not installed
2022-10-01 13:11:55,108:INFO:             mlxtend: Not installed
2022-10-01 13:11:55,108:INFO:       statsforecast: Not installed
2022-10-01 13:11:55,108:INFO:        tune_sklearn: Not installed
2022-10-01 13:11:55,108:INFO:                 ray: Not installed
2022-10-01 13:11:55,108:INFO:            hyperopt: Not installed
2022-10-01 13:11:55,108:INFO:              optuna: Not installed
2022-10-01 13:11:55,109:INFO:               skopt: Not installed
2022-10-01 13:11:55,109:INFO:              mlflow: Not installed
2022-10-01 13:11:55,109:INFO:              gradio: Not installed
2022-10-01 13:11:55,109:INFO:             fastapi: Not installed
2022-10-01 13:11:55,109:INFO:             uvicorn: Not installed
2022-10-01 13:11:55,109:INFO:              m2cgen: Not installed
2022-10-01 13:11:55,109:INFO:           evidently: Not installed
2022-10-01 13:11:55,109:INFO:                nltk: Not installed
2022-10-01 13:11:55,109:INFO:            pyLDAvis: Not installed
2022-10-01 13:11:55,109:INFO:              gensim: Not installed
2022-10-01 13:11:55,109:INFO:               spacy: Not installed
2022-10-01 13:11:55,109:INFO:           wordcloud: Not installed
2022-10-01 13:11:55,109:INFO:            textblob: Not installed
2022-10-01 13:11:55,109:INFO:               fugue: Not installed
2022-10-01 13:11:55,109:INFO:           streamlit: Not installed
2022-10-01 13:11:55,109:INFO:             prophet: Not installed
2022-10-01 13:11:55,109:INFO:None
2022-10-01 13:11:55,109:INFO:Set up GPU usage.
2022-10-01 13:11:55,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,109:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:11:55,109:INFO:Set up data.
2022-10-01 13:11:55,113:INFO:Set up train/test split.
2022-10-01 13:11:55,116:INFO:Set up index.
2022-10-01 13:11:55,116:INFO:Set up folding strategy.
2022-10-01 13:11:55,116:INFO:Assigning column types.
2022-10-01 13:11:55,118:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:11:55,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,119:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,123:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,128:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,182:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:55,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:55,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,623:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,630:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,636:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,003:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:11:56,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,010:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,017:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,366:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,372:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,734:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:11:56,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,748:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,122:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,252:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,480:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:11:57,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,620:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,989:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:11:58,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,222:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,311:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:58,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,699:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:58,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,006:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:11:59,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,756:INFO:Preparing preprocessing pipeline...
2022-10-01 13:11:59,756:INFO:Set up simple imputation.
2022-10-01 13:11:59,757:INFO:Set up variance threshold.
2022-10-01 13:11:59,772:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:11:59,779:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:11:59,779:INFO:Creating final display dataframe.
2022-10-01 13:11:59,858:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              ec85
2022-10-01 13:11:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,592:INFO:setup() successfully completed in 5.51s...............
2022-10-01 13:12:00,592:INFO:Initializing compare_models()
2022-10-01 13:12:00,592:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:12:00,592:INFO:Checking exceptions
2022-10-01 13:12:00,594:INFO:Preparing display monitor
2022-10-01 13:12:00,597:INFO:Initializing Linear Regression
2022-10-01 13:12:00,597:INFO:Total runtime is 0.0 minutes
2022-10-01 13:12:00,597:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:00,598:INFO:Initializing create_model()
2022-10-01 13:12:00,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:00,598:INFO:Checking exceptions
2022-10-01 13:12:00,599:INFO:Importing libraries
2022-10-01 13:12:00,599:INFO:Copying training dataset
2022-10-01 13:12:00,601:INFO:Defining folds
2022-10-01 13:12:00,601:INFO:Declaring metric variables
2022-10-01 13:12:00,601:INFO:Importing untrained model
2022-10-01 13:12:00,602:INFO:Linear Regression Imported successfully
2022-10-01 13:12:00,602:INFO:Starting cross validation
2022-10-01 13:12:00,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:00,806:INFO:Calculating mean and std
2022-10-01 13:12:00,807:INFO:Creating metrics dataframe
2022-10-01 13:12:00,809:INFO:Uploading results into container
2022-10-01 13:12:00,809:INFO:Uploading model into container now
2022-10-01 13:12:00,810:INFO:master_model_container: 1
2022-10-01 13:12:00,810:INFO:display_container: 2
2022-10-01 13:12:00,810:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:00,810:INFO:create_model() successfully completed......................................
2022-10-01 13:12:00,887:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:00,887:INFO:Creating metrics dataframe
2022-10-01 13:12:00,890:INFO:Initializing Lasso Regression
2022-10-01 13:12:00,890:INFO:Total runtime is 0.004898695151011149 minutes
2022-10-01 13:12:00,891:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:00,891:INFO:Initializing create_model()
2022-10-01 13:12:00,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:00,891:INFO:Checking exceptions
2022-10-01 13:12:00,892:INFO:Importing libraries
2022-10-01 13:12:00,892:INFO:Copying training dataset
2022-10-01 13:12:00,894:INFO:Defining folds
2022-10-01 13:12:00,894:INFO:Declaring metric variables
2022-10-01 13:12:00,894:INFO:Importing untrained model
2022-10-01 13:12:00,894:INFO:Lasso Regression Imported successfully
2022-10-01 13:12:00,894:INFO:Starting cross validation
2022-10-01 13:12:00,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:00,907:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,925:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,943:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,961:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,979:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,996:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,014:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,032:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,050:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,067:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,074:INFO:Calculating mean and std
2022-10-01 13:12:01,075:INFO:Creating metrics dataframe
2022-10-01 13:12:01,077:INFO:Uploading results into container
2022-10-01 13:12:01,078:INFO:Uploading model into container now
2022-10-01 13:12:01,078:INFO:master_model_container: 2
2022-10-01 13:12:01,078:INFO:display_container: 2
2022-10-01 13:12:01,078:INFO:Lasso(random_state=123)
2022-10-01 13:12:01,078:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,152:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,152:INFO:Creating metrics dataframe
2022-10-01 13:12:01,156:INFO:Initializing Ridge Regression
2022-10-01 13:12:01,156:INFO:Total runtime is 0.009331377347310384 minutes
2022-10-01 13:12:01,157:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,157:INFO:Initializing create_model()
2022-10-01 13:12:01,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,157:INFO:Checking exceptions
2022-10-01 13:12:01,158:INFO:Importing libraries
2022-10-01 13:12:01,158:INFO:Copying training dataset
2022-10-01 13:12:01,159:INFO:Defining folds
2022-10-01 13:12:01,160:INFO:Declaring metric variables
2022-10-01 13:12:01,160:INFO:Importing untrained model
2022-10-01 13:12:01,160:INFO:Ridge Regression Imported successfully
2022-10-01 13:12:01,160:INFO:Starting cross validation
2022-10-01 13:12:01,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,172:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,189:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,205:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,222:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,239:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,255:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,272:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,289:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,306:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,323:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,331:INFO:Calculating mean and std
2022-10-01 13:12:01,332:INFO:Creating metrics dataframe
2022-10-01 13:12:01,334:INFO:Uploading results into container
2022-10-01 13:12:01,334:INFO:Uploading model into container now
2022-10-01 13:12:01,335:INFO:master_model_container: 3
2022-10-01 13:12:01,335:INFO:display_container: 2
2022-10-01 13:12:01,335:INFO:Ridge(random_state=123)
2022-10-01 13:12:01,335:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,409:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,409:INFO:Creating metrics dataframe
2022-10-01 13:12:01,413:INFO:Initializing Elastic Net
2022-10-01 13:12:01,413:INFO:Total runtime is 0.013609278202056884 minutes
2022-10-01 13:12:01,413:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,413:INFO:Initializing create_model()
2022-10-01 13:12:01,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,414:INFO:Checking exceptions
2022-10-01 13:12:01,414:INFO:Importing libraries
2022-10-01 13:12:01,415:INFO:Copying training dataset
2022-10-01 13:12:01,416:INFO:Defining folds
2022-10-01 13:12:01,416:INFO:Declaring metric variables
2022-10-01 13:12:01,416:INFO:Importing untrained model
2022-10-01 13:12:01,417:INFO:Elastic Net Imported successfully
2022-10-01 13:12:01,417:INFO:Starting cross validation
2022-10-01 13:12:01,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,432:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,470:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,487:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,505:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,522:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,539:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,556:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,590:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,598:INFO:Calculating mean and std
2022-10-01 13:12:01,598:INFO:Creating metrics dataframe
2022-10-01 13:12:01,601:INFO:Uploading results into container
2022-10-01 13:12:01,601:INFO:Uploading model into container now
2022-10-01 13:12:01,601:INFO:master_model_container: 4
2022-10-01 13:12:01,601:INFO:display_container: 2
2022-10-01 13:12:01,602:INFO:ElasticNet(random_state=123)
2022-10-01 13:12:01,602:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,676:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,676:INFO:Creating metrics dataframe
2022-10-01 13:12:01,680:INFO:Initializing Least Angle Regression
2022-10-01 13:12:01,680:INFO:Total runtime is 0.01805855433146159 minutes
2022-10-01 13:12:01,680:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,681:INFO:Initializing create_model()
2022-10-01 13:12:01,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,681:INFO:Checking exceptions
2022-10-01 13:12:01,682:INFO:Importing libraries
2022-10-01 13:12:01,682:INFO:Copying training dataset
2022-10-01 13:12:01,683:INFO:Defining folds
2022-10-01 13:12:01,683:INFO:Declaring metric variables
2022-10-01 13:12:01,683:INFO:Importing untrained model
2022-10-01 13:12:01,684:INFO:Least Angle Regression Imported successfully
2022-10-01 13:12:01,684:INFO:Starting cross validation
2022-10-01 13:12:01,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,694:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,712:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,729:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,747:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,764:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,782:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,799:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,816:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,834:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,851:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,859:INFO:Calculating mean and std
2022-10-01 13:12:01,859:INFO:Creating metrics dataframe
2022-10-01 13:12:01,862:INFO:Uploading results into container
2022-10-01 13:12:01,862:INFO:Uploading model into container now
2022-10-01 13:12:01,863:INFO:master_model_container: 5
2022-10-01 13:12:01,863:INFO:display_container: 2
2022-10-01 13:12:01,863:INFO:Lars(random_state=123)
2022-10-01 13:12:01,863:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,938:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,938:INFO:Creating metrics dataframe
2022-10-01 13:12:01,942:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:12:01,942:INFO:Total runtime is 0.022424010435740153 minutes
2022-10-01 13:12:01,942:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,942:INFO:Initializing create_model()
2022-10-01 13:12:01,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,943:INFO:Checking exceptions
2022-10-01 13:12:01,944:INFO:Importing libraries
2022-10-01 13:12:01,944:INFO:Copying training dataset
2022-10-01 13:12:01,945:INFO:Defining folds
2022-10-01 13:12:01,945:INFO:Declaring metric variables
2022-10-01 13:12:01,945:INFO:Importing untrained model
2022-10-01 13:12:01,946:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:12:01,946:INFO:Starting cross validation
2022-10-01 13:12:01,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,957:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:01,974:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:01,991:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,008:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,026:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,043:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,061:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,078:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,096:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,113:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,121:INFO:Calculating mean and std
2022-10-01 13:12:02,122:INFO:Creating metrics dataframe
2022-10-01 13:12:02,124:INFO:Uploading results into container
2022-10-01 13:12:02,125:INFO:Uploading model into container now
2022-10-01 13:12:02,125:INFO:master_model_container: 6
2022-10-01 13:12:02,125:INFO:display_container: 2
2022-10-01 13:12:02,125:INFO:LassoLars(random_state=123)
2022-10-01 13:12:02,125:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,199:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,199:INFO:Creating metrics dataframe
2022-10-01 13:12:02,203:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:12:02,203:INFO:Total runtime is 0.026772427558898925 minutes
2022-10-01 13:12:02,203:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,203:INFO:Initializing create_model()
2022-10-01 13:12:02,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,203:INFO:Checking exceptions
2022-10-01 13:12:02,204:INFO:Importing libraries
2022-10-01 13:12:02,204:INFO:Copying training dataset
2022-10-01 13:12:02,206:INFO:Defining folds
2022-10-01 13:12:02,206:INFO:Declaring metric variables
2022-10-01 13:12:02,206:INFO:Importing untrained model
2022-10-01 13:12:02,206:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:12:02,207:INFO:Starting cross validation
2022-10-01 13:12:02,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:02,216:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,234:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,251:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,268:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,286:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,320:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,337:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,353:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,370:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,378:INFO:Calculating mean and std
2022-10-01 13:12:02,379:INFO:Creating metrics dataframe
2022-10-01 13:12:02,381:INFO:Uploading results into container
2022-10-01 13:12:02,382:INFO:Uploading model into container now
2022-10-01 13:12:02,382:INFO:master_model_container: 7
2022-10-01 13:12:02,382:INFO:display_container: 2
2022-10-01 13:12:02,382:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:12:02,382:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,456:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,457:INFO:Creating metrics dataframe
2022-10-01 13:12:02,460:INFO:Initializing Bayesian Ridge
2022-10-01 13:12:02,461:INFO:Total runtime is 0.031071507930755617 minutes
2022-10-01 13:12:02,461:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,461:INFO:Initializing create_model()
2022-10-01 13:12:02,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,461:INFO:Checking exceptions
2022-10-01 13:12:02,462:INFO:Importing libraries
2022-10-01 13:12:02,462:INFO:Copying training dataset
2022-10-01 13:12:02,464:INFO:Defining folds
2022-10-01 13:12:02,464:INFO:Declaring metric variables
2022-10-01 13:12:02,464:INFO:Importing untrained model
2022-10-01 13:12:02,465:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:12:02,465:INFO:Starting cross validation
2022-10-01 13:12:02,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:02,635:INFO:Calculating mean and std
2022-10-01 13:12:02,636:INFO:Creating metrics dataframe
2022-10-01 13:12:02,638:INFO:Uploading results into container
2022-10-01 13:12:02,638:INFO:Uploading model into container now
2022-10-01 13:12:02,639:INFO:master_model_container: 8
2022-10-01 13:12:02,639:INFO:display_container: 2
2022-10-01 13:12:02,639:INFO:BayesianRidge()
2022-10-01 13:12:02,639:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,711:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,712:INFO:Creating metrics dataframe
2022-10-01 13:12:02,716:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:12:02,716:INFO:Total runtime is 0.035320572058359784 minutes
2022-10-01 13:12:02,716:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,716:INFO:Initializing create_model()
2022-10-01 13:12:02,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,716:INFO:Checking exceptions
2022-10-01 13:12:02,717:INFO:Importing libraries
2022-10-01 13:12:02,717:INFO:Copying training dataset
2022-10-01 13:12:02,719:INFO:Defining folds
2022-10-01 13:12:02,719:INFO:Declaring metric variables
2022-10-01 13:12:02,719:INFO:Importing untrained model
2022-10-01 13:12:02,719:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:12:02,719:INFO:Starting cross validation
2022-10-01 13:12:02,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:02,890:INFO:Calculating mean and std
2022-10-01 13:12:02,891:INFO:Creating metrics dataframe
2022-10-01 13:12:02,893:INFO:Uploading results into container
2022-10-01 13:12:02,893:INFO:Uploading model into container now
2022-10-01 13:12:02,894:INFO:master_model_container: 9
2022-10-01 13:12:02,894:INFO:display_container: 2
2022-10-01 13:12:02,894:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:12:02,894:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,971:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,971:INFO:Creating metrics dataframe
2022-10-01 13:12:02,975:INFO:Initializing Huber Regressor
2022-10-01 13:12:02,975:INFO:Total runtime is 0.03964131275812785 minutes
2022-10-01 13:12:02,975:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,975:INFO:Initializing create_model()
2022-10-01 13:12:02,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,975:INFO:Checking exceptions
2022-10-01 13:12:02,976:INFO:Importing libraries
2022-10-01 13:12:02,976:INFO:Copying training dataset
2022-10-01 13:12:02,978:INFO:Defining folds
2022-10-01 13:12:02,978:INFO:Declaring metric variables
2022-10-01 13:12:02,978:INFO:Importing untrained model
2022-10-01 13:12:02,978:INFO:Huber Regressor Imported successfully
2022-10-01 13:12:02,979:INFO:Starting cross validation
2022-10-01 13:12:02,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:03,203:INFO:Calculating mean and std
2022-10-01 13:12:03,203:INFO:Creating metrics dataframe
2022-10-01 13:12:03,206:INFO:Uploading results into container
2022-10-01 13:12:03,206:INFO:Uploading model into container now
2022-10-01 13:12:03,207:INFO:master_model_container: 10
2022-10-01 13:12:03,207:INFO:display_container: 2
2022-10-01 13:12:03,207:INFO:HuberRegressor()
2022-10-01 13:12:03,207:INFO:create_model() successfully completed......................................
2022-10-01 13:12:03,280:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:03,280:INFO:Creating metrics dataframe
2022-10-01 13:12:03,284:INFO:Initializing K Neighbors Regressor
2022-10-01 13:12:03,284:INFO:Total runtime is 0.04479014873504639 minutes
2022-10-01 13:12:03,284:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:03,284:INFO:Initializing create_model()
2022-10-01 13:12:03,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:03,284:INFO:Checking exceptions
2022-10-01 13:12:03,285:INFO:Importing libraries
2022-10-01 13:12:03,285:INFO:Copying training dataset
2022-10-01 13:12:03,287:INFO:Defining folds
2022-10-01 13:12:03,287:INFO:Declaring metric variables
2022-10-01 13:12:03,287:INFO:Importing untrained model
2022-10-01 13:12:03,287:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:12:03,287:INFO:Starting cross validation
2022-10-01 13:12:03,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:06,626:INFO:Calculating mean and std
2022-10-01 13:12:06,627:INFO:Creating metrics dataframe
2022-10-01 13:12:06,630:INFO:Uploading results into container
2022-10-01 13:12:06,630:INFO:Uploading model into container now
2022-10-01 13:12:06,631:INFO:master_model_container: 11
2022-10-01 13:12:06,631:INFO:display_container: 2
2022-10-01 13:12:06,631:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:12:06,631:INFO:create_model() successfully completed......................................
2022-10-01 13:12:06,720:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:06,720:INFO:Creating metrics dataframe
2022-10-01 13:12:06,724:INFO:Initializing Decision Tree Regressor
2022-10-01 13:12:06,724:INFO:Total runtime is 0.10212409098943075 minutes
2022-10-01 13:12:06,724:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:06,725:INFO:Initializing create_model()
2022-10-01 13:12:06,725:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:06,725:INFO:Checking exceptions
2022-10-01 13:12:06,726:INFO:Importing libraries
2022-10-01 13:12:06,726:INFO:Copying training dataset
2022-10-01 13:12:06,727:INFO:Defining folds
2022-10-01 13:12:06,728:INFO:Declaring metric variables
2022-10-01 13:12:06,728:INFO:Importing untrained model
2022-10-01 13:12:06,728:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:12:06,729:INFO:Starting cross validation
2022-10-01 13:12:06,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:06,919:INFO:Calculating mean and std
2022-10-01 13:12:06,919:INFO:Creating metrics dataframe
2022-10-01 13:12:06,922:INFO:Uploading results into container
2022-10-01 13:12:06,923:INFO:Uploading model into container now
2022-10-01 13:12:06,923:INFO:master_model_container: 12
2022-10-01 13:12:06,923:INFO:display_container: 2
2022-10-01 13:12:06,923:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:12:06,923:INFO:create_model() successfully completed......................................
2022-10-01 13:12:06,998:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:06,998:INFO:Creating metrics dataframe
2022-10-01 13:12:07,002:INFO:Initializing Random Forest Regressor
2022-10-01 13:12:07,002:INFO:Total runtime is 0.1067568302154541 minutes
2022-10-01 13:12:07,003:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:07,003:INFO:Initializing create_model()
2022-10-01 13:12:07,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:07,003:INFO:Checking exceptions
2022-10-01 13:12:07,004:INFO:Importing libraries
2022-10-01 13:12:07,004:INFO:Copying training dataset
2022-10-01 13:12:07,005:INFO:Defining folds
2022-10-01 13:12:07,006:INFO:Declaring metric variables
2022-10-01 13:12:07,006:INFO:Importing untrained model
2022-10-01 13:12:07,006:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:12:07,006:INFO:Starting cross validation
2022-10-01 13:12:07,007:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:08,211:INFO:Calculating mean and std
2022-10-01 13:12:08,211:INFO:Creating metrics dataframe
2022-10-01 13:12:08,214:INFO:Uploading results into container
2022-10-01 13:12:08,214:INFO:Uploading model into container now
2022-10-01 13:12:08,215:INFO:master_model_container: 13
2022-10-01 13:12:08,215:INFO:display_container: 2
2022-10-01 13:12:08,215:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:12:08,215:INFO:create_model() successfully completed......................................
2022-10-01 13:12:08,287:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:08,287:INFO:Creating metrics dataframe
2022-10-01 13:12:08,291:INFO:Initializing Extra Trees Regressor
2022-10-01 13:12:08,291:INFO:Total runtime is 0.12823380231857298 minutes
2022-10-01 13:12:08,291:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:08,291:INFO:Initializing create_model()
2022-10-01 13:12:08,291:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:08,291:INFO:Checking exceptions
2022-10-01 13:12:08,292:INFO:Importing libraries
2022-10-01 13:12:08,292:INFO:Copying training dataset
2022-10-01 13:12:08,294:INFO:Defining folds
2022-10-01 13:12:08,294:INFO:Declaring metric variables
2022-10-01 13:12:08,294:INFO:Importing untrained model
2022-10-01 13:12:08,294:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:12:08,295:INFO:Starting cross validation
2022-10-01 13:12:08,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:09,428:INFO:Calculating mean and std
2022-10-01 13:12:09,429:INFO:Creating metrics dataframe
2022-10-01 13:12:09,431:INFO:Uploading results into container
2022-10-01 13:12:09,432:INFO:Uploading model into container now
2022-10-01 13:12:09,432:INFO:master_model_container: 14
2022-10-01 13:12:09,432:INFO:display_container: 2
2022-10-01 13:12:09,433:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:12:09,433:INFO:create_model() successfully completed......................................
2022-10-01 13:12:09,505:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:09,505:INFO:Creating metrics dataframe
2022-10-01 13:12:09,509:INFO:Initializing AdaBoost Regressor
2022-10-01 13:12:09,509:INFO:Total runtime is 0.14854367971420288 minutes
2022-10-01 13:12:09,509:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:09,509:INFO:Initializing create_model()
2022-10-01 13:12:09,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:09,509:INFO:Checking exceptions
2022-10-01 13:12:09,510:INFO:Importing libraries
2022-10-01 13:12:09,510:INFO:Copying training dataset
2022-10-01 13:12:09,512:INFO:Defining folds
2022-10-01 13:12:09,512:INFO:Declaring metric variables
2022-10-01 13:12:09,512:INFO:Importing untrained model
2022-10-01 13:12:09,512:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:12:09,513:INFO:Starting cross validation
2022-10-01 13:12:09,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:10,175:INFO:Calculating mean and std
2022-10-01 13:12:10,176:INFO:Creating metrics dataframe
2022-10-01 13:12:10,178:INFO:Uploading results into container
2022-10-01 13:12:10,178:INFO:Uploading model into container now
2022-10-01 13:12:10,179:INFO:master_model_container: 15
2022-10-01 13:12:10,179:INFO:display_container: 2
2022-10-01 13:12:10,179:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:12:10,179:INFO:create_model() successfully completed......................................
2022-10-01 13:12:10,251:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:10,251:INFO:Creating metrics dataframe
2022-10-01 13:12:10,255:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:12:10,255:INFO:Total runtime is 0.16097259918848672 minutes
2022-10-01 13:12:10,255:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:10,255:INFO:Initializing create_model()
2022-10-01 13:12:10,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:10,255:INFO:Checking exceptions
2022-10-01 13:12:10,256:INFO:Importing libraries
2022-10-01 13:12:10,256:INFO:Copying training dataset
2022-10-01 13:12:10,258:INFO:Defining folds
2022-10-01 13:12:10,258:INFO:Declaring metric variables
2022-10-01 13:12:10,258:INFO:Importing untrained model
2022-10-01 13:12:10,258:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:12:10,259:INFO:Starting cross validation
2022-10-01 13:12:10,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:10,853:INFO:Calculating mean and std
2022-10-01 13:12:10,854:INFO:Creating metrics dataframe
2022-10-01 13:12:10,856:INFO:Uploading results into container
2022-10-01 13:12:10,857:INFO:Uploading model into container now
2022-10-01 13:12:10,857:INFO:master_model_container: 16
2022-10-01 13:12:10,857:INFO:display_container: 2
2022-10-01 13:12:10,857:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:12:10,857:INFO:create_model() successfully completed......................................
2022-10-01 13:12:10,931:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:10,931:INFO:Creating metrics dataframe
2022-10-01 13:12:10,935:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:12:10,935:INFO:Total runtime is 0.1723022937774658 minutes
2022-10-01 13:12:10,935:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:10,936:INFO:Initializing create_model()
2022-10-01 13:12:10,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:10,936:INFO:Checking exceptions
2022-10-01 13:12:10,937:INFO:Importing libraries
2022-10-01 13:12:10,937:INFO:Copying training dataset
2022-10-01 13:12:10,938:INFO:Defining folds
2022-10-01 13:12:10,939:INFO:Declaring metric variables
2022-10-01 13:12:10,939:INFO:Importing untrained model
2022-10-01 13:12:10,939:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:12:10,939:INFO:Starting cross validation
2022-10-01 13:12:10,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:15,680:INFO:Calculating mean and std
2022-10-01 13:12:15,681:INFO:Creating metrics dataframe
2022-10-01 13:12:15,684:INFO:Uploading results into container
2022-10-01 13:12:15,685:INFO:Uploading model into container now
2022-10-01 13:12:15,685:INFO:master_model_container: 17
2022-10-01 13:12:15,685:INFO:display_container: 2
2022-10-01 13:12:15,685:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:12:15,685:INFO:create_model() successfully completed......................................
2022-10-01 13:12:15,771:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:15,771:INFO:Creating metrics dataframe
2022-10-01 13:12:15,776:INFO:Initializing Dummy Regressor
2022-10-01 13:12:15,776:INFO:Total runtime is 0.2529852628707886 minutes
2022-10-01 13:12:15,776:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:15,777:INFO:Initializing create_model()
2022-10-01 13:12:15,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:15,777:INFO:Checking exceptions
2022-10-01 13:12:15,778:INFO:Importing libraries
2022-10-01 13:12:15,778:INFO:Copying training dataset
2022-10-01 13:12:15,779:INFO:Defining folds
2022-10-01 13:12:15,779:INFO:Declaring metric variables
2022-10-01 13:12:15,779:INFO:Importing untrained model
2022-10-01 13:12:15,780:INFO:Dummy Regressor Imported successfully
2022-10-01 13:12:15,780:INFO:Starting cross validation
2022-10-01 13:12:15,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:15,935:INFO:Calculating mean and std
2022-10-01 13:12:15,936:INFO:Creating metrics dataframe
2022-10-01 13:12:15,938:INFO:Uploading results into container
2022-10-01 13:12:15,939:INFO:Uploading model into container now
2022-10-01 13:12:15,939:INFO:master_model_container: 18
2022-10-01 13:12:15,939:INFO:display_container: 2
2022-10-01 13:12:15,939:INFO:DummyRegressor()
2022-10-01 13:12:15,939:INFO:create_model() successfully completed......................................
2022-10-01 13:12:16,012:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:16,012:INFO:Creating metrics dataframe
2022-10-01 13:12:16,017:INFO:Initializing create_model()
2022-10-01 13:12:16,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:16,017:INFO:Checking exceptions
2022-10-01 13:12:16,019:INFO:Importing libraries
2022-10-01 13:12:16,019:INFO:Copying training dataset
2022-10-01 13:12:16,020:INFO:Defining folds
2022-10-01 13:12:16,020:INFO:Declaring metric variables
2022-10-01 13:12:16,020:INFO:Importing untrained model
2022-10-01 13:12:16,020:INFO:Declaring custom model
2022-10-01 13:12:16,021:INFO:Linear Regression Imported successfully
2022-10-01 13:12:16,021:INFO:Cross validation set to False
2022-10-01 13:12:16,021:INFO:Fitting Model
2022-10-01 13:12:16,030:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:16,030:INFO:create_model() successfully completed......................................
2022-10-01 13:12:16,115:INFO:master_model_container: 18
2022-10-01 13:12:16,115:INFO:display_container: 2
2022-10-01 13:12:16,115:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:16,115:INFO:compare_models() successfully completed......................................
2022-10-01 13:12:16,116:INFO:Initializing create_model()
2022-10-01 13:12:16,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:16,116:INFO:Checking exceptions
2022-10-01 13:12:16,118:INFO:Importing libraries
2022-10-01 13:12:16,118:INFO:Copying training dataset
2022-10-01 13:12:16,120:INFO:Defining folds
2022-10-01 13:12:16,120:INFO:Declaring metric variables
2022-10-01 13:12:16,120:INFO:Importing untrained model
2022-10-01 13:12:16,120:INFO:Declaring custom model
2022-10-01 13:12:16,121:INFO:Linear Regression Imported successfully
2022-10-01 13:12:16,121:INFO:Starting cross validation
2022-10-01 13:12:16,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:16,313:INFO:Calculating mean and std
2022-10-01 13:12:16,314:INFO:Creating metrics dataframe
2022-10-01 13:12:16,316:INFO:Finalizing model
2022-10-01 13:12:16,327:INFO:Uploading results into container
2022-10-01 13:12:16,327:INFO:Uploading model into container now
2022-10-01 13:12:16,337:INFO:master_model_container: 19
2022-10-01 13:12:16,337:INFO:display_container: 3
2022-10-01 13:12:16,338:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:16,338:INFO:create_model() successfully completed......................................
2022-10-01 13:12:16,454:INFO:Initializing predict_model()
2022-10-01 13:12:16,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C05FA62F80>)
2022-10-01 13:12:16,454:INFO:Checking exceptions
2022-10-01 13:12:16,454:INFO:Preloading libraries
2022-10-01 13:12:16,454:INFO:Set up data.
2022-10-01 13:12:16,457:INFO:Set up index.
2022-10-01 13:12:16,578:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

