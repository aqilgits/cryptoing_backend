2022-10-01 13:02:02,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:02,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:02,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:02,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:06,135:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:02:10,463:INFO:PyCaret RegressionExperiment
2022-10-01 13:02:10,464:INFO:Logging name: reg-default-name
2022-10-01 13:02:10,464:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:02:10,464:INFO:version 3.0.0.rc4
2022-10-01 13:02:10,464:INFO:Initializing setup()
2022-10-01 13:02:10,464:INFO:self.USI: 0cf0
2022-10-01 13:02:10,464:INFO:self.variable_keys: {'X', 'display_container', 'data', 'logging_param', 'USI', 'master_model_container', '_all_models', 'log_plots_param', 'memory', '_ml_usecase', 'fold_shuffle_param', 'variable_keys', '_gpu_n_jobs_param', 'X_test', 'y_test', 'fold_generator', 'transform_target_param', 'transform_target_method_param', '_available_plots', 'gpu_param', 'idx', 'target_param', 'exp_id', 'exp_name_log', 'pipeline', '_all_models_internal', 'y', 'X_train', '_all_metrics', 'n_jobs_param', 'html_param', 'fold_groups_param', 'y_train', 'seed'}
2022-10-01 13:02:10,464:INFO:Checking environment
2022-10-01 13:02:10,464:INFO:python_version: 3.10.7
2022-10-01 13:02:10,464:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:02:10,464:INFO:machine: AMD64
2022-10-01 13:02:10,481:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:02:10,481:INFO:Memory: svmem(total=8497213440, available=1843040256, percent=78.3, used=6654173184, free=1843040256)
2022-10-01 13:02:10,481:INFO:Physical Core: 6
2022-10-01 13:02:10,481:INFO:Logical Core: 12
2022-10-01 13:02:10,481:INFO:Checking libraries
2022-10-01 13:02:10,481:INFO:System:
2022-10-01 13:02:10,482:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:02:10,482:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:02:10,482:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:02:10,482:INFO:PyCaret required dependencies:
2022-10-01 13:02:10,482:INFO:                 pip: 22.2.2
2022-10-01 13:02:10,482:INFO:          setuptools: 63.2.0
2022-10-01 13:02:10,482:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:02:10,482:INFO:             IPython: 8.5.0
2022-10-01 13:02:10,482:INFO:          ipywidgets: 8.0.2
2022-10-01 13:02:10,482:INFO:                tqdm: 4.64.1
2022-10-01 13:02:10,482:INFO:               numpy: 1.22.4
2022-10-01 13:02:10,482:INFO:              pandas: 1.4.4
2022-10-01 13:02:10,482:INFO:              jinja2: 3.1.2
2022-10-01 13:02:10,482:INFO:               scipy: 1.8.1
2022-10-01 13:02:10,482:INFO:              joblib: 1.2.0
2022-10-01 13:02:10,482:INFO:             sklearn: 1.1.2
2022-10-01 13:02:10,482:INFO:                pyod: 1.0.5
2022-10-01 13:02:10,482:INFO:            imblearn: 0.9.1
2022-10-01 13:02:10,482:INFO:   category_encoders: 2.5.0
2022-10-01 13:02:10,482:INFO:            lightgbm: 3.3.2
2022-10-01 13:02:10,482:INFO:               numba: 0.55.2
2022-10-01 13:02:10,482:INFO:            requests: 2.28.1
2022-10-01 13:02:10,482:INFO:          matplotlib: 3.6.0
2022-10-01 13:02:10,483:INFO:          scikitplot: 0.3.7
2022-10-01 13:02:10,483:INFO:         yellowbrick: 1.5
2022-10-01 13:02:10,483:INFO:              plotly: 5.10.0
2022-10-01 13:02:10,483:INFO:             kaleido: 0.2.1
2022-10-01 13:02:10,483:INFO:         statsmodels: 0.13.2
2022-10-01 13:02:10,483:INFO:              sktime: 0.13.4
2022-10-01 13:02:10,483:INFO:               tbats: 1.1.0
2022-10-01 13:02:10,483:INFO:            pmdarima: 1.8.5
2022-10-01 13:02:10,483:INFO:              psutil: 5.9.2
2022-10-01 13:02:10,483:INFO:PyCaret optional dependencies:
2022-10-01 13:02:10,498:INFO:                shap: Not installed
2022-10-01 13:02:10,498:INFO:           interpret: Not installed
2022-10-01 13:02:10,498:INFO:                umap: Not installed
2022-10-01 13:02:10,498:INFO:    pandas_profiling: Not installed
2022-10-01 13:02:10,498:INFO:  explainerdashboard: Not installed
2022-10-01 13:02:10,498:INFO:             autoviz: Not installed
2022-10-01 13:02:10,498:INFO:           fairlearn: Not installed
2022-10-01 13:02:10,498:INFO:             xgboost: Not installed
2022-10-01 13:02:10,498:INFO:            catboost: Not installed
2022-10-01 13:02:10,498:INFO:              kmodes: Not installed
2022-10-01 13:02:10,498:INFO:             mlxtend: Not installed
2022-10-01 13:02:10,498:INFO:       statsforecast: Not installed
2022-10-01 13:02:10,498:INFO:        tune_sklearn: Not installed
2022-10-01 13:02:10,498:INFO:                 ray: Not installed
2022-10-01 13:02:10,499:INFO:            hyperopt: Not installed
2022-10-01 13:02:10,499:INFO:              optuna: Not installed
2022-10-01 13:02:10,499:INFO:               skopt: Not installed
2022-10-01 13:02:10,499:INFO:              mlflow: Not installed
2022-10-01 13:02:10,499:INFO:              gradio: Not installed
2022-10-01 13:02:10,499:INFO:             fastapi: Not installed
2022-10-01 13:02:10,499:INFO:             uvicorn: Not installed
2022-10-01 13:02:10,499:INFO:              m2cgen: Not installed
2022-10-01 13:02:10,499:INFO:           evidently: Not installed
2022-10-01 13:02:10,499:INFO:                nltk: Not installed
2022-10-01 13:02:10,499:INFO:            pyLDAvis: Not installed
2022-10-01 13:02:10,499:INFO:              gensim: Not installed
2022-10-01 13:02:10,499:INFO:               spacy: Not installed
2022-10-01 13:02:10,499:INFO:           wordcloud: Not installed
2022-10-01 13:02:10,499:INFO:            textblob: Not installed
2022-10-01 13:02:10,499:INFO:               fugue: Not installed
2022-10-01 13:02:10,499:INFO:           streamlit: Not installed
2022-10-01 13:02:10,499:INFO:             prophet: Not installed
2022-10-01 13:02:10,499:INFO:None
2022-10-01 13:02:10,499:INFO:Set up GPU usage.
2022-10-01 13:02:10,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,500:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:02:10,500:INFO:Set up data.
2022-10-01 13:02:10,504:INFO:Set up train/test split.
2022-10-01 13:02:10,506:INFO:Set up index.
2022-10-01 13:02:10,506:INFO:Set up folding strategy.
2022-10-01 13:02:10,507:INFO:Assigning column types.
2022-10-01 13:02:10,509:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:02:10,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,509:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,514:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,518:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,618:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:10,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:10,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:15,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:15,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,872:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,880:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,888:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:15,982:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:15,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,360:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:02:16,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,368:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,375:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,504:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:16,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,778:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,785:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,870:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,914:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:16,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:16,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,141:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:02:17,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,155:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:17,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,584:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:17,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:17,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,008:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:02:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,537:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:18,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:02:18,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,800:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:18,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:18,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,256:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:02:19,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,530:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:02:19,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:19,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:19,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,277:INFO:Preparing preprocessing pipeline...
2022-10-01 13:02:20,278:INFO:Set up simple imputation.
2022-10-01 13:02:20,278:INFO:Set up variance threshold.
2022-10-01 13:02:20,335:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:02:20,341:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:02:20,342:INFO:Creating final display dataframe.
2022-10-01 13:02:20,517:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              0cf0
2022-10-01 13:02:20,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:20,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:20,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:02:21,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:21,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:02:21,456:INFO:setup() successfully completed in 11.0s...............
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:33,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:34,288:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:03:36,035:INFO:PyCaret RegressionExperiment
2022-10-01 13:03:36,035:INFO:Logging name: reg-default-name
2022-10-01 13:03:36,035:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:03:36,035:INFO:version 3.0.0.rc4
2022-10-01 13:03:36,035:INFO:Initializing setup()
2022-10-01 13:03:36,035:INFO:self.USI: 09e0
2022-10-01 13:03:36,035:INFO:self.variable_keys: {'gpu_param', 'target_param', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'transform_target_method_param', 'idx', 'variable_keys', 'display_container', 'X_train', '_all_models_internal', 'exp_name_log', 'y_test', '_gpu_n_jobs_param', 'memory', 'seed', 'transform_target_param', 'y', 'fold_generator', 'y_train', 'X_test', 'master_model_container', 'USI', 'html_param', 'exp_id', 'logging_param', 'X', '_available_plots', '_all_models', '_all_metrics', 'n_jobs_param', 'pipeline', 'fold_groups_param', 'data'}
2022-10-01 13:03:36,035:INFO:Checking environment
2022-10-01 13:03:36,035:INFO:python_version: 3.10.7
2022-10-01 13:03:36,035:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:03:36,035:INFO:machine: AMD64
2022-10-01 13:03:36,055:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:03:36,055:INFO:Memory: svmem(total=8497213440, available=2011459584, percent=76.3, used=6485753856, free=2011459584)
2022-10-01 13:03:36,056:INFO:Physical Core: 6
2022-10-01 13:03:36,056:INFO:Logical Core: 12
2022-10-01 13:03:36,056:INFO:Checking libraries
2022-10-01 13:03:36,056:INFO:System:
2022-10-01 13:03:36,056:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:03:36,056:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:03:36,056:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:03:36,056:INFO:PyCaret required dependencies:
2022-10-01 13:03:36,056:INFO:                 pip: 22.2.2
2022-10-01 13:03:36,056:INFO:          setuptools: 63.2.0
2022-10-01 13:03:36,056:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:03:36,056:INFO:             IPython: 8.5.0
2022-10-01 13:03:36,056:INFO:          ipywidgets: 8.0.2
2022-10-01 13:03:36,056:INFO:                tqdm: 4.64.1
2022-10-01 13:03:36,056:INFO:               numpy: 1.22.4
2022-10-01 13:03:36,056:INFO:              pandas: 1.4.4
2022-10-01 13:03:36,056:INFO:              jinja2: 3.1.2
2022-10-01 13:03:36,056:INFO:               scipy: 1.8.1
2022-10-01 13:03:36,057:INFO:              joblib: 1.2.0
2022-10-01 13:03:36,057:INFO:             sklearn: 1.1.2
2022-10-01 13:03:36,057:INFO:                pyod: 1.0.5
2022-10-01 13:03:36,057:INFO:            imblearn: 0.9.1
2022-10-01 13:03:36,057:INFO:   category_encoders: 2.5.0
2022-10-01 13:03:36,057:INFO:            lightgbm: 3.3.2
2022-10-01 13:03:36,057:INFO:               numba: 0.55.2
2022-10-01 13:03:36,057:INFO:            requests: 2.28.1
2022-10-01 13:03:36,057:INFO:          matplotlib: 3.6.0
2022-10-01 13:03:36,057:INFO:          scikitplot: 0.3.7
2022-10-01 13:03:36,057:INFO:         yellowbrick: 1.5
2022-10-01 13:03:36,057:INFO:              plotly: 5.10.0
2022-10-01 13:03:36,057:INFO:             kaleido: 0.2.1
2022-10-01 13:03:36,057:INFO:         statsmodels: 0.13.2
2022-10-01 13:03:36,057:INFO:              sktime: 0.13.4
2022-10-01 13:03:36,057:INFO:               tbats: 1.1.0
2022-10-01 13:03:36,057:INFO:            pmdarima: 1.8.5
2022-10-01 13:03:36,057:INFO:              psutil: 5.9.2
2022-10-01 13:03:36,057:INFO:PyCaret optional dependencies:
2022-10-01 13:03:36,076:INFO:                shap: Not installed
2022-10-01 13:03:36,076:INFO:           interpret: Not installed
2022-10-01 13:03:36,076:INFO:                umap: Not installed
2022-10-01 13:03:36,076:INFO:    pandas_profiling: Not installed
2022-10-01 13:03:36,076:INFO:  explainerdashboard: Not installed
2022-10-01 13:03:36,076:INFO:             autoviz: Not installed
2022-10-01 13:03:36,076:INFO:           fairlearn: Not installed
2022-10-01 13:03:36,076:INFO:             xgboost: Not installed
2022-10-01 13:03:36,076:INFO:            catboost: Not installed
2022-10-01 13:03:36,076:INFO:              kmodes: Not installed
2022-10-01 13:03:36,076:INFO:             mlxtend: Not installed
2022-10-01 13:03:36,076:INFO:       statsforecast: Not installed
2022-10-01 13:03:36,076:INFO:        tune_sklearn: Not installed
2022-10-01 13:03:36,076:INFO:                 ray: Not installed
2022-10-01 13:03:36,076:INFO:            hyperopt: Not installed
2022-10-01 13:03:36,077:INFO:              optuna: Not installed
2022-10-01 13:03:36,077:INFO:               skopt: Not installed
2022-10-01 13:03:36,077:INFO:              mlflow: Not installed
2022-10-01 13:03:36,077:INFO:              gradio: Not installed
2022-10-01 13:03:36,077:INFO:             fastapi: Not installed
2022-10-01 13:03:36,077:INFO:             uvicorn: Not installed
2022-10-01 13:03:36,077:INFO:              m2cgen: Not installed
2022-10-01 13:03:36,077:INFO:           evidently: Not installed
2022-10-01 13:03:36,077:INFO:                nltk: Not installed
2022-10-01 13:03:36,077:INFO:            pyLDAvis: Not installed
2022-10-01 13:03:36,077:INFO:              gensim: Not installed
2022-10-01 13:03:36,077:INFO:               spacy: Not installed
2022-10-01 13:03:36,077:INFO:           wordcloud: Not installed
2022-10-01 13:03:36,077:INFO:            textblob: Not installed
2022-10-01 13:03:36,077:INFO:               fugue: Not installed
2022-10-01 13:03:36,077:INFO:           streamlit: Not installed
2022-10-01 13:03:36,077:INFO:             prophet: Not installed
2022-10-01 13:03:36,077:INFO:None
2022-10-01 13:03:36,077:INFO:Set up GPU usage.
2022-10-01 13:03:36,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,077:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:03:36,078:INFO:Set up data.
2022-10-01 13:03:36,083:INFO:Set up train/test split.
2022-10-01 13:03:36,086:INFO:Set up index.
2022-10-01 13:03:36,087:INFO:Set up folding strategy.
2022-10-01 13:03:36,087:INFO:Assigning column types.
2022-10-01 13:03:36,091:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:03:36,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,091:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,099:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,598:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,612:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:36,978:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:03:36,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,985:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:36,992:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:36,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,374:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,374:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,381:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:37,740:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:03:37,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,840:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:37,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:37,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,128:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,475:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:03:38,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,482:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:38,876:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,876:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:38,976:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:38,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:03:39,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,256:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:03:39,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:39,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:39,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,741:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:03:39,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:39,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,014:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:03:40,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:40,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:40,883:INFO:Preparing preprocessing pipeline...
2022-10-01 13:03:40,884:INFO:Set up simple imputation.
2022-10-01 13:03:40,884:INFO:Set up variance threshold.
2022-10-01 13:03:40,915:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:03:40,922:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:03:40,922:INFO:Creating final display dataframe.
2022-10-01 13:03:41,004:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              09e0
2022-10-01 13:03:41,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:03:41,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:03:41,756:INFO:setup() successfully completed in 5.72s...............
2022-10-01 13:03:41,756:INFO:Initializing compare_models()
2022-10-01 13:03:41,756:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:03:41,756:INFO:Checking exceptions
2022-10-01 13:03:41,758:INFO:Preparing display monitor
2022-10-01 13:03:41,763:INFO:Initializing Linear Regression
2022-10-01 13:03:41,763:INFO:Total runtime is 0.0 minutes
2022-10-01 13:03:41,763:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:41,763:INFO:Initializing create_model()
2022-10-01 13:03:41,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:41,763:INFO:Checking exceptions
2022-10-01 13:03:41,765:INFO:Importing libraries
2022-10-01 13:03:41,765:INFO:Copying training dataset
2022-10-01 13:03:41,767:INFO:Defining folds
2022-10-01 13:03:41,767:INFO:Declaring metric variables
2022-10-01 13:03:41,767:INFO:Importing untrained model
2022-10-01 13:03:41,767:INFO:Linear Regression Imported successfully
2022-10-01 13:03:41,767:INFO:Starting cross validation
2022-10-01 13:03:41,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:42,523:INFO:Calculating mean and std
2022-10-01 13:03:42,524:INFO:Creating metrics dataframe
2022-10-01 13:03:42,526:INFO:Uploading results into container
2022-10-01 13:03:42,527:INFO:Uploading model into container now
2022-10-01 13:03:42,527:INFO:master_model_container: 1
2022-10-01 13:03:42,527:INFO:display_container: 2
2022-10-01 13:03:42,527:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:03:42,527:INFO:create_model() successfully completed......................................
2022-10-01 13:03:42,602:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:42,602:INFO:Creating metrics dataframe
2022-10-01 13:03:42,605:INFO:Initializing Lasso Regression
2022-10-01 13:03:42,605:INFO:Total runtime is 0.014032852649688721 minutes
2022-10-01 13:03:42,605:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:42,606:INFO:Initializing create_model()
2022-10-01 13:03:42,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:42,606:INFO:Checking exceptions
2022-10-01 13:03:42,607:INFO:Importing libraries
2022-10-01 13:03:42,607:INFO:Copying training dataset
2022-10-01 13:03:42,608:INFO:Defining folds
2022-10-01 13:03:42,608:INFO:Declaring metric variables
2022-10-01 13:03:42,608:INFO:Importing untrained model
2022-10-01 13:03:42,609:INFO:Lasso Regression Imported successfully
2022-10-01 13:03:42,609:INFO:Starting cross validation
2022-10-01 13:03:42,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:42,632:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,665:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,698:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,730:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,762:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,794:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,826:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,858:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,891:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,927:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:42,940:INFO:Calculating mean and std
2022-10-01 13:03:42,940:INFO:Creating metrics dataframe
2022-10-01 13:03:42,942:INFO:Uploading results into container
2022-10-01 13:03:42,942:INFO:Uploading model into container now
2022-10-01 13:03:42,943:INFO:master_model_container: 2
2022-10-01 13:03:42,943:INFO:display_container: 2
2022-10-01 13:03:42,943:INFO:Lasso(random_state=123)
2022-10-01 13:03:42,943:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,013:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,013:INFO:Creating metrics dataframe
2022-10-01 13:03:43,017:INFO:Initializing Ridge Regression
2022-10-01 13:03:43,017:INFO:Total runtime is 0.0209088404973348 minutes
2022-10-01 13:03:43,017:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,017:INFO:Initializing create_model()
2022-10-01 13:03:43,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,017:INFO:Checking exceptions
2022-10-01 13:03:43,018:INFO:Importing libraries
2022-10-01 13:03:43,018:INFO:Copying training dataset
2022-10-01 13:03:43,021:INFO:Defining folds
2022-10-01 13:03:43,021:INFO:Declaring metric variables
2022-10-01 13:03:43,021:INFO:Importing untrained model
2022-10-01 13:03:43,021:INFO:Ridge Regression Imported successfully
2022-10-01 13:03:43,022:INFO:Starting cross validation
2022-10-01 13:03:43,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,035:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,052:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,070:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,087:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,104:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,120:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,137:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,154:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,171:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,188:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:03:43,195:INFO:Calculating mean and std
2022-10-01 13:03:43,196:INFO:Creating metrics dataframe
2022-10-01 13:03:43,198:INFO:Uploading results into container
2022-10-01 13:03:43,199:INFO:Uploading model into container now
2022-10-01 13:03:43,199:INFO:master_model_container: 3
2022-10-01 13:03:43,199:INFO:display_container: 2
2022-10-01 13:03:43,199:INFO:Ridge(random_state=123)
2022-10-01 13:03:43,199:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,273:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,274:INFO:Creating metrics dataframe
2022-10-01 13:03:43,277:INFO:Initializing Elastic Net
2022-10-01 13:03:43,277:INFO:Total runtime is 0.025241188208262128 minutes
2022-10-01 13:03:43,278:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,278:INFO:Initializing create_model()
2022-10-01 13:03:43,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,278:INFO:Checking exceptions
2022-10-01 13:03:43,279:INFO:Importing libraries
2022-10-01 13:03:43,279:INFO:Copying training dataset
2022-10-01 13:03:43,281:INFO:Defining folds
2022-10-01 13:03:43,281:INFO:Declaring metric variables
2022-10-01 13:03:43,281:INFO:Importing untrained model
2022-10-01 13:03:43,281:INFO:Elastic Net Imported successfully
2022-10-01 13:03:43,281:INFO:Starting cross validation
2022-10-01 13:03:43,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,293:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,311:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,329:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,347:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,364:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,382:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,399:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,418:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,435:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:03:43,459:INFO:Calculating mean and std
2022-10-01 13:03:43,460:INFO:Creating metrics dataframe
2022-10-01 13:03:43,462:INFO:Uploading results into container
2022-10-01 13:03:43,463:INFO:Uploading model into container now
2022-10-01 13:03:43,463:INFO:master_model_container: 4
2022-10-01 13:03:43,463:INFO:display_container: 2
2022-10-01 13:03:43,463:INFO:ElasticNet(random_state=123)
2022-10-01 13:03:43,463:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,554:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,554:INFO:Creating metrics dataframe
2022-10-01 13:03:43,558:INFO:Initializing Least Angle Regression
2022-10-01 13:03:43,558:INFO:Total runtime is 0.029923697312672935 minutes
2022-10-01 13:03:43,558:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,559:INFO:Initializing create_model()
2022-10-01 13:03:43,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,559:INFO:Checking exceptions
2022-10-01 13:03:43,560:INFO:Importing libraries
2022-10-01 13:03:43,560:INFO:Copying training dataset
2022-10-01 13:03:43,562:INFO:Defining folds
2022-10-01 13:03:43,562:INFO:Declaring metric variables
2022-10-01 13:03:43,562:INFO:Importing untrained model
2022-10-01 13:03:43,562:INFO:Least Angle Regression Imported successfully
2022-10-01 13:03:43,562:INFO:Starting cross validation
2022-10-01 13:03:43,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,593:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,611:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,631:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,649:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,669:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,687:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,705:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,725:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,745:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:43,754:INFO:Calculating mean and std
2022-10-01 13:03:43,754:INFO:Creating metrics dataframe
2022-10-01 13:03:43,757:INFO:Uploading results into container
2022-10-01 13:03:43,757:INFO:Uploading model into container now
2022-10-01 13:03:43,758:INFO:master_model_container: 5
2022-10-01 13:03:43,758:INFO:display_container: 2
2022-10-01 13:03:43,758:INFO:Lars(random_state=123)
2022-10-01 13:03:43,758:INFO:create_model() successfully completed......................................
2022-10-01 13:03:43,829:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:43,829:INFO:Creating metrics dataframe
2022-10-01 13:03:43,833:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:03:43,833:INFO:Total runtime is 0.03450520435969035 minutes
2022-10-01 13:03:43,833:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:43,833:INFO:Initializing create_model()
2022-10-01 13:03:43,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:43,833:INFO:Checking exceptions
2022-10-01 13:03:43,834:INFO:Importing libraries
2022-10-01 13:03:43,834:INFO:Copying training dataset
2022-10-01 13:03:43,836:INFO:Defining folds
2022-10-01 13:03:43,836:INFO:Declaring metric variables
2022-10-01 13:03:43,836:INFO:Importing untrained model
2022-10-01 13:03:43,836:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:03:43,836:INFO:Starting cross validation
2022-10-01 13:03:43,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:43,847:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,865:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,883:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,901:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,919:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,937:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,954:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,972:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:43,989:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:44,007:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:03:44,015:INFO:Calculating mean and std
2022-10-01 13:03:44,016:INFO:Creating metrics dataframe
2022-10-01 13:03:44,018:INFO:Uploading results into container
2022-10-01 13:03:44,018:INFO:Uploading model into container now
2022-10-01 13:03:44,018:INFO:master_model_container: 6
2022-10-01 13:03:44,019:INFO:display_container: 2
2022-10-01 13:03:44,019:INFO:LassoLars(random_state=123)
2022-10-01 13:03:44,019:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,092:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,092:INFO:Creating metrics dataframe
2022-10-01 13:03:44,096:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:03:44,096:INFO:Total runtime is 0.038887719313303634 minutes
2022-10-01 13:03:44,096:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,096:INFO:Initializing create_model()
2022-10-01 13:03:44,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,096:INFO:Checking exceptions
2022-10-01 13:03:44,097:INFO:Importing libraries
2022-10-01 13:03:44,097:INFO:Copying training dataset
2022-10-01 13:03:44,099:INFO:Defining folds
2022-10-01 13:03:44,099:INFO:Declaring metric variables
2022-10-01 13:03:44,099:INFO:Importing untrained model
2022-10-01 13:03:44,099:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:03:44,099:INFO:Starting cross validation
2022-10-01 13:03:44,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:44,109:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,126:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,143:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,160:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,177:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,193:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,210:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,226:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,243:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,259:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:03:44,267:INFO:Calculating mean and std
2022-10-01 13:03:44,268:INFO:Creating metrics dataframe
2022-10-01 13:03:44,270:INFO:Uploading results into container
2022-10-01 13:03:44,271:INFO:Uploading model into container now
2022-10-01 13:03:44,271:INFO:master_model_container: 7
2022-10-01 13:03:44,271:INFO:display_container: 2
2022-10-01 13:03:44,271:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:03:44,271:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,343:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,343:INFO:Creating metrics dataframe
2022-10-01 13:03:44,347:INFO:Initializing Bayesian Ridge
2022-10-01 13:03:44,347:INFO:Total runtime is 0.04306993881861369 minutes
2022-10-01 13:03:44,347:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,347:INFO:Initializing create_model()
2022-10-01 13:03:44,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,347:INFO:Checking exceptions
2022-10-01 13:03:44,348:INFO:Importing libraries
2022-10-01 13:03:44,348:INFO:Copying training dataset
2022-10-01 13:03:44,350:INFO:Defining folds
2022-10-01 13:03:44,350:INFO:Declaring metric variables
2022-10-01 13:03:44,350:INFO:Importing untrained model
2022-10-01 13:03:44,350:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:03:44,351:INFO:Starting cross validation
2022-10-01 13:03:44,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:44,526:INFO:Calculating mean and std
2022-10-01 13:03:44,527:INFO:Creating metrics dataframe
2022-10-01 13:03:44,529:INFO:Uploading results into container
2022-10-01 13:03:44,530:INFO:Uploading model into container now
2022-10-01 13:03:44,530:INFO:master_model_container: 8
2022-10-01 13:03:44,530:INFO:display_container: 2
2022-10-01 13:03:44,530:INFO:BayesianRidge()
2022-10-01 13:03:44,530:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,602:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,602:INFO:Creating metrics dataframe
2022-10-01 13:03:44,606:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:03:44,606:INFO:Total runtime is 0.047386050224304206 minutes
2022-10-01 13:03:44,606:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,606:INFO:Initializing create_model()
2022-10-01 13:03:44,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,606:INFO:Checking exceptions
2022-10-01 13:03:44,607:INFO:Importing libraries
2022-10-01 13:03:44,607:INFO:Copying training dataset
2022-10-01 13:03:44,609:INFO:Defining folds
2022-10-01 13:03:44,609:INFO:Declaring metric variables
2022-10-01 13:03:44,609:INFO:Importing untrained model
2022-10-01 13:03:44,609:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:03:44,609:INFO:Starting cross validation
2022-10-01 13:03:44,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:44,780:INFO:Calculating mean and std
2022-10-01 13:03:44,780:INFO:Creating metrics dataframe
2022-10-01 13:03:44,783:INFO:Uploading results into container
2022-10-01 13:03:44,783:INFO:Uploading model into container now
2022-10-01 13:03:44,783:INFO:master_model_container: 9
2022-10-01 13:03:44,783:INFO:display_container: 2
2022-10-01 13:03:44,783:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:03:44,784:INFO:create_model() successfully completed......................................
2022-10-01 13:03:44,857:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:44,857:INFO:Creating metrics dataframe
2022-10-01 13:03:44,860:INFO:Initializing Huber Regressor
2022-10-01 13:03:44,861:INFO:Total runtime is 0.05163491566975912 minutes
2022-10-01 13:03:44,861:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:44,861:INFO:Initializing create_model()
2022-10-01 13:03:44,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:44,861:INFO:Checking exceptions
2022-10-01 13:03:44,862:INFO:Importing libraries
2022-10-01 13:03:44,862:INFO:Copying training dataset
2022-10-01 13:03:44,864:INFO:Defining folds
2022-10-01 13:03:44,864:INFO:Declaring metric variables
2022-10-01 13:03:44,864:INFO:Importing untrained model
2022-10-01 13:03:44,864:INFO:Huber Regressor Imported successfully
2022-10-01 13:03:44,864:INFO:Starting cross validation
2022-10-01 13:03:44,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:45,092:INFO:Calculating mean and std
2022-10-01 13:03:45,093:INFO:Creating metrics dataframe
2022-10-01 13:03:45,096:INFO:Uploading results into container
2022-10-01 13:03:45,096:INFO:Uploading model into container now
2022-10-01 13:03:45,096:INFO:master_model_container: 10
2022-10-01 13:03:45,096:INFO:display_container: 2
2022-10-01 13:03:45,096:INFO:HuberRegressor()
2022-10-01 13:03:45,097:INFO:create_model() successfully completed......................................
2022-10-01 13:03:45,170:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:45,170:INFO:Creating metrics dataframe
2022-10-01 13:03:45,174:INFO:Initializing K Neighbors Regressor
2022-10-01 13:03:45,174:INFO:Total runtime is 0.056850190957387296 minutes
2022-10-01 13:03:45,174:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:45,174:INFO:Initializing create_model()
2022-10-01 13:03:45,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:45,174:INFO:Checking exceptions
2022-10-01 13:03:45,175:INFO:Importing libraries
2022-10-01 13:03:45,175:INFO:Copying training dataset
2022-10-01 13:03:45,177:INFO:Defining folds
2022-10-01 13:03:45,177:INFO:Declaring metric variables
2022-10-01 13:03:45,177:INFO:Importing untrained model
2022-10-01 13:03:45,177:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:03:45,178:INFO:Starting cross validation
2022-10-01 13:03:45,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:52,329:INFO:Calculating mean and std
2022-10-01 13:03:52,329:INFO:Creating metrics dataframe
2022-10-01 13:03:52,332:INFO:Uploading results into container
2022-10-01 13:03:52,332:INFO:Uploading model into container now
2022-10-01 13:03:52,333:INFO:master_model_container: 11
2022-10-01 13:03:52,333:INFO:display_container: 2
2022-10-01 13:03:52,333:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:03:52,333:INFO:create_model() successfully completed......................................
2022-10-01 13:03:52,412:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:52,412:INFO:Creating metrics dataframe
2022-10-01 13:03:52,418:INFO:Initializing Decision Tree Regressor
2022-10-01 13:03:52,418:INFO:Total runtime is 0.17758172353108725 minutes
2022-10-01 13:03:52,418:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:52,419:INFO:Initializing create_model()
2022-10-01 13:03:52,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:52,419:INFO:Checking exceptions
2022-10-01 13:03:52,420:INFO:Importing libraries
2022-10-01 13:03:52,420:INFO:Copying training dataset
2022-10-01 13:03:52,421:INFO:Defining folds
2022-10-01 13:03:52,421:INFO:Declaring metric variables
2022-10-01 13:03:52,422:INFO:Importing untrained model
2022-10-01 13:03:52,422:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:03:52,422:INFO:Starting cross validation
2022-10-01 13:03:52,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:52,610:INFO:Calculating mean and std
2022-10-01 13:03:52,611:INFO:Creating metrics dataframe
2022-10-01 13:03:52,614:INFO:Uploading results into container
2022-10-01 13:03:52,614:INFO:Uploading model into container now
2022-10-01 13:03:52,615:INFO:master_model_container: 12
2022-10-01 13:03:52,615:INFO:display_container: 2
2022-10-01 13:03:52,615:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:03:52,615:INFO:create_model() successfully completed......................................
2022-10-01 13:03:52,692:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:52,692:INFO:Creating metrics dataframe
2022-10-01 13:03:52,696:INFO:Initializing Random Forest Regressor
2022-10-01 13:03:52,696:INFO:Total runtime is 0.18223048845926923 minutes
2022-10-01 13:03:52,696:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:52,697:INFO:Initializing create_model()
2022-10-01 13:03:52,697:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:52,697:INFO:Checking exceptions
2022-10-01 13:03:52,698:INFO:Importing libraries
2022-10-01 13:03:52,698:INFO:Copying training dataset
2022-10-01 13:03:52,699:INFO:Defining folds
2022-10-01 13:03:52,700:INFO:Declaring metric variables
2022-10-01 13:03:52,700:INFO:Importing untrained model
2022-10-01 13:03:52,700:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:03:52,700:INFO:Starting cross validation
2022-10-01 13:03:52,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:56,731:INFO:Calculating mean and std
2022-10-01 13:03:56,732:INFO:Creating metrics dataframe
2022-10-01 13:03:56,735:INFO:Uploading results into container
2022-10-01 13:03:56,735:INFO:Uploading model into container now
2022-10-01 13:03:56,735:INFO:master_model_container: 13
2022-10-01 13:03:56,736:INFO:display_container: 2
2022-10-01 13:03:56,736:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:03:56,736:INFO:create_model() successfully completed......................................
2022-10-01 13:03:56,823:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:56,823:INFO:Creating metrics dataframe
2022-10-01 13:03:56,827:INFO:Initializing Extra Trees Regressor
2022-10-01 13:03:56,827:INFO:Total runtime is 0.251081395149231 minutes
2022-10-01 13:03:56,827:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:56,828:INFO:Initializing create_model()
2022-10-01 13:03:56,828:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:56,828:INFO:Checking exceptions
2022-10-01 13:03:56,829:INFO:Importing libraries
2022-10-01 13:03:56,829:INFO:Copying training dataset
2022-10-01 13:03:56,831:INFO:Defining folds
2022-10-01 13:03:56,831:INFO:Declaring metric variables
2022-10-01 13:03:56,831:INFO:Importing untrained model
2022-10-01 13:03:56,831:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:03:56,831:INFO:Starting cross validation
2022-10-01 13:03:56,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:58,234:INFO:Calculating mean and std
2022-10-01 13:03:58,235:INFO:Creating metrics dataframe
2022-10-01 13:03:58,238:INFO:Uploading results into container
2022-10-01 13:03:58,238:INFO:Uploading model into container now
2022-10-01 13:03:58,238:INFO:master_model_container: 14
2022-10-01 13:03:58,238:INFO:display_container: 2
2022-10-01 13:03:58,239:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:03:58,239:INFO:create_model() successfully completed......................................
2022-10-01 13:03:58,313:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:58,313:INFO:Creating metrics dataframe
2022-10-01 13:03:58,317:INFO:Initializing AdaBoost Regressor
2022-10-01 13:03:58,317:INFO:Total runtime is 0.2759131312370301 minutes
2022-10-01 13:03:58,317:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:58,317:INFO:Initializing create_model()
2022-10-01 13:03:58,317:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:58,317:INFO:Checking exceptions
2022-10-01 13:03:58,318:INFO:Importing libraries
2022-10-01 13:03:58,318:INFO:Copying training dataset
2022-10-01 13:03:58,320:INFO:Defining folds
2022-10-01 13:03:58,320:INFO:Declaring metric variables
2022-10-01 13:03:58,320:INFO:Importing untrained model
2022-10-01 13:03:58,320:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:03:58,321:INFO:Starting cross validation
2022-10-01 13:03:58,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:59,105:INFO:Calculating mean and std
2022-10-01 13:03:59,106:INFO:Creating metrics dataframe
2022-10-01 13:03:59,108:INFO:Uploading results into container
2022-10-01 13:03:59,108:INFO:Uploading model into container now
2022-10-01 13:03:59,109:INFO:master_model_container: 15
2022-10-01 13:03:59,109:INFO:display_container: 2
2022-10-01 13:03:59,109:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:03:59,109:INFO:create_model() successfully completed......................................
2022-10-01 13:03:59,186:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:59,186:INFO:Creating metrics dataframe
2022-10-01 13:03:59,190:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:03:59,190:INFO:Total runtime is 0.29044857819875086 minutes
2022-10-01 13:03:59,190:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:59,190:INFO:Initializing create_model()
2022-10-01 13:03:59,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:59,191:INFO:Checking exceptions
2022-10-01 13:03:59,192:INFO:Importing libraries
2022-10-01 13:03:59,192:INFO:Copying training dataset
2022-10-01 13:03:59,193:INFO:Defining folds
2022-10-01 13:03:59,193:INFO:Declaring metric variables
2022-10-01 13:03:59,193:INFO:Importing untrained model
2022-10-01 13:03:59,194:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:03:59,194:INFO:Starting cross validation
2022-10-01 13:03:59,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:03:59,807:INFO:Calculating mean and std
2022-10-01 13:03:59,808:INFO:Creating metrics dataframe
2022-10-01 13:03:59,811:INFO:Uploading results into container
2022-10-01 13:03:59,812:INFO:Uploading model into container now
2022-10-01 13:03:59,812:INFO:master_model_container: 16
2022-10-01 13:03:59,812:INFO:display_container: 2
2022-10-01 13:03:59,813:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:03:59,813:INFO:create_model() successfully completed......................................
2022-10-01 13:03:59,899:INFO:SubProcess create_model() end ==================================
2022-10-01 13:03:59,900:INFO:Creating metrics dataframe
2022-10-01 13:03:59,905:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:03:59,905:INFO:Total runtime is 0.3023785551389059 minutes
2022-10-01 13:03:59,906:INFO:SubProcess create_model() called ==================================
2022-10-01 13:03:59,906:INFO:Initializing create_model()
2022-10-01 13:03:59,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:03:59,906:INFO:Checking exceptions
2022-10-01 13:03:59,908:INFO:Importing libraries
2022-10-01 13:03:59,908:INFO:Copying training dataset
2022-10-01 13:03:59,910:INFO:Defining folds
2022-10-01 13:03:59,910:INFO:Declaring metric variables
2022-10-01 13:03:59,911:INFO:Importing untrained model
2022-10-01 13:03:59,911:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:03:59,911:INFO:Starting cross validation
2022-10-01 13:03:59,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:04:09,120:INFO:Calculating mean and std
2022-10-01 13:04:09,121:INFO:Creating metrics dataframe
2022-10-01 13:04:09,124:INFO:Uploading results into container
2022-10-01 13:04:09,125:INFO:Uploading model into container now
2022-10-01 13:04:09,125:INFO:master_model_container: 17
2022-10-01 13:04:09,125:INFO:display_container: 2
2022-10-01 13:04:09,126:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:04:09,126:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,212:INFO:SubProcess create_model() end ==================================
2022-10-01 13:04:09,212:INFO:Creating metrics dataframe
2022-10-01 13:04:09,217:INFO:Initializing Dummy Regressor
2022-10-01 13:04:09,217:INFO:Total runtime is 0.45757633447647095 minutes
2022-10-01 13:04:09,217:INFO:SubProcess create_model() called ==================================
2022-10-01 13:04:09,217:INFO:Initializing create_model()
2022-10-01 13:04:09,218:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002213D450A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:04:09,218:INFO:Checking exceptions
2022-10-01 13:04:09,219:INFO:Importing libraries
2022-10-01 13:04:09,219:INFO:Copying training dataset
2022-10-01 13:04:09,221:INFO:Defining folds
2022-10-01 13:04:09,221:INFO:Declaring metric variables
2022-10-01 13:04:09,221:INFO:Importing untrained model
2022-10-01 13:04:09,222:INFO:Dummy Regressor Imported successfully
2022-10-01 13:04:09,222:INFO:Starting cross validation
2022-10-01 13:04:09,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:04:09,393:INFO:Calculating mean and std
2022-10-01 13:04:09,393:INFO:Creating metrics dataframe
2022-10-01 13:04:09,396:INFO:Uploading results into container
2022-10-01 13:04:09,397:INFO:Uploading model into container now
2022-10-01 13:04:09,397:INFO:master_model_container: 18
2022-10-01 13:04:09,397:INFO:display_container: 2
2022-10-01 13:04:09,397:INFO:DummyRegressor()
2022-10-01 13:04:09,397:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,478:INFO:SubProcess create_model() end ==================================
2022-10-01 13:04:09,478:INFO:Creating metrics dataframe
2022-10-01 13:04:09,485:INFO:Initializing create_model()
2022-10-01 13:04:09,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:04:09,485:INFO:Checking exceptions
2022-10-01 13:04:09,487:INFO:Importing libraries
2022-10-01 13:04:09,487:INFO:Copying training dataset
2022-10-01 13:04:09,489:INFO:Defining folds
2022-10-01 13:04:09,489:INFO:Declaring metric variables
2022-10-01 13:04:09,489:INFO:Importing untrained model
2022-10-01 13:04:09,489:INFO:Declaring custom model
2022-10-01 13:04:09,489:INFO:Linear Regression Imported successfully
2022-10-01 13:04:09,490:INFO:Cross validation set to False
2022-10-01 13:04:09,490:INFO:Fitting Model
2022-10-01 13:04:09,514:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:04:09,514:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,616:INFO:master_model_container: 18
2022-10-01 13:04:09,616:INFO:display_container: 2
2022-10-01 13:04:09,616:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:04:09,616:INFO:compare_models() successfully completed......................................
2022-10-01 13:04:09,616:INFO:Initializing create_model()
2022-10-01 13:04:09,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:04:09,616:INFO:Checking exceptions
2022-10-01 13:04:09,620:INFO:Importing libraries
2022-10-01 13:04:09,620:INFO:Copying training dataset
2022-10-01 13:04:09,622:INFO:Defining folds
2022-10-01 13:04:09,622:INFO:Declaring metric variables
2022-10-01 13:04:09,622:INFO:Importing untrained model
2022-10-01 13:04:09,622:INFO:Declaring custom model
2022-10-01 13:04:09,623:INFO:Linear Regression Imported successfully
2022-10-01 13:04:09,623:INFO:Starting cross validation
2022-10-01 13:04:09,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:04:09,828:INFO:Calculating mean and std
2022-10-01 13:04:09,828:INFO:Creating metrics dataframe
2022-10-01 13:04:09,830:INFO:Finalizing model
2022-10-01 13:04:09,844:INFO:Uploading results into container
2022-10-01 13:04:09,845:INFO:Uploading model into container now
2022-10-01 13:04:09,856:INFO:master_model_container: 19
2022-10-01 13:04:09,856:INFO:display_container: 3
2022-10-01 13:04:09,856:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:04:09,856:INFO:create_model() successfully completed......................................
2022-10-01 13:04:09,957:INFO:Initializing evaluate_model()
2022-10-01 13:04:09,957:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-10-01 13:04:10,168:INFO:Initializing plot_model()
2022-10-01 13:04:10,168:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, system=True)
2022-10-01 13:04:10,168:INFO:Checking exceptions
2022-10-01 13:04:10,170:INFO:Preloading libraries
2022-10-01 13:04:10,170:INFO:Copying training dataset
2022-10-01 13:04:10,170:INFO:Plot type: pipeline
2022-10-01 13:04:31,398:INFO:Visual Rendered Successfully
2022-10-01 13:04:31,478:INFO:plot_model() successfully completed......................................
2022-10-01 13:04:31,481:INFO:Initializing predict_model()
2022-10-01 13:04:31,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002213451D2D0>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002213D19ECB0>)
2022-10-01 13:04:31,481:INFO:Checking exceptions
2022-10-01 13:04:31,481:INFO:Preloading libraries
2022-10-01 13:04:31,481:INFO:Set up data.
2022-10-01 13:04:31,484:INFO:Set up index.
2022-10-01 13:04:31,759:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:44: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:31,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:32,590:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:05:51,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:51,975:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:05:53,498:INFO:PyCaret RegressionExperiment
2022-10-01 13:05:53,498:INFO:Logging name: reg-default-name
2022-10-01 13:05:53,498:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:05:53,498:INFO:version 3.0.0.rc4
2022-10-01 13:05:53,498:INFO:Initializing setup()
2022-10-01 13:05:53,498:INFO:self.USI: e0c5
2022-10-01 13:05:53,498:INFO:self.variable_keys: {'exp_name_log', 'target_param', 'variable_keys', 'master_model_container', 'pipeline', 'gpu_param', 'y_train', '_all_models', 'y_test', 'exp_id', 'data', 'fold_shuffle_param', 'seed', 'html_param', 'X_test', 'X_train', '_all_models_internal', '_gpu_n_jobs_param', 'USI', 'log_plots_param', '_available_plots', 'y', 'X', 'idx', '_all_metrics', 'transform_target_method_param', 'memory', 'n_jobs_param', 'transform_target_param', 'fold_groups_param', 'logging_param', '_ml_usecase', 'fold_generator', 'display_container'}
2022-10-01 13:05:53,498:INFO:Checking environment
2022-10-01 13:05:53,498:INFO:python_version: 3.10.7
2022-10-01 13:05:53,498:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:05:53,498:INFO:machine: AMD64
2022-10-01 13:05:53,510:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:05:53,510:INFO:Memory: svmem(total=8497213440, available=2094174208, percent=75.4, used=6403039232, free=2094174208)
2022-10-01 13:05:53,510:INFO:Physical Core: 6
2022-10-01 13:05:53,510:INFO:Logical Core: 12
2022-10-01 13:05:53,510:INFO:Checking libraries
2022-10-01 13:05:53,510:INFO:System:
2022-10-01 13:05:53,510:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:05:53,510:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:05:53,510:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:05:53,510:INFO:PyCaret required dependencies:
2022-10-01 13:05:53,510:INFO:                 pip: 22.2.2
2022-10-01 13:05:53,510:INFO:          setuptools: 63.2.0
2022-10-01 13:05:53,510:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:05:53,510:INFO:             IPython: 8.5.0
2022-10-01 13:05:53,510:INFO:          ipywidgets: 8.0.2
2022-10-01 13:05:53,510:INFO:                tqdm: 4.64.1
2022-10-01 13:05:53,510:INFO:               numpy: 1.22.4
2022-10-01 13:05:53,510:INFO:              pandas: 1.4.4
2022-10-01 13:05:53,510:INFO:              jinja2: 3.1.2
2022-10-01 13:05:53,510:INFO:               scipy: 1.8.1
2022-10-01 13:05:53,510:INFO:              joblib: 1.2.0
2022-10-01 13:05:53,510:INFO:             sklearn: 1.1.2
2022-10-01 13:05:53,510:INFO:                pyod: 1.0.5
2022-10-01 13:05:53,510:INFO:            imblearn: 0.9.1
2022-10-01 13:05:53,510:INFO:   category_encoders: 2.5.0
2022-10-01 13:05:53,510:INFO:            lightgbm: 3.3.2
2022-10-01 13:05:53,510:INFO:               numba: 0.55.2
2022-10-01 13:05:53,510:INFO:            requests: 2.28.1
2022-10-01 13:05:53,510:INFO:          matplotlib: 3.6.0
2022-10-01 13:05:53,510:INFO:          scikitplot: 0.3.7
2022-10-01 13:05:53,510:INFO:         yellowbrick: 1.5
2022-10-01 13:05:53,510:INFO:              plotly: 5.10.0
2022-10-01 13:05:53,510:INFO:             kaleido: 0.2.1
2022-10-01 13:05:53,510:INFO:         statsmodels: 0.13.2
2022-10-01 13:05:53,510:INFO:              sktime: 0.13.4
2022-10-01 13:05:53,510:INFO:               tbats: 1.1.0
2022-10-01 13:05:53,510:INFO:            pmdarima: 1.8.5
2022-10-01 13:05:53,510:INFO:              psutil: 5.9.2
2022-10-01 13:05:53,511:INFO:PyCaret optional dependencies:
2022-10-01 13:05:53,526:INFO:                shap: Not installed
2022-10-01 13:05:53,526:INFO:           interpret: Not installed
2022-10-01 13:05:53,526:INFO:                umap: Not installed
2022-10-01 13:05:53,526:INFO:    pandas_profiling: Not installed
2022-10-01 13:05:53,526:INFO:  explainerdashboard: Not installed
2022-10-01 13:05:53,526:INFO:             autoviz: Not installed
2022-10-01 13:05:53,526:INFO:           fairlearn: Not installed
2022-10-01 13:05:53,527:INFO:             xgboost: Not installed
2022-10-01 13:05:53,527:INFO:            catboost: Not installed
2022-10-01 13:05:53,527:INFO:              kmodes: Not installed
2022-10-01 13:05:53,527:INFO:             mlxtend: Not installed
2022-10-01 13:05:53,527:INFO:       statsforecast: Not installed
2022-10-01 13:05:53,527:INFO:        tune_sklearn: Not installed
2022-10-01 13:05:53,527:INFO:                 ray: Not installed
2022-10-01 13:05:53,527:INFO:            hyperopt: Not installed
2022-10-01 13:05:53,527:INFO:              optuna: Not installed
2022-10-01 13:05:53,527:INFO:               skopt: Not installed
2022-10-01 13:05:53,527:INFO:              mlflow: Not installed
2022-10-01 13:05:53,527:INFO:              gradio: Not installed
2022-10-01 13:05:53,527:INFO:             fastapi: Not installed
2022-10-01 13:05:53,527:INFO:             uvicorn: Not installed
2022-10-01 13:05:53,527:INFO:              m2cgen: Not installed
2022-10-01 13:05:53,527:INFO:           evidently: Not installed
2022-10-01 13:05:53,527:INFO:                nltk: Not installed
2022-10-01 13:05:53,527:INFO:            pyLDAvis: Not installed
2022-10-01 13:05:53,527:INFO:              gensim: Not installed
2022-10-01 13:05:53,527:INFO:               spacy: Not installed
2022-10-01 13:05:53,527:INFO:           wordcloud: Not installed
2022-10-01 13:05:53,527:INFO:            textblob: Not installed
2022-10-01 13:05:53,527:INFO:               fugue: Not installed
2022-10-01 13:05:53,528:INFO:           streamlit: Not installed
2022-10-01 13:05:53,528:INFO:             prophet: Not installed
2022-10-01 13:05:53,528:INFO:None
2022-10-01 13:05:53,528:INFO:Set up GPU usage.
2022-10-01 13:05:53,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,528:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:05:53,528:INFO:Set up data.
2022-10-01 13:05:53,533:INFO:Set up train/test split.
2022-10-01 13:05:53,615:INFO:Set up index.
2022-10-01 13:05:53,615:INFO:Set up folding strategy.
2022-10-01 13:05:53,615:INFO:Assigning column types.
2022-10-01 13:05:53,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:05:53,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,618:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,622:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,681:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,682:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,724:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:53,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:53,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,110:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,117:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,124:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,484:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:05:54,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,491:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,498:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,581:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:54,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,862:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,862:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,868:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,951:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:54,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:54,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,228:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:05:55,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,241:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,595:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,684:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:55,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:55,959:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:05:55,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:55,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,056:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,429:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,429:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,474:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:56,711:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:05:56,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:56,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:56,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:05:57,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,475:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:05:57,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,482:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:57,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:57,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,235:INFO:Preparing preprocessing pipeline...
2022-10-01 13:05:58,236:INFO:Set up simple imputation.
2022-10-01 13:05:58,236:INFO:Set up variance threshold.
2022-10-01 13:05:58,252:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:05:58,259:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:05:58,259:INFO:Creating final display dataframe.
2022-10-01 13:05:58,342:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              e0c5
2022-10-01 13:05:58,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:58,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:05:58,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:59,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:05:59,117:INFO:setup() successfully completed in 5.62s...............
2022-10-01 13:05:59,117:INFO:Initializing compare_models()
2022-10-01 13:05:59,117:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:05:59,117:INFO:Checking exceptions
2022-10-01 13:05:59,118:INFO:Preparing display monitor
2022-10-01 13:05:59,122:INFO:Initializing Linear Regression
2022-10-01 13:05:59,122:INFO:Total runtime is 0.0 minutes
2022-10-01 13:05:59,122:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,122:INFO:Initializing create_model()
2022-10-01 13:05:59,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,122:INFO:Checking exceptions
2022-10-01 13:05:59,124:INFO:Importing libraries
2022-10-01 13:05:59,124:INFO:Copying training dataset
2022-10-01 13:05:59,126:INFO:Defining folds
2022-10-01 13:05:59,126:INFO:Declaring metric variables
2022-10-01 13:05:59,126:INFO:Importing untrained model
2022-10-01 13:05:59,126:INFO:Linear Regression Imported successfully
2022-10-01 13:05:59,126:INFO:Starting cross validation
2022-10-01 13:05:59,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,333:INFO:Calculating mean and std
2022-10-01 13:05:59,334:INFO:Creating metrics dataframe
2022-10-01 13:05:59,337:INFO:Uploading results into container
2022-10-01 13:05:59,337:INFO:Uploading model into container now
2022-10-01 13:05:59,337:INFO:master_model_container: 1
2022-10-01 13:05:59,337:INFO:display_container: 2
2022-10-01 13:05:59,337:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:05:59,338:INFO:create_model() successfully completed......................................
2022-10-01 13:05:59,414:INFO:SubProcess create_model() end ==================================
2022-10-01 13:05:59,415:INFO:Creating metrics dataframe
2022-10-01 13:05:59,418:INFO:Initializing Lasso Regression
2022-10-01 13:05:59,418:INFO:Total runtime is 0.004932638009389242 minutes
2022-10-01 13:05:59,418:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,418:INFO:Initializing create_model()
2022-10-01 13:05:59,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,418:INFO:Checking exceptions
2022-10-01 13:05:59,419:INFO:Importing libraries
2022-10-01 13:05:59,419:INFO:Copying training dataset
2022-10-01 13:05:59,421:INFO:Defining folds
2022-10-01 13:05:59,421:INFO:Declaring metric variables
2022-10-01 13:05:59,421:INFO:Importing untrained model
2022-10-01 13:05:59,421:INFO:Lasso Regression Imported successfully
2022-10-01 13:05:59,422:INFO:Starting cross validation
2022-10-01 13:05:59,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,434:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,470:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,488:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,506:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,523:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,541:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,558:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,575:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,592:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,600:INFO:Calculating mean and std
2022-10-01 13:05:59,600:INFO:Creating metrics dataframe
2022-10-01 13:05:59,603:INFO:Uploading results into container
2022-10-01 13:05:59,603:INFO:Uploading model into container now
2022-10-01 13:05:59,603:INFO:master_model_container: 2
2022-10-01 13:05:59,603:INFO:display_container: 2
2022-10-01 13:05:59,604:INFO:Lasso(random_state=123)
2022-10-01 13:05:59,604:INFO:create_model() successfully completed......................................
2022-10-01 13:05:59,677:INFO:SubProcess create_model() end ==================================
2022-10-01 13:05:59,677:INFO:Creating metrics dataframe
2022-10-01 13:05:59,681:INFO:Initializing Ridge Regression
2022-10-01 13:05:59,681:INFO:Total runtime is 0.009314374128977457 minutes
2022-10-01 13:05:59,681:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,681:INFO:Initializing create_model()
2022-10-01 13:05:59,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,682:INFO:Checking exceptions
2022-10-01 13:05:59,682:INFO:Importing libraries
2022-10-01 13:05:59,683:INFO:Copying training dataset
2022-10-01 13:05:59,684:INFO:Defining folds
2022-10-01 13:05:59,684:INFO:Declaring metric variables
2022-10-01 13:05:59,684:INFO:Importing untrained model
2022-10-01 13:05:59,685:INFO:Ridge Regression Imported successfully
2022-10-01 13:05:59,685:INFO:Starting cross validation
2022-10-01 13:05:59,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,696:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,713:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,731:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,748:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,765:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,783:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,801:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,819:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,836:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,853:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:05:59,861:INFO:Calculating mean and std
2022-10-01 13:05:59,862:INFO:Creating metrics dataframe
2022-10-01 13:05:59,864:INFO:Uploading results into container
2022-10-01 13:05:59,864:INFO:Uploading model into container now
2022-10-01 13:05:59,865:INFO:master_model_container: 3
2022-10-01 13:05:59,865:INFO:display_container: 2
2022-10-01 13:05:59,865:INFO:Ridge(random_state=123)
2022-10-01 13:05:59,865:INFO:create_model() successfully completed......................................
2022-10-01 13:05:59,938:INFO:SubProcess create_model() end ==================================
2022-10-01 13:05:59,938:INFO:Creating metrics dataframe
2022-10-01 13:05:59,943:INFO:Initializing Elastic Net
2022-10-01 13:05:59,943:INFO:Total runtime is 0.01368023157119751 minutes
2022-10-01 13:05:59,944:INFO:SubProcess create_model() called ==================================
2022-10-01 13:05:59,944:INFO:Initializing create_model()
2022-10-01 13:05:59,944:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:05:59,944:INFO:Checking exceptions
2022-10-01 13:05:59,946:INFO:Importing libraries
2022-10-01 13:05:59,946:INFO:Copying training dataset
2022-10-01 13:05:59,948:INFO:Defining folds
2022-10-01 13:05:59,948:INFO:Declaring metric variables
2022-10-01 13:05:59,948:INFO:Importing untrained model
2022-10-01 13:05:59,948:INFO:Elastic Net Imported successfully
2022-10-01 13:05:59,949:INFO:Starting cross validation
2022-10-01 13:05:59,949:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:05:59,963:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:05:59,981:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,000:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,018:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,036:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,053:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,071:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,088:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,106:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,123:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:06:00,131:INFO:Calculating mean and std
2022-10-01 13:06:00,132:INFO:Creating metrics dataframe
2022-10-01 13:06:00,134:INFO:Uploading results into container
2022-10-01 13:06:00,135:INFO:Uploading model into container now
2022-10-01 13:06:00,135:INFO:master_model_container: 4
2022-10-01 13:06:00,135:INFO:display_container: 2
2022-10-01 13:06:00,135:INFO:ElasticNet(random_state=123)
2022-10-01 13:06:00,135:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,207:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:00,207:INFO:Creating metrics dataframe
2022-10-01 13:06:00,211:INFO:Initializing Least Angle Regression
2022-10-01 13:06:00,211:INFO:Total runtime is 0.018145803610483804 minutes
2022-10-01 13:06:00,211:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:00,211:INFO:Initializing create_model()
2022-10-01 13:06:00,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:00,211:INFO:Checking exceptions
2022-10-01 13:06:00,212:INFO:Importing libraries
2022-10-01 13:06:00,212:INFO:Copying training dataset
2022-10-01 13:06:00,214:INFO:Defining folds
2022-10-01 13:06:00,214:INFO:Declaring metric variables
2022-10-01 13:06:00,214:INFO:Importing untrained model
2022-10-01 13:06:00,214:INFO:Least Angle Regression Imported successfully
2022-10-01 13:06:00,215:INFO:Starting cross validation
2022-10-01 13:06:00,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:00,225:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,243:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,261:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,278:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,296:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,313:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,330:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,348:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,366:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,383:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,392:INFO:Calculating mean and std
2022-10-01 13:06:00,392:INFO:Creating metrics dataframe
2022-10-01 13:06:00,395:INFO:Uploading results into container
2022-10-01 13:06:00,395:INFO:Uploading model into container now
2022-10-01 13:06:00,395:INFO:master_model_container: 5
2022-10-01 13:06:00,395:INFO:display_container: 2
2022-10-01 13:06:00,396:INFO:Lars(random_state=123)
2022-10-01 13:06:00,396:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,471:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:00,471:INFO:Creating metrics dataframe
2022-10-01 13:06:00,475:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:06:00,475:INFO:Total runtime is 0.02254459063212077 minutes
2022-10-01 13:06:00,475:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:00,476:INFO:Initializing create_model()
2022-10-01 13:06:00,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:00,476:INFO:Checking exceptions
2022-10-01 13:06:00,477:INFO:Importing libraries
2022-10-01 13:06:00,477:INFO:Copying training dataset
2022-10-01 13:06:00,478:INFO:Defining folds
2022-10-01 13:06:00,478:INFO:Declaring metric variables
2022-10-01 13:06:00,478:INFO:Importing untrained model
2022-10-01 13:06:00,479:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:06:00,479:INFO:Starting cross validation
2022-10-01 13:06:00,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:00,490:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,507:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,525:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,543:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,565:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,584:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,601:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,619:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,637:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,656:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:06:00,664:INFO:Calculating mean and std
2022-10-01 13:06:00,665:INFO:Creating metrics dataframe
2022-10-01 13:06:00,667:INFO:Uploading results into container
2022-10-01 13:06:00,667:INFO:Uploading model into container now
2022-10-01 13:06:00,668:INFO:master_model_container: 6
2022-10-01 13:06:00,668:INFO:display_container: 2
2022-10-01 13:06:00,668:INFO:LassoLars(random_state=123)
2022-10-01 13:06:00,668:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,741:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:00,741:INFO:Creating metrics dataframe
2022-10-01 13:06:00,745:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:06:00,745:INFO:Total runtime is 0.027043473720550538 minutes
2022-10-01 13:06:00,745:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:00,746:INFO:Initializing create_model()
2022-10-01 13:06:00,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:00,746:INFO:Checking exceptions
2022-10-01 13:06:00,747:INFO:Importing libraries
2022-10-01 13:06:00,747:INFO:Copying training dataset
2022-10-01 13:06:00,748:INFO:Defining folds
2022-10-01 13:06:00,748:INFO:Declaring metric variables
2022-10-01 13:06:00,749:INFO:Importing untrained model
2022-10-01 13:06:00,749:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:06:00,749:INFO:Starting cross validation
2022-10-01 13:06:00,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:00,759:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,776:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,794:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,810:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,827:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,845:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,862:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,879:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,896:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,912:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:06:00,921:INFO:Calculating mean and std
2022-10-01 13:06:00,921:INFO:Creating metrics dataframe
2022-10-01 13:06:00,924:INFO:Uploading results into container
2022-10-01 13:06:00,924:INFO:Uploading model into container now
2022-10-01 13:06:00,925:INFO:master_model_container: 7
2022-10-01 13:06:00,925:INFO:display_container: 2
2022-10-01 13:06:00,925:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:06:00,925:INFO:create_model() successfully completed......................................
2022-10-01 13:06:00,999:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,000:INFO:Creating metrics dataframe
2022-10-01 13:06:01,003:INFO:Initializing Bayesian Ridge
2022-10-01 13:06:01,003:INFO:Total runtime is 0.031342236200968425 minutes
2022-10-01 13:06:01,004:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,004:INFO:Initializing create_model()
2022-10-01 13:06:01,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,004:INFO:Checking exceptions
2022-10-01 13:06:01,005:INFO:Importing libraries
2022-10-01 13:06:01,005:INFO:Copying training dataset
2022-10-01 13:06:01,006:INFO:Defining folds
2022-10-01 13:06:01,006:INFO:Declaring metric variables
2022-10-01 13:06:01,007:INFO:Importing untrained model
2022-10-01 13:06:01,007:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:06:01,007:INFO:Starting cross validation
2022-10-01 13:06:01,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:01,181:INFO:Calculating mean and std
2022-10-01 13:06:01,181:INFO:Creating metrics dataframe
2022-10-01 13:06:01,184:INFO:Uploading results into container
2022-10-01 13:06:01,184:INFO:Uploading model into container now
2022-10-01 13:06:01,184:INFO:master_model_container: 8
2022-10-01 13:06:01,185:INFO:display_container: 2
2022-10-01 13:06:01,185:INFO:BayesianRidge()
2022-10-01 13:06:01,185:INFO:create_model() successfully completed......................................
2022-10-01 13:06:01,257:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,258:INFO:Creating metrics dataframe
2022-10-01 13:06:01,261:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:06:01,261:INFO:Total runtime is 0.03564048608144124 minutes
2022-10-01 13:06:01,262:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,262:INFO:Initializing create_model()
2022-10-01 13:06:01,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,262:INFO:Checking exceptions
2022-10-01 13:06:01,263:INFO:Importing libraries
2022-10-01 13:06:01,263:INFO:Copying training dataset
2022-10-01 13:06:01,264:INFO:Defining folds
2022-10-01 13:06:01,264:INFO:Declaring metric variables
2022-10-01 13:06:01,265:INFO:Importing untrained model
2022-10-01 13:06:01,265:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:06:01,265:INFO:Starting cross validation
2022-10-01 13:06:01,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:01,433:INFO:Calculating mean and std
2022-10-01 13:06:01,434:INFO:Creating metrics dataframe
2022-10-01 13:06:01,436:INFO:Uploading results into container
2022-10-01 13:06:01,436:INFO:Uploading model into container now
2022-10-01 13:06:01,437:INFO:master_model_container: 9
2022-10-01 13:06:01,437:INFO:display_container: 2
2022-10-01 13:06:01,437:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:06:01,437:INFO:create_model() successfully completed......................................
2022-10-01 13:06:01,512:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,512:INFO:Creating metrics dataframe
2022-10-01 13:06:01,516:INFO:Initializing Huber Regressor
2022-10-01 13:06:01,516:INFO:Total runtime is 0.03989164034525553 minutes
2022-10-01 13:06:01,517:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,517:INFO:Initializing create_model()
2022-10-01 13:06:01,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,517:INFO:Checking exceptions
2022-10-01 13:06:01,518:INFO:Importing libraries
2022-10-01 13:06:01,518:INFO:Copying training dataset
2022-10-01 13:06:01,519:INFO:Defining folds
2022-10-01 13:06:01,520:INFO:Declaring metric variables
2022-10-01 13:06:01,520:INFO:Importing untrained model
2022-10-01 13:06:01,520:INFO:Huber Regressor Imported successfully
2022-10-01 13:06:01,520:INFO:Starting cross validation
2022-10-01 13:06:01,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:01,745:INFO:Calculating mean and std
2022-10-01 13:06:01,745:INFO:Creating metrics dataframe
2022-10-01 13:06:01,748:INFO:Uploading results into container
2022-10-01 13:06:01,748:INFO:Uploading model into container now
2022-10-01 13:06:01,749:INFO:master_model_container: 10
2022-10-01 13:06:01,749:INFO:display_container: 2
2022-10-01 13:06:01,749:INFO:HuberRegressor()
2022-10-01 13:06:01,749:INFO:create_model() successfully completed......................................
2022-10-01 13:06:01,822:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:01,822:INFO:Creating metrics dataframe
2022-10-01 13:06:01,826:INFO:Initializing K Neighbors Regressor
2022-10-01 13:06:01,826:INFO:Total runtime is 0.04505751530329386 minutes
2022-10-01 13:06:01,826:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:01,826:INFO:Initializing create_model()
2022-10-01 13:06:01,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:01,826:INFO:Checking exceptions
2022-10-01 13:06:01,827:INFO:Importing libraries
2022-10-01 13:06:01,827:INFO:Copying training dataset
2022-10-01 13:06:01,829:INFO:Defining folds
2022-10-01 13:06:01,829:INFO:Declaring metric variables
2022-10-01 13:06:01,829:INFO:Importing untrained model
2022-10-01 13:06:01,829:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:06:01,829:INFO:Starting cross validation
2022-10-01 13:06:01,830:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:04,363:INFO:Calculating mean and std
2022-10-01 13:06:04,364:INFO:Creating metrics dataframe
2022-10-01 13:06:04,366:INFO:Uploading results into container
2022-10-01 13:06:04,367:INFO:Uploading model into container now
2022-10-01 13:06:04,367:INFO:master_model_container: 11
2022-10-01 13:06:04,367:INFO:display_container: 2
2022-10-01 13:06:04,367:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:06:04,368:INFO:create_model() successfully completed......................................
2022-10-01 13:06:04,477:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:04,478:INFO:Creating metrics dataframe
2022-10-01 13:06:04,484:INFO:Initializing Decision Tree Regressor
2022-10-01 13:06:04,484:INFO:Total runtime is 0.0893617312113444 minutes
2022-10-01 13:06:04,485:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:04,485:INFO:Initializing create_model()
2022-10-01 13:06:04,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:04,485:INFO:Checking exceptions
2022-10-01 13:06:04,487:INFO:Importing libraries
2022-10-01 13:06:04,487:INFO:Copying training dataset
2022-10-01 13:06:04,490:INFO:Defining folds
2022-10-01 13:06:04,490:INFO:Declaring metric variables
2022-10-01 13:06:04,490:INFO:Importing untrained model
2022-10-01 13:06:04,490:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:06:04,490:INFO:Starting cross validation
2022-10-01 13:06:04,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:04,769:INFO:Calculating mean and std
2022-10-01 13:06:04,770:INFO:Creating metrics dataframe
2022-10-01 13:06:04,773:INFO:Uploading results into container
2022-10-01 13:06:04,774:INFO:Uploading model into container now
2022-10-01 13:06:04,774:INFO:master_model_container: 12
2022-10-01 13:06:04,775:INFO:display_container: 2
2022-10-01 13:06:04,775:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:06:04,775:INFO:create_model() successfully completed......................................
2022-10-01 13:06:04,870:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:04,870:INFO:Creating metrics dataframe
2022-10-01 13:06:04,875:INFO:Initializing Random Forest Regressor
2022-10-01 13:06:04,876:INFO:Total runtime is 0.09589329957962037 minutes
2022-10-01 13:06:04,876:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:04,876:INFO:Initializing create_model()
2022-10-01 13:06:04,876:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:04,876:INFO:Checking exceptions
2022-10-01 13:06:04,878:INFO:Importing libraries
2022-10-01 13:06:04,878:INFO:Copying training dataset
2022-10-01 13:06:04,880:INFO:Defining folds
2022-10-01 13:06:04,880:INFO:Declaring metric variables
2022-10-01 13:06:04,881:INFO:Importing untrained model
2022-10-01 13:06:04,881:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:06:04,882:INFO:Starting cross validation
2022-10-01 13:06:04,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:06,131:INFO:Calculating mean and std
2022-10-01 13:06:06,131:INFO:Creating metrics dataframe
2022-10-01 13:06:06,134:INFO:Uploading results into container
2022-10-01 13:06:06,134:INFO:Uploading model into container now
2022-10-01 13:06:06,135:INFO:master_model_container: 13
2022-10-01 13:06:06,135:INFO:display_container: 2
2022-10-01 13:06:06,135:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:06:06,135:INFO:create_model() successfully completed......................................
2022-10-01 13:06:06,207:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:06,207:INFO:Creating metrics dataframe
2022-10-01 13:06:06,211:INFO:Initializing Extra Trees Regressor
2022-10-01 13:06:06,211:INFO:Total runtime is 0.11813648541768393 minutes
2022-10-01 13:06:06,211:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:06,212:INFO:Initializing create_model()
2022-10-01 13:06:06,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:06,212:INFO:Checking exceptions
2022-10-01 13:06:06,213:INFO:Importing libraries
2022-10-01 13:06:06,213:INFO:Copying training dataset
2022-10-01 13:06:06,214:INFO:Defining folds
2022-10-01 13:06:06,214:INFO:Declaring metric variables
2022-10-01 13:06:06,215:INFO:Importing untrained model
2022-10-01 13:06:06,215:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:06:06,215:INFO:Starting cross validation
2022-10-01 13:06:06,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:07,340:INFO:Calculating mean and std
2022-10-01 13:06:07,341:INFO:Creating metrics dataframe
2022-10-01 13:06:07,343:INFO:Uploading results into container
2022-10-01 13:06:07,343:INFO:Uploading model into container now
2022-10-01 13:06:07,344:INFO:master_model_container: 14
2022-10-01 13:06:07,344:INFO:display_container: 2
2022-10-01 13:06:07,344:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:06:07,344:INFO:create_model() successfully completed......................................
2022-10-01 13:06:07,415:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:07,415:INFO:Creating metrics dataframe
2022-10-01 13:06:07,419:INFO:Initializing AdaBoost Regressor
2022-10-01 13:06:07,419:INFO:Total runtime is 0.13827123244603476 minutes
2022-10-01 13:06:07,419:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:07,419:INFO:Initializing create_model()
2022-10-01 13:06:07,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:07,419:INFO:Checking exceptions
2022-10-01 13:06:07,420:INFO:Importing libraries
2022-10-01 13:06:07,420:INFO:Copying training dataset
2022-10-01 13:06:07,422:INFO:Defining folds
2022-10-01 13:06:07,422:INFO:Declaring metric variables
2022-10-01 13:06:07,422:INFO:Importing untrained model
2022-10-01 13:06:07,422:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:06:07,423:INFO:Starting cross validation
2022-10-01 13:06:07,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:08,084:INFO:Calculating mean and std
2022-10-01 13:06:08,085:INFO:Creating metrics dataframe
2022-10-01 13:06:08,087:INFO:Uploading results into container
2022-10-01 13:06:08,088:INFO:Uploading model into container now
2022-10-01 13:06:08,088:INFO:master_model_container: 15
2022-10-01 13:06:08,088:INFO:display_container: 2
2022-10-01 13:06:08,088:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:06:08,088:INFO:create_model() successfully completed......................................
2022-10-01 13:06:08,162:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:08,162:INFO:Creating metrics dataframe
2022-10-01 13:06:08,166:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:06:08,166:INFO:Total runtime is 0.15071785052617392 minutes
2022-10-01 13:06:08,166:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:08,166:INFO:Initializing create_model()
2022-10-01 13:06:08,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:08,166:INFO:Checking exceptions
2022-10-01 13:06:08,167:INFO:Importing libraries
2022-10-01 13:06:08,167:INFO:Copying training dataset
2022-10-01 13:06:08,169:INFO:Defining folds
2022-10-01 13:06:08,169:INFO:Declaring metric variables
2022-10-01 13:06:08,169:INFO:Importing untrained model
2022-10-01 13:06:08,169:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:06:08,170:INFO:Starting cross validation
2022-10-01 13:06:08,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:08,747:INFO:Calculating mean and std
2022-10-01 13:06:08,748:INFO:Creating metrics dataframe
2022-10-01 13:06:08,750:INFO:Uploading results into container
2022-10-01 13:06:08,750:INFO:Uploading model into container now
2022-10-01 13:06:08,751:INFO:master_model_container: 16
2022-10-01 13:06:08,751:INFO:display_container: 2
2022-10-01 13:06:08,751:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:06:08,751:INFO:create_model() successfully completed......................................
2022-10-01 13:06:08,826:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:08,826:INFO:Creating metrics dataframe
2022-10-01 13:06:08,830:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:06:08,830:INFO:Total runtime is 0.16179788112640384 minutes
2022-10-01 13:06:08,831:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:08,831:INFO:Initializing create_model()
2022-10-01 13:06:08,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:08,831:INFO:Checking exceptions
2022-10-01 13:06:08,832:INFO:Importing libraries
2022-10-01 13:06:08,832:INFO:Copying training dataset
2022-10-01 13:06:08,833:INFO:Defining folds
2022-10-01 13:06:08,833:INFO:Declaring metric variables
2022-10-01 13:06:08,834:INFO:Importing untrained model
2022-10-01 13:06:08,834:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:06:08,834:INFO:Starting cross validation
2022-10-01 13:06:08,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:13,294:INFO:Calculating mean and std
2022-10-01 13:06:13,294:INFO:Creating metrics dataframe
2022-10-01 13:06:13,297:INFO:Uploading results into container
2022-10-01 13:06:13,298:INFO:Uploading model into container now
2022-10-01 13:06:13,298:INFO:master_model_container: 17
2022-10-01 13:06:13,299:INFO:display_container: 2
2022-10-01 13:06:13,299:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:06:13,299:INFO:create_model() successfully completed......................................
2022-10-01 13:06:13,384:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:13,384:INFO:Creating metrics dataframe
2022-10-01 13:06:13,389:INFO:Initializing Dummy Regressor
2022-10-01 13:06:13,389:INFO:Total runtime is 0.23777735233306888 minutes
2022-10-01 13:06:13,390:INFO:SubProcess create_model() called ==================================
2022-10-01 13:06:13,390:INFO:Initializing create_model()
2022-10-01 13:06:13,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000280D1A4CA90>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:13,390:INFO:Checking exceptions
2022-10-01 13:06:13,391:INFO:Importing libraries
2022-10-01 13:06:13,391:INFO:Copying training dataset
2022-10-01 13:06:13,393:INFO:Defining folds
2022-10-01 13:06:13,394:INFO:Declaring metric variables
2022-10-01 13:06:13,394:INFO:Importing untrained model
2022-10-01 13:06:13,394:INFO:Dummy Regressor Imported successfully
2022-10-01 13:06:13,394:INFO:Starting cross validation
2022-10-01 13:06:13,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:13,548:INFO:Calculating mean and std
2022-10-01 13:06:13,549:INFO:Creating metrics dataframe
2022-10-01 13:06:13,551:INFO:Uploading results into container
2022-10-01 13:06:13,552:INFO:Uploading model into container now
2022-10-01 13:06:13,552:INFO:master_model_container: 18
2022-10-01 13:06:13,552:INFO:display_container: 2
2022-10-01 13:06:13,552:INFO:DummyRegressor()
2022-10-01 13:06:13,552:INFO:create_model() successfully completed......................................
2022-10-01 13:06:13,628:INFO:SubProcess create_model() end ==================================
2022-10-01 13:06:13,628:INFO:Creating metrics dataframe
2022-10-01 13:06:13,633:INFO:Initializing create_model()
2022-10-01 13:06:13,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:13,633:INFO:Checking exceptions
2022-10-01 13:06:13,634:INFO:Importing libraries
2022-10-01 13:06:13,635:INFO:Copying training dataset
2022-10-01 13:06:13,636:INFO:Defining folds
2022-10-01 13:06:13,636:INFO:Declaring metric variables
2022-10-01 13:06:13,636:INFO:Importing untrained model
2022-10-01 13:06:13,636:INFO:Declaring custom model
2022-10-01 13:06:13,637:INFO:Linear Regression Imported successfully
2022-10-01 13:06:13,637:INFO:Cross validation set to False
2022-10-01 13:06:13,637:INFO:Fitting Model
2022-10-01 13:06:13,646:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:06:13,646:INFO:create_model() successfully completed......................................
2022-10-01 13:06:13,733:INFO:master_model_container: 18
2022-10-01 13:06:13,733:INFO:display_container: 2
2022-10-01 13:06:13,733:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:06:13,733:INFO:compare_models() successfully completed......................................
2022-10-01 13:06:13,734:INFO:Initializing create_model()
2022-10-01 13:06:13,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:06:13,734:INFO:Checking exceptions
2022-10-01 13:06:13,737:INFO:Importing libraries
2022-10-01 13:06:13,737:INFO:Copying training dataset
2022-10-01 13:06:13,739:INFO:Defining folds
2022-10-01 13:06:13,739:INFO:Declaring metric variables
2022-10-01 13:06:13,739:INFO:Importing untrained model
2022-10-01 13:06:13,739:INFO:Declaring custom model
2022-10-01 13:06:13,739:INFO:Linear Regression Imported successfully
2022-10-01 13:06:13,740:INFO:Starting cross validation
2022-10-01 13:06:13,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:06:13,954:INFO:Calculating mean and std
2022-10-01 13:06:13,955:INFO:Creating metrics dataframe
2022-10-01 13:06:13,956:INFO:Finalizing model
2022-10-01 13:06:13,967:INFO:Uploading results into container
2022-10-01 13:06:13,967:INFO:Uploading model into container now
2022-10-01 13:06:13,976:INFO:master_model_container: 19
2022-10-01 13:06:13,976:INFO:display_container: 3
2022-10-01 13:06:13,976:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:06:13,977:INFO:create_model() successfully completed......................................
2022-10-01 13:06:14,077:INFO:Initializing evaluate_model()
2022-10-01 13:06:14,077:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-10-01 13:06:14,118:INFO:Initializing plot_model()
2022-10-01 13:06:14,118:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, system=True)
2022-10-01 13:06:14,118:INFO:Checking exceptions
2022-10-01 13:06:14,120:INFO:Preloading libraries
2022-10-01 13:06:14,120:INFO:Copying training dataset
2022-10-01 13:06:14,120:INFO:Plot type: pipeline
2022-10-01 13:06:20,737:INFO:Visual Rendered Successfully
2022-10-01 13:06:20,839:INFO:plot_model() successfully completed......................................
2022-10-01 13:06:20,842:INFO:Initializing predict_model()
2022-10-01 13:06:20,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000280C8D1D330>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000280D1B92C20>)
2022-10-01 13:06:20,842:INFO:Checking exceptions
2022-10-01 13:06:20,842:INFO:Preloading libraries
2022-10-01 13:06:20,842:INFO:Set up data.
2022-10-01 13:06:20,846:INFO:Set up index.
2022-10-01 13:06:20,981:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:44: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:07,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:08,425:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:08:09,916:INFO:PyCaret RegressionExperiment
2022-10-01 13:08:09,916:INFO:Logging name: reg-default-name
2022-10-01 13:08:09,916:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:08:09,916:INFO:version 3.0.0.rc4
2022-10-01 13:08:09,917:INFO:Initializing setup()
2022-10-01 13:08:09,917:INFO:self.USI: 8662
2022-10-01 13:08:09,917:INFO:self.variable_keys: {'fold_shuffle_param', '_available_plots', 'pipeline', 'X', 'transform_target_param', 'display_container', 'data', 'logging_param', 'fold_groups_param', 'n_jobs_param', 'y_test', 'transform_target_method_param', 'master_model_container', '_all_models', 'gpu_param', 'X_test', 'idx', '_gpu_n_jobs_param', 'memory', 'target_param', 'y_train', '_ml_usecase', 'html_param', 'fold_generator', 'USI', 'exp_id', '_all_models_internal', 'variable_keys', 'exp_name_log', 'seed', 'log_plots_param', '_all_metrics', 'X_train', 'y'}
2022-10-01 13:08:09,917:INFO:Checking environment
2022-10-01 13:08:09,917:INFO:python_version: 3.10.7
2022-10-01 13:08:09,917:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:08:09,917:INFO:machine: AMD64
2022-10-01 13:08:09,930:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:08:09,930:INFO:Memory: svmem(total=8497213440, available=2150166528, percent=74.7, used=6347046912, free=2150166528)
2022-10-01 13:08:09,930:INFO:Physical Core: 6
2022-10-01 13:08:09,930:INFO:Logical Core: 12
2022-10-01 13:08:09,930:INFO:Checking libraries
2022-10-01 13:08:09,930:INFO:System:
2022-10-01 13:08:09,930:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:08:09,930:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:08:09,930:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:08:09,930:INFO:PyCaret required dependencies:
2022-10-01 13:08:09,930:INFO:                 pip: 22.2.2
2022-10-01 13:08:09,930:INFO:          setuptools: 63.2.0
2022-10-01 13:08:09,930:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:08:09,931:INFO:             IPython: 8.5.0
2022-10-01 13:08:09,931:INFO:          ipywidgets: 8.0.2
2022-10-01 13:08:09,931:INFO:                tqdm: 4.64.1
2022-10-01 13:08:09,931:INFO:               numpy: 1.22.4
2022-10-01 13:08:09,931:INFO:              pandas: 1.4.4
2022-10-01 13:08:09,931:INFO:              jinja2: 3.1.2
2022-10-01 13:08:09,931:INFO:               scipy: 1.8.1
2022-10-01 13:08:09,931:INFO:              joblib: 1.2.0
2022-10-01 13:08:09,931:INFO:             sklearn: 1.1.2
2022-10-01 13:08:09,931:INFO:                pyod: 1.0.5
2022-10-01 13:08:09,931:INFO:            imblearn: 0.9.1
2022-10-01 13:08:09,931:INFO:   category_encoders: 2.5.0
2022-10-01 13:08:09,931:INFO:            lightgbm: 3.3.2
2022-10-01 13:08:09,931:INFO:               numba: 0.55.2
2022-10-01 13:08:09,931:INFO:            requests: 2.28.1
2022-10-01 13:08:09,931:INFO:          matplotlib: 3.6.0
2022-10-01 13:08:09,931:INFO:          scikitplot: 0.3.7
2022-10-01 13:08:09,931:INFO:         yellowbrick: 1.5
2022-10-01 13:08:09,931:INFO:              plotly: 5.10.0
2022-10-01 13:08:09,931:INFO:             kaleido: 0.2.1
2022-10-01 13:08:09,932:INFO:         statsmodels: 0.13.2
2022-10-01 13:08:09,932:INFO:              sktime: 0.13.4
2022-10-01 13:08:09,932:INFO:               tbats: 1.1.0
2022-10-01 13:08:09,932:INFO:            pmdarima: 1.8.5
2022-10-01 13:08:09,932:INFO:              psutil: 5.9.2
2022-10-01 13:08:09,932:INFO:PyCaret optional dependencies:
2022-10-01 13:08:09,946:INFO:                shap: Not installed
2022-10-01 13:08:09,946:INFO:           interpret: Not installed
2022-10-01 13:08:09,946:INFO:                umap: Not installed
2022-10-01 13:08:09,946:INFO:    pandas_profiling: Not installed
2022-10-01 13:08:09,946:INFO:  explainerdashboard: Not installed
2022-10-01 13:08:09,946:INFO:             autoviz: Not installed
2022-10-01 13:08:09,947:INFO:           fairlearn: Not installed
2022-10-01 13:08:09,947:INFO:             xgboost: Not installed
2022-10-01 13:08:09,947:INFO:            catboost: Not installed
2022-10-01 13:08:09,947:INFO:              kmodes: Not installed
2022-10-01 13:08:09,947:INFO:             mlxtend: Not installed
2022-10-01 13:08:09,947:INFO:       statsforecast: Not installed
2022-10-01 13:08:09,947:INFO:        tune_sklearn: Not installed
2022-10-01 13:08:09,947:INFO:                 ray: Not installed
2022-10-01 13:08:09,947:INFO:            hyperopt: Not installed
2022-10-01 13:08:09,947:INFO:              optuna: Not installed
2022-10-01 13:08:09,947:INFO:               skopt: Not installed
2022-10-01 13:08:09,947:INFO:              mlflow: Not installed
2022-10-01 13:08:09,947:INFO:              gradio: Not installed
2022-10-01 13:08:09,947:INFO:             fastapi: Not installed
2022-10-01 13:08:09,947:INFO:             uvicorn: Not installed
2022-10-01 13:08:09,947:INFO:              m2cgen: Not installed
2022-10-01 13:08:09,947:INFO:           evidently: Not installed
2022-10-01 13:08:09,947:INFO:                nltk: Not installed
2022-10-01 13:08:09,947:INFO:            pyLDAvis: Not installed
2022-10-01 13:08:09,948:INFO:              gensim: Not installed
2022-10-01 13:08:09,948:INFO:               spacy: Not installed
2022-10-01 13:08:09,948:INFO:           wordcloud: Not installed
2022-10-01 13:08:09,948:INFO:            textblob: Not installed
2022-10-01 13:08:09,948:INFO:               fugue: Not installed
2022-10-01 13:08:09,948:INFO:           streamlit: Not installed
2022-10-01 13:08:09,948:INFO:             prophet: Not installed
2022-10-01 13:08:09,948:INFO:None
2022-10-01 13:08:09,948:INFO:Set up GPU usage.
2022-10-01 13:08:09,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,948:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:08:09,948:INFO:Set up data.
2022-10-01 13:08:09,952:INFO:Set up train/test split.
2022-10-01 13:08:09,955:INFO:Set up index.
2022-10-01 13:08:09,955:INFO:Set up folding strategy.
2022-10-01 13:08:09,955:INFO:Assigning column types.
2022-10-01 13:08:09,957:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:08:09,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,957:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:08:09,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,962:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:09,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:09,967:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:09,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,067:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:10,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:10,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,650:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,658:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,658:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,667:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:10,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:10,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,116:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:08:11,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,125:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,546:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,546:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,553:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,560:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,644:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:11,977:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:08:11,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:11,992:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:11,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,127:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,509:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:12,795:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:08:12,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,894:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:12,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:12,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:13,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:08:13,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,552:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:08:13,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:13,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:13,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:13,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,055:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:08:14,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,321:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:08:14,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,417:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:14,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:14,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,052:INFO:Preparing preprocessing pipeline...
2022-10-01 13:08:15,053:INFO:Set up simple imputation.
2022-10-01 13:08:15,053:INFO:Set up variance threshold.
2022-10-01 13:08:15,069:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:08:15,076:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:08:15,076:INFO:Creating final display dataframe.
2022-10-01 13:08:15,155:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              8662
2022-10-01 13:08:15,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:08:15,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:08:15,888:INFO:setup() successfully completed in 5.97s...............
2022-10-01 13:08:15,888:INFO:Initializing compare_models()
2022-10-01 13:08:15,888:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:08:15,888:INFO:Checking exceptions
2022-10-01 13:08:15,890:INFO:Preparing display monitor
2022-10-01 13:08:15,893:INFO:Initializing Linear Regression
2022-10-01 13:08:15,893:INFO:Total runtime is 0.0 minutes
2022-10-01 13:08:15,893:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:15,893:INFO:Initializing create_model()
2022-10-01 13:08:15,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:15,894:INFO:Checking exceptions
2022-10-01 13:08:15,895:INFO:Importing libraries
2022-10-01 13:08:15,895:INFO:Copying training dataset
2022-10-01 13:08:15,897:INFO:Defining folds
2022-10-01 13:08:15,897:INFO:Declaring metric variables
2022-10-01 13:08:15,897:INFO:Importing untrained model
2022-10-01 13:08:15,898:INFO:Linear Regression Imported successfully
2022-10-01 13:08:15,898:INFO:Starting cross validation
2022-10-01 13:08:15,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,099:INFO:Calculating mean and std
2022-10-01 13:08:16,100:INFO:Creating metrics dataframe
2022-10-01 13:08:16,102:INFO:Uploading results into container
2022-10-01 13:08:16,102:INFO:Uploading model into container now
2022-10-01 13:08:16,103:INFO:master_model_container: 1
2022-10-01 13:08:16,103:INFO:display_container: 2
2022-10-01 13:08:16,103:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:16,103:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,182:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,182:INFO:Creating metrics dataframe
2022-10-01 13:08:16,185:INFO:Initializing Lasso Regression
2022-10-01 13:08:16,185:INFO:Total runtime is 0.004865928490956625 minutes
2022-10-01 13:08:16,186:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,186:INFO:Initializing create_model()
2022-10-01 13:08:16,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,186:INFO:Checking exceptions
2022-10-01 13:08:16,187:INFO:Importing libraries
2022-10-01 13:08:16,187:INFO:Copying training dataset
2022-10-01 13:08:16,188:INFO:Defining folds
2022-10-01 13:08:16,189:INFO:Declaring metric variables
2022-10-01 13:08:16,189:INFO:Importing untrained model
2022-10-01 13:08:16,189:INFO:Lasso Regression Imported successfully
2022-10-01 13:08:16,189:INFO:Starting cross validation
2022-10-01 13:08:16,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,202:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,220:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,238:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,256:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,274:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,290:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,308:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,326:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,344:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,362:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,370:INFO:Calculating mean and std
2022-10-01 13:08:16,370:INFO:Creating metrics dataframe
2022-10-01 13:08:16,373:INFO:Uploading results into container
2022-10-01 13:08:16,373:INFO:Uploading model into container now
2022-10-01 13:08:16,373:INFO:master_model_container: 2
2022-10-01 13:08:16,373:INFO:display_container: 2
2022-10-01 13:08:16,374:INFO:Lasso(random_state=123)
2022-10-01 13:08:16,374:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,451:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,451:INFO:Creating metrics dataframe
2022-10-01 13:08:16,455:INFO:Initializing Ridge Regression
2022-10-01 13:08:16,455:INFO:Total runtime is 0.009381421407063802 minutes
2022-10-01 13:08:16,455:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,455:INFO:Initializing create_model()
2022-10-01 13:08:16,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,455:INFO:Checking exceptions
2022-10-01 13:08:16,457:INFO:Importing libraries
2022-10-01 13:08:16,457:INFO:Copying training dataset
2022-10-01 13:08:16,458:INFO:Defining folds
2022-10-01 13:08:16,458:INFO:Declaring metric variables
2022-10-01 13:08:16,459:INFO:Importing untrained model
2022-10-01 13:08:16,459:INFO:Ridge Regression Imported successfully
2022-10-01 13:08:16,459:INFO:Starting cross validation
2022-10-01 13:08:16,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,472:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,491:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,509:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,527:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,544:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,562:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,580:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,597:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,615:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,633:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:08:16,641:INFO:Calculating mean and std
2022-10-01 13:08:16,642:INFO:Creating metrics dataframe
2022-10-01 13:08:16,644:INFO:Uploading results into container
2022-10-01 13:08:16,645:INFO:Uploading model into container now
2022-10-01 13:08:16,645:INFO:master_model_container: 3
2022-10-01 13:08:16,645:INFO:display_container: 2
2022-10-01 13:08:16,645:INFO:Ridge(random_state=123)
2022-10-01 13:08:16,645:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,716:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,717:INFO:Creating metrics dataframe
2022-10-01 13:08:16,721:INFO:Initializing Elastic Net
2022-10-01 13:08:16,721:INFO:Total runtime is 0.013813165823618571 minutes
2022-10-01 13:08:16,721:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,721:INFO:Initializing create_model()
2022-10-01 13:08:16,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,721:INFO:Checking exceptions
2022-10-01 13:08:16,722:INFO:Importing libraries
2022-10-01 13:08:16,722:INFO:Copying training dataset
2022-10-01 13:08:16,724:INFO:Defining folds
2022-10-01 13:08:16,724:INFO:Declaring metric variables
2022-10-01 13:08:16,724:INFO:Importing untrained model
2022-10-01 13:08:16,724:INFO:Elastic Net Imported successfully
2022-10-01 13:08:16,725:INFO:Starting cross validation
2022-10-01 13:08:16,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:16,737:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,755:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,773:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,792:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,810:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,828:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,845:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,863:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,881:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,898:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:08:16,906:INFO:Calculating mean and std
2022-10-01 13:08:16,907:INFO:Creating metrics dataframe
2022-10-01 13:08:16,909:INFO:Uploading results into container
2022-10-01 13:08:16,909:INFO:Uploading model into container now
2022-10-01 13:08:16,910:INFO:master_model_container: 4
2022-10-01 13:08:16,910:INFO:display_container: 2
2022-10-01 13:08:16,910:INFO:ElasticNet(random_state=123)
2022-10-01 13:08:16,910:INFO:create_model() successfully completed......................................
2022-10-01 13:08:16,988:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:16,988:INFO:Creating metrics dataframe
2022-10-01 13:08:16,992:INFO:Initializing Least Angle Regression
2022-10-01 13:08:16,992:INFO:Total runtime is 0.018328972657521567 minutes
2022-10-01 13:08:16,992:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:16,992:INFO:Initializing create_model()
2022-10-01 13:08:16,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:16,992:INFO:Checking exceptions
2022-10-01 13:08:16,993:INFO:Importing libraries
2022-10-01 13:08:16,993:INFO:Copying training dataset
2022-10-01 13:08:16,995:INFO:Defining folds
2022-10-01 13:08:16,995:INFO:Declaring metric variables
2022-10-01 13:08:16,995:INFO:Importing untrained model
2022-10-01 13:08:16,995:INFO:Least Angle Regression Imported successfully
2022-10-01 13:08:16,996:INFO:Starting cross validation
2022-10-01 13:08:16,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,007:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,024:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,042:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,060:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,077:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,095:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,112:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,130:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,147:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,164:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,173:INFO:Calculating mean and std
2022-10-01 13:08:17,174:INFO:Creating metrics dataframe
2022-10-01 13:08:17,176:INFO:Uploading results into container
2022-10-01 13:08:17,176:INFO:Uploading model into container now
2022-10-01 13:08:17,177:INFO:master_model_container: 5
2022-10-01 13:08:17,177:INFO:display_container: 2
2022-10-01 13:08:17,177:INFO:Lars(random_state=123)
2022-10-01 13:08:17,177:INFO:create_model() successfully completed......................................
2022-10-01 13:08:17,250:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:17,250:INFO:Creating metrics dataframe
2022-10-01 13:08:17,254:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:08:17,254:INFO:Total runtime is 0.022697432835896814 minutes
2022-10-01 13:08:17,255:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:17,255:INFO:Initializing create_model()
2022-10-01 13:08:17,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:17,255:INFO:Checking exceptions
2022-10-01 13:08:17,256:INFO:Importing libraries
2022-10-01 13:08:17,256:INFO:Copying training dataset
2022-10-01 13:08:17,257:INFO:Defining folds
2022-10-01 13:08:17,257:INFO:Declaring metric variables
2022-10-01 13:08:17,258:INFO:Importing untrained model
2022-10-01 13:08:17,258:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:08:17,258:INFO:Starting cross validation
2022-10-01 13:08:17,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,268:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,286:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,321:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,338:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,355:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,373:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,390:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,407:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,423:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:08:17,431:INFO:Calculating mean and std
2022-10-01 13:08:17,432:INFO:Creating metrics dataframe
2022-10-01 13:08:17,434:INFO:Uploading results into container
2022-10-01 13:08:17,435:INFO:Uploading model into container now
2022-10-01 13:08:17,435:INFO:master_model_container: 6
2022-10-01 13:08:17,435:INFO:display_container: 2
2022-10-01 13:08:17,435:INFO:LassoLars(random_state=123)
2022-10-01 13:08:17,435:INFO:create_model() successfully completed......................................
2022-10-01 13:08:17,509:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:17,509:INFO:Creating metrics dataframe
2022-10-01 13:08:17,513:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:08:17,513:INFO:Total runtime is 0.02701296408971151 minutes
2022-10-01 13:08:17,513:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:17,514:INFO:Initializing create_model()
2022-10-01 13:08:17,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:17,514:INFO:Checking exceptions
2022-10-01 13:08:17,515:INFO:Importing libraries
2022-10-01 13:08:17,515:INFO:Copying training dataset
2022-10-01 13:08:17,516:INFO:Defining folds
2022-10-01 13:08:17,516:INFO:Declaring metric variables
2022-10-01 13:08:17,516:INFO:Importing untrained model
2022-10-01 13:08:17,517:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:08:17,517:INFO:Starting cross validation
2022-10-01 13:08:17,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,527:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,543:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,560:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,577:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,594:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,610:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,627:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,643:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,660:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,677:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:08:17,685:INFO:Calculating mean and std
2022-10-01 13:08:17,686:INFO:Creating metrics dataframe
2022-10-01 13:08:17,688:INFO:Uploading results into container
2022-10-01 13:08:17,688:INFO:Uploading model into container now
2022-10-01 13:08:17,689:INFO:master_model_container: 7
2022-10-01 13:08:17,689:INFO:display_container: 2
2022-10-01 13:08:17,689:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:08:17,689:INFO:create_model() successfully completed......................................
2022-10-01 13:08:17,764:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:17,764:INFO:Creating metrics dataframe
2022-10-01 13:08:17,768:INFO:Initializing Bayesian Ridge
2022-10-01 13:08:17,768:INFO:Total runtime is 0.03126139640808106 minutes
2022-10-01 13:08:17,768:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:17,768:INFO:Initializing create_model()
2022-10-01 13:08:17,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:17,769:INFO:Checking exceptions
2022-10-01 13:08:17,770:INFO:Importing libraries
2022-10-01 13:08:17,770:INFO:Copying training dataset
2022-10-01 13:08:17,771:INFO:Defining folds
2022-10-01 13:08:17,771:INFO:Declaring metric variables
2022-10-01 13:08:17,771:INFO:Importing untrained model
2022-10-01 13:08:17,772:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:08:17,772:INFO:Starting cross validation
2022-10-01 13:08:17,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:17,951:INFO:Calculating mean and std
2022-10-01 13:08:17,951:INFO:Creating metrics dataframe
2022-10-01 13:08:17,954:INFO:Uploading results into container
2022-10-01 13:08:17,954:INFO:Uploading model into container now
2022-10-01 13:08:17,955:INFO:master_model_container: 8
2022-10-01 13:08:17,955:INFO:display_container: 2
2022-10-01 13:08:17,955:INFO:BayesianRidge()
2022-10-01 13:08:17,955:INFO:create_model() successfully completed......................................
2022-10-01 13:08:18,027:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:18,027:INFO:Creating metrics dataframe
2022-10-01 13:08:18,031:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:08:18,031:INFO:Total runtime is 0.03564391136169434 minutes
2022-10-01 13:08:18,031:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:18,031:INFO:Initializing create_model()
2022-10-01 13:08:18,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:18,031:INFO:Checking exceptions
2022-10-01 13:08:18,032:INFO:Importing libraries
2022-10-01 13:08:18,032:INFO:Copying training dataset
2022-10-01 13:08:18,034:INFO:Defining folds
2022-10-01 13:08:18,034:INFO:Declaring metric variables
2022-10-01 13:08:18,034:INFO:Importing untrained model
2022-10-01 13:08:18,034:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:08:18,035:INFO:Starting cross validation
2022-10-01 13:08:18,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:18,206:INFO:Calculating mean and std
2022-10-01 13:08:18,207:INFO:Creating metrics dataframe
2022-10-01 13:08:18,209:INFO:Uploading results into container
2022-10-01 13:08:18,210:INFO:Uploading model into container now
2022-10-01 13:08:18,210:INFO:master_model_container: 9
2022-10-01 13:08:18,210:INFO:display_container: 2
2022-10-01 13:08:18,210:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:08:18,210:INFO:create_model() successfully completed......................................
2022-10-01 13:08:18,283:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:18,283:INFO:Creating metrics dataframe
2022-10-01 13:08:18,286:INFO:Initializing Huber Regressor
2022-10-01 13:08:18,287:INFO:Total runtime is 0.039909434318542485 minutes
2022-10-01 13:08:18,287:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:18,287:INFO:Initializing create_model()
2022-10-01 13:08:18,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:18,287:INFO:Checking exceptions
2022-10-01 13:08:18,288:INFO:Importing libraries
2022-10-01 13:08:18,288:INFO:Copying training dataset
2022-10-01 13:08:18,290:INFO:Defining folds
2022-10-01 13:08:18,290:INFO:Declaring metric variables
2022-10-01 13:08:18,290:INFO:Importing untrained model
2022-10-01 13:08:18,290:INFO:Huber Regressor Imported successfully
2022-10-01 13:08:18,291:INFO:Starting cross validation
2022-10-01 13:08:18,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:18,520:INFO:Calculating mean and std
2022-10-01 13:08:18,522:INFO:Creating metrics dataframe
2022-10-01 13:08:18,524:INFO:Uploading results into container
2022-10-01 13:08:18,524:INFO:Uploading model into container now
2022-10-01 13:08:18,525:INFO:master_model_container: 10
2022-10-01 13:08:18,525:INFO:display_container: 2
2022-10-01 13:08:18,525:INFO:HuberRegressor()
2022-10-01 13:08:18,525:INFO:create_model() successfully completed......................................
2022-10-01 13:08:18,596:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:18,596:INFO:Creating metrics dataframe
2022-10-01 13:08:18,600:INFO:Initializing K Neighbors Regressor
2022-10-01 13:08:18,601:INFO:Total runtime is 0.04513713916142782 minutes
2022-10-01 13:08:18,601:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:18,601:INFO:Initializing create_model()
2022-10-01 13:08:18,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:18,601:INFO:Checking exceptions
2022-10-01 13:08:18,602:INFO:Importing libraries
2022-10-01 13:08:18,602:INFO:Copying training dataset
2022-10-01 13:08:18,604:INFO:Defining folds
2022-10-01 13:08:18,604:INFO:Declaring metric variables
2022-10-01 13:08:18,604:INFO:Importing untrained model
2022-10-01 13:08:18,604:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:08:18,604:INFO:Starting cross validation
2022-10-01 13:08:18,605:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:21,241:INFO:Calculating mean and std
2022-10-01 13:08:21,242:INFO:Creating metrics dataframe
2022-10-01 13:08:21,245:INFO:Uploading results into container
2022-10-01 13:08:21,246:INFO:Uploading model into container now
2022-10-01 13:08:21,246:INFO:master_model_container: 11
2022-10-01 13:08:21,247:INFO:display_container: 2
2022-10-01 13:08:21,247:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:08:21,247:INFO:create_model() successfully completed......................................
2022-10-01 13:08:21,358:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:21,358:INFO:Creating metrics dataframe
2022-10-01 13:08:21,363:INFO:Initializing Decision Tree Regressor
2022-10-01 13:08:21,363:INFO:Total runtime is 0.09117413759231568 minutes
2022-10-01 13:08:21,364:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:21,364:INFO:Initializing create_model()
2022-10-01 13:08:21,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:21,364:INFO:Checking exceptions
2022-10-01 13:08:21,366:INFO:Importing libraries
2022-10-01 13:08:21,366:INFO:Copying training dataset
2022-10-01 13:08:21,368:INFO:Defining folds
2022-10-01 13:08:21,368:INFO:Declaring metric variables
2022-10-01 13:08:21,369:INFO:Importing untrained model
2022-10-01 13:08:21,369:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:08:21,369:INFO:Starting cross validation
2022-10-01 13:08:21,370:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:21,623:INFO:Calculating mean and std
2022-10-01 13:08:21,624:INFO:Creating metrics dataframe
2022-10-01 13:08:21,628:INFO:Uploading results into container
2022-10-01 13:08:21,629:INFO:Uploading model into container now
2022-10-01 13:08:21,629:INFO:master_model_container: 12
2022-10-01 13:08:21,629:INFO:display_container: 2
2022-10-01 13:08:21,630:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:08:21,630:INFO:create_model() successfully completed......................................
2022-10-01 13:08:21,748:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:21,748:INFO:Creating metrics dataframe
2022-10-01 13:08:21,754:INFO:Initializing Random Forest Regressor
2022-10-01 13:08:21,754:INFO:Total runtime is 0.09768903652826946 minutes
2022-10-01 13:08:21,754:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:21,754:INFO:Initializing create_model()
2022-10-01 13:08:21,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:21,755:INFO:Checking exceptions
2022-10-01 13:08:21,756:INFO:Importing libraries
2022-10-01 13:08:21,756:INFO:Copying training dataset
2022-10-01 13:08:21,759:INFO:Defining folds
2022-10-01 13:08:21,759:INFO:Declaring metric variables
2022-10-01 13:08:21,759:INFO:Importing untrained model
2022-10-01 13:08:21,760:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:08:21,760:INFO:Starting cross validation
2022-10-01 13:08:21,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:23,086:INFO:Calculating mean and std
2022-10-01 13:08:23,087:INFO:Creating metrics dataframe
2022-10-01 13:08:23,089:INFO:Uploading results into container
2022-10-01 13:08:23,089:INFO:Uploading model into container now
2022-10-01 13:08:23,090:INFO:master_model_container: 13
2022-10-01 13:08:23,090:INFO:display_container: 2
2022-10-01 13:08:23,090:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:08:23,090:INFO:create_model() successfully completed......................................
2022-10-01 13:08:23,162:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:23,162:INFO:Creating metrics dataframe
2022-10-01 13:08:23,166:INFO:Initializing Extra Trees Regressor
2022-10-01 13:08:23,166:INFO:Total runtime is 0.12122886180877687 minutes
2022-10-01 13:08:23,166:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:23,166:INFO:Initializing create_model()
2022-10-01 13:08:23,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:23,166:INFO:Checking exceptions
2022-10-01 13:08:23,167:INFO:Importing libraries
2022-10-01 13:08:23,167:INFO:Copying training dataset
2022-10-01 13:08:23,169:INFO:Defining folds
2022-10-01 13:08:23,169:INFO:Declaring metric variables
2022-10-01 13:08:23,169:INFO:Importing untrained model
2022-10-01 13:08:23,169:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:08:23,170:INFO:Starting cross validation
2022-10-01 13:08:23,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:24,294:INFO:Calculating mean and std
2022-10-01 13:08:24,295:INFO:Creating metrics dataframe
2022-10-01 13:08:24,297:INFO:Uploading results into container
2022-10-01 13:08:24,298:INFO:Uploading model into container now
2022-10-01 13:08:24,298:INFO:master_model_container: 14
2022-10-01 13:08:24,298:INFO:display_container: 2
2022-10-01 13:08:24,298:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:08:24,298:INFO:create_model() successfully completed......................................
2022-10-01 13:08:24,371:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:24,371:INFO:Creating metrics dataframe
2022-10-01 13:08:24,375:INFO:Initializing AdaBoost Regressor
2022-10-01 13:08:24,375:INFO:Total runtime is 0.14137912193934124 minutes
2022-10-01 13:08:24,375:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:24,375:INFO:Initializing create_model()
2022-10-01 13:08:24,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:24,375:INFO:Checking exceptions
2022-10-01 13:08:24,376:INFO:Importing libraries
2022-10-01 13:08:24,376:INFO:Copying training dataset
2022-10-01 13:08:24,378:INFO:Defining folds
2022-10-01 13:08:24,378:INFO:Declaring metric variables
2022-10-01 13:08:24,378:INFO:Importing untrained model
2022-10-01 13:08:24,378:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:08:24,378:INFO:Starting cross validation
2022-10-01 13:08:24,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:25,038:INFO:Calculating mean and std
2022-10-01 13:08:25,038:INFO:Creating metrics dataframe
2022-10-01 13:08:25,041:INFO:Uploading results into container
2022-10-01 13:08:25,041:INFO:Uploading model into container now
2022-10-01 13:08:25,042:INFO:master_model_container: 15
2022-10-01 13:08:25,042:INFO:display_container: 2
2022-10-01 13:08:25,042:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:08:25,042:INFO:create_model() successfully completed......................................
2022-10-01 13:08:25,114:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:25,114:INFO:Creating metrics dataframe
2022-10-01 13:08:25,118:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:08:25,118:INFO:Total runtime is 0.15375872850418093 minutes
2022-10-01 13:08:25,118:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:25,119:INFO:Initializing create_model()
2022-10-01 13:08:25,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:25,119:INFO:Checking exceptions
2022-10-01 13:08:25,120:INFO:Importing libraries
2022-10-01 13:08:25,120:INFO:Copying training dataset
2022-10-01 13:08:25,121:INFO:Defining folds
2022-10-01 13:08:25,121:INFO:Declaring metric variables
2022-10-01 13:08:25,122:INFO:Importing untrained model
2022-10-01 13:08:25,122:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:08:25,122:INFO:Starting cross validation
2022-10-01 13:08:25,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:25,693:INFO:Calculating mean and std
2022-10-01 13:08:25,694:INFO:Creating metrics dataframe
2022-10-01 13:08:25,697:INFO:Uploading results into container
2022-10-01 13:08:25,697:INFO:Uploading model into container now
2022-10-01 13:08:25,697:INFO:master_model_container: 16
2022-10-01 13:08:25,697:INFO:display_container: 2
2022-10-01 13:08:25,698:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:08:25,698:INFO:create_model() successfully completed......................................
2022-10-01 13:08:25,769:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:25,769:INFO:Creating metrics dataframe
2022-10-01 13:08:25,773:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:08:25,773:INFO:Total runtime is 0.16467247406641644 minutes
2022-10-01 13:08:25,774:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:25,774:INFO:Initializing create_model()
2022-10-01 13:08:25,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:25,774:INFO:Checking exceptions
2022-10-01 13:08:25,775:INFO:Importing libraries
2022-10-01 13:08:25,775:INFO:Copying training dataset
2022-10-01 13:08:25,776:INFO:Defining folds
2022-10-01 13:08:25,776:INFO:Declaring metric variables
2022-10-01 13:08:25,777:INFO:Importing untrained model
2022-10-01 13:08:25,777:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:08:25,777:INFO:Starting cross validation
2022-10-01 13:08:25,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:30,177:INFO:Calculating mean and std
2022-10-01 13:08:30,177:INFO:Creating metrics dataframe
2022-10-01 13:08:30,180:INFO:Uploading results into container
2022-10-01 13:08:30,181:INFO:Uploading model into container now
2022-10-01 13:08:30,181:INFO:master_model_container: 17
2022-10-01 13:08:30,181:INFO:display_container: 2
2022-10-01 13:08:30,182:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:08:30,182:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,265:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:30,265:INFO:Creating metrics dataframe
2022-10-01 13:08:30,270:INFO:Initializing Dummy Regressor
2022-10-01 13:08:30,270:INFO:Total runtime is 0.23962361812591554 minutes
2022-10-01 13:08:30,270:INFO:SubProcess create_model() called ==================================
2022-10-01 13:08:30,271:INFO:Initializing create_model()
2022-10-01 13:08:30,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D0D050A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:30,271:INFO:Checking exceptions
2022-10-01 13:08:30,272:INFO:Importing libraries
2022-10-01 13:08:30,272:INFO:Copying training dataset
2022-10-01 13:08:30,274:INFO:Defining folds
2022-10-01 13:08:30,274:INFO:Declaring metric variables
2022-10-01 13:08:30,275:INFO:Importing untrained model
2022-10-01 13:08:30,275:INFO:Dummy Regressor Imported successfully
2022-10-01 13:08:30,275:INFO:Starting cross validation
2022-10-01 13:08:30,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:30,426:INFO:Calculating mean and std
2022-10-01 13:08:30,427:INFO:Creating metrics dataframe
2022-10-01 13:08:30,429:INFO:Uploading results into container
2022-10-01 13:08:30,429:INFO:Uploading model into container now
2022-10-01 13:08:30,430:INFO:master_model_container: 18
2022-10-01 13:08:30,430:INFO:display_container: 2
2022-10-01 13:08:30,430:INFO:DummyRegressor()
2022-10-01 13:08:30,430:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,503:INFO:SubProcess create_model() end ==================================
2022-10-01 13:08:30,503:INFO:Creating metrics dataframe
2022-10-01 13:08:30,508:INFO:Initializing create_model()
2022-10-01 13:08:30,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:30,508:INFO:Checking exceptions
2022-10-01 13:08:30,510:INFO:Importing libraries
2022-10-01 13:08:30,510:INFO:Copying training dataset
2022-10-01 13:08:30,511:INFO:Defining folds
2022-10-01 13:08:30,511:INFO:Declaring metric variables
2022-10-01 13:08:30,511:INFO:Importing untrained model
2022-10-01 13:08:30,512:INFO:Declaring custom model
2022-10-01 13:08:30,512:INFO:Linear Regression Imported successfully
2022-10-01 13:08:30,512:INFO:Cross validation set to False
2022-10-01 13:08:30,512:INFO:Fitting Model
2022-10-01 13:08:30,521:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:30,521:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,606:INFO:master_model_container: 18
2022-10-01 13:08:30,606:INFO:display_container: 2
2022-10-01 13:08:30,606:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:30,606:INFO:compare_models() successfully completed......................................
2022-10-01 13:08:30,606:INFO:Initializing create_model()
2022-10-01 13:08:30,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:08:30,607:INFO:Checking exceptions
2022-10-01 13:08:30,610:INFO:Importing libraries
2022-10-01 13:08:30,610:INFO:Copying training dataset
2022-10-01 13:08:30,613:INFO:Defining folds
2022-10-01 13:08:30,613:INFO:Declaring metric variables
2022-10-01 13:08:30,613:INFO:Importing untrained model
2022-10-01 13:08:30,613:INFO:Declaring custom model
2022-10-01 13:08:30,614:INFO:Linear Regression Imported successfully
2022-10-01 13:08:30,614:INFO:Starting cross validation
2022-10-01 13:08:30,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:08:30,820:INFO:Calculating mean and std
2022-10-01 13:08:30,821:INFO:Creating metrics dataframe
2022-10-01 13:08:30,822:INFO:Finalizing model
2022-10-01 13:08:30,833:INFO:Uploading results into container
2022-10-01 13:08:30,833:INFO:Uploading model into container now
2022-10-01 13:08:30,842:INFO:master_model_container: 19
2022-10-01 13:08:30,842:INFO:display_container: 3
2022-10-01 13:08:30,842:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:08:30,842:INFO:create_model() successfully completed......................................
2022-10-01 13:08:30,941:INFO:Initializing predict_model()
2022-10-01 13:08:30,941:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021D04324F40>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021D046BB6D0>)
2022-10-01 13:08:30,941:INFO:Checking exceptions
2022-10-01 13:08:30,941:INFO:Preloading libraries
2022-10-01 13:08:30,941:INFO:Set up data.
2022-10-01 13:08:30,945:INFO:Set up index.
2022-10-01 13:08:31,075:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:09:48,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:48,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:48,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:48,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:49,588:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:09:51,116:INFO:PyCaret RegressionExperiment
2022-10-01 13:09:51,116:INFO:Logging name: reg-default-name
2022-10-01 13:09:51,116:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:09:51,116:INFO:version 3.0.0.rc4
2022-10-01 13:09:51,116:INFO:Initializing setup()
2022-10-01 13:09:51,116:INFO:self.USI: df73
2022-10-01 13:09:51,116:INFO:self.variable_keys: {'variable_keys', 'display_container', 'y_test', 'USI', 'seed', '_available_plots', 'data', '_all_metrics', 'exp_name_log', 'memory', 'fold_groups_param', 'fold_shuffle_param', 'X_test', 'target_param', '_all_models_internal', 'transform_target_method_param', '_gpu_n_jobs_param', 'y_train', 'X', 'fold_generator', 'n_jobs_param', 'master_model_container', 'gpu_param', '_all_models', 'exp_id', 'pipeline', 'logging_param', 'y', 'idx', 'html_param', 'log_plots_param', 'X_train', 'transform_target_param', '_ml_usecase'}
2022-10-01 13:09:51,116:INFO:Checking environment
2022-10-01 13:09:51,116:INFO:python_version: 3.10.7
2022-10-01 13:09:51,117:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:09:51,117:INFO:machine: AMD64
2022-10-01 13:09:51,128:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:09:51,128:INFO:Memory: svmem(total=8497213440, available=2144919552, percent=74.8, used=6352293888, free=2144919552)
2022-10-01 13:09:51,128:INFO:Physical Core: 6
2022-10-01 13:09:51,128:INFO:Logical Core: 12
2022-10-01 13:09:51,128:INFO:Checking libraries
2022-10-01 13:09:51,128:INFO:System:
2022-10-01 13:09:51,128:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:09:51,128:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:09:51,128:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:09:51,128:INFO:PyCaret required dependencies:
2022-10-01 13:09:51,128:INFO:                 pip: 22.2.2
2022-10-01 13:09:51,128:INFO:          setuptools: 63.2.0
2022-10-01 13:09:51,128:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:09:51,128:INFO:             IPython: 8.5.0
2022-10-01 13:09:51,128:INFO:          ipywidgets: 8.0.2
2022-10-01 13:09:51,129:INFO:                tqdm: 4.64.1
2022-10-01 13:09:51,129:INFO:               numpy: 1.22.4
2022-10-01 13:09:51,129:INFO:              pandas: 1.4.4
2022-10-01 13:09:51,129:INFO:              jinja2: 3.1.2
2022-10-01 13:09:51,129:INFO:               scipy: 1.8.1
2022-10-01 13:09:51,129:INFO:              joblib: 1.2.0
2022-10-01 13:09:51,129:INFO:             sklearn: 1.1.2
2022-10-01 13:09:51,129:INFO:                pyod: 1.0.5
2022-10-01 13:09:51,129:INFO:            imblearn: 0.9.1
2022-10-01 13:09:51,129:INFO:   category_encoders: 2.5.0
2022-10-01 13:09:51,129:INFO:            lightgbm: 3.3.2
2022-10-01 13:09:51,129:INFO:               numba: 0.55.2
2022-10-01 13:09:51,129:INFO:            requests: 2.28.1
2022-10-01 13:09:51,129:INFO:          matplotlib: 3.6.0
2022-10-01 13:09:51,129:INFO:          scikitplot: 0.3.7
2022-10-01 13:09:51,129:INFO:         yellowbrick: 1.5
2022-10-01 13:09:51,129:INFO:              plotly: 5.10.0
2022-10-01 13:09:51,129:INFO:             kaleido: 0.2.1
2022-10-01 13:09:51,129:INFO:         statsmodels: 0.13.2
2022-10-01 13:09:51,129:INFO:              sktime: 0.13.4
2022-10-01 13:09:51,129:INFO:               tbats: 1.1.0
2022-10-01 13:09:51,129:INFO:            pmdarima: 1.8.5
2022-10-01 13:09:51,129:INFO:              psutil: 5.9.2
2022-10-01 13:09:51,130:INFO:PyCaret optional dependencies:
2022-10-01 13:09:51,144:INFO:                shap: Not installed
2022-10-01 13:09:51,144:INFO:           interpret: Not installed
2022-10-01 13:09:51,144:INFO:                umap: Not installed
2022-10-01 13:09:51,144:INFO:    pandas_profiling: Not installed
2022-10-01 13:09:51,144:INFO:  explainerdashboard: Not installed
2022-10-01 13:09:51,144:INFO:             autoviz: Not installed
2022-10-01 13:09:51,144:INFO:           fairlearn: Not installed
2022-10-01 13:09:51,145:INFO:             xgboost: Not installed
2022-10-01 13:09:51,145:INFO:            catboost: Not installed
2022-10-01 13:09:51,145:INFO:              kmodes: Not installed
2022-10-01 13:09:51,145:INFO:             mlxtend: Not installed
2022-10-01 13:09:51,145:INFO:       statsforecast: Not installed
2022-10-01 13:09:51,145:INFO:        tune_sklearn: Not installed
2022-10-01 13:09:51,145:INFO:                 ray: Not installed
2022-10-01 13:09:51,145:INFO:            hyperopt: Not installed
2022-10-01 13:09:51,145:INFO:              optuna: Not installed
2022-10-01 13:09:51,145:INFO:               skopt: Not installed
2022-10-01 13:09:51,145:INFO:              mlflow: Not installed
2022-10-01 13:09:51,145:INFO:              gradio: Not installed
2022-10-01 13:09:51,145:INFO:             fastapi: Not installed
2022-10-01 13:09:51,145:INFO:             uvicorn: Not installed
2022-10-01 13:09:51,145:INFO:              m2cgen: Not installed
2022-10-01 13:09:51,145:INFO:           evidently: Not installed
2022-10-01 13:09:51,146:INFO:                nltk: Not installed
2022-10-01 13:09:51,146:INFO:            pyLDAvis: Not installed
2022-10-01 13:09:51,146:INFO:              gensim: Not installed
2022-10-01 13:09:51,146:INFO:               spacy: Not installed
2022-10-01 13:09:51,146:INFO:           wordcloud: Not installed
2022-10-01 13:09:51,146:INFO:            textblob: Not installed
2022-10-01 13:09:51,146:INFO:               fugue: Not installed
2022-10-01 13:09:51,146:INFO:           streamlit: Not installed
2022-10-01 13:09:51,146:INFO:             prophet: Not installed
2022-10-01 13:09:51,146:INFO:None
2022-10-01 13:09:51,146:INFO:Set up GPU usage.
2022-10-01 13:09:51,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,146:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:09:51,146:INFO:Set up data.
2022-10-01 13:09:51,150:INFO:Set up train/test split.
2022-10-01 13:09:51,152:INFO:Set up index.
2022-10-01 13:09:51,152:INFO:Set up folding strategy.
2022-10-01 13:09:51,153:INFO:Assigning column types.
2022-10-01 13:09:51,155:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:09:51,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,155:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,160:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,165:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,221:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,631:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,638:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,645:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:51,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:51,999:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:09:51,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:51,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,007:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,014:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,098:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,380:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,386:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,469:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:52,752:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:09:52,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,767:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,851:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:52,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:52,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,140:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,501:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:09:53,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:53,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:53,997:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:53,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:09:54,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,254:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:09:54,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,353:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:54,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:54,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:09:54,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:54,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,021:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:09:55,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:55,780:INFO:Preparing preprocessing pipeline...
2022-10-01 13:09:55,781:INFO:Set up simple imputation.
2022-10-01 13:09:55,781:INFO:Set up variance threshold.
2022-10-01 13:09:55,796:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:09:55,803:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:09:55,803:INFO:Creating final display dataframe.
2022-10-01 13:09:55,881:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              df73
2022-10-01 13:09:55,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:55,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:09:56,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:09:56,588:INFO:setup() successfully completed in 5.47s...............
2022-10-01 13:09:56,588:INFO:Initializing compare_models()
2022-10-01 13:09:56,589:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:09:56,589:INFO:Checking exceptions
2022-10-01 13:09:56,590:INFO:Preparing display monitor
2022-10-01 13:09:56,593:INFO:Initializing Linear Regression
2022-10-01 13:09:56,593:INFO:Total runtime is 0.0 minutes
2022-10-01 13:09:56,593:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:56,594:INFO:Initializing create_model()
2022-10-01 13:09:56,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:56,594:INFO:Checking exceptions
2022-10-01 13:09:56,595:INFO:Importing libraries
2022-10-01 13:09:56,595:INFO:Copying training dataset
2022-10-01 13:09:56,597:INFO:Defining folds
2022-10-01 13:09:56,597:INFO:Declaring metric variables
2022-10-01 13:09:56,597:INFO:Importing untrained model
2022-10-01 13:09:56,598:INFO:Linear Regression Imported successfully
2022-10-01 13:09:56,598:INFO:Starting cross validation
2022-10-01 13:09:56,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:56,801:INFO:Calculating mean and std
2022-10-01 13:09:56,802:INFO:Creating metrics dataframe
2022-10-01 13:09:56,805:INFO:Uploading results into container
2022-10-01 13:09:56,805:INFO:Uploading model into container now
2022-10-01 13:09:56,806:INFO:master_model_container: 1
2022-10-01 13:09:56,806:INFO:display_container: 2
2022-10-01 13:09:56,806:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:09:56,806:INFO:create_model() successfully completed......................................
2022-10-01 13:09:56,880:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:56,880:INFO:Creating metrics dataframe
2022-10-01 13:09:56,883:INFO:Initializing Lasso Regression
2022-10-01 13:09:56,884:INFO:Total runtime is 0.0048493146896362305 minutes
2022-10-01 13:09:56,884:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:56,884:INFO:Initializing create_model()
2022-10-01 13:09:56,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:56,884:INFO:Checking exceptions
2022-10-01 13:09:56,885:INFO:Importing libraries
2022-10-01 13:09:56,885:INFO:Copying training dataset
2022-10-01 13:09:56,887:INFO:Defining folds
2022-10-01 13:09:56,887:INFO:Declaring metric variables
2022-10-01 13:09:56,887:INFO:Importing untrained model
2022-10-01 13:09:56,887:INFO:Lasso Regression Imported successfully
2022-10-01 13:09:56,888:INFO:Starting cross validation
2022-10-01 13:09:56,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:56,900:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,918:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,935:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,952:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,969:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:56,987:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,004:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,022:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,039:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,057:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,064:INFO:Calculating mean and std
2022-10-01 13:09:57,065:INFO:Creating metrics dataframe
2022-10-01 13:09:57,068:INFO:Uploading results into container
2022-10-01 13:09:57,069:INFO:Uploading model into container now
2022-10-01 13:09:57,069:INFO:master_model_container: 2
2022-10-01 13:09:57,069:INFO:display_container: 2
2022-10-01 13:09:57,069:INFO:Lasso(random_state=123)
2022-10-01 13:09:57,069:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,143:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,143:INFO:Creating metrics dataframe
2022-10-01 13:09:57,147:INFO:Initializing Ridge Regression
2022-10-01 13:09:57,147:INFO:Total runtime is 0.009248085816701253 minutes
2022-10-01 13:09:57,147:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,148:INFO:Initializing create_model()
2022-10-01 13:09:57,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,148:INFO:Checking exceptions
2022-10-01 13:09:57,149:INFO:Importing libraries
2022-10-01 13:09:57,149:INFO:Copying training dataset
2022-10-01 13:09:57,150:INFO:Defining folds
2022-10-01 13:09:57,150:INFO:Declaring metric variables
2022-10-01 13:09:57,151:INFO:Importing untrained model
2022-10-01 13:09:57,151:INFO:Ridge Regression Imported successfully
2022-10-01 13:09:57,151:INFO:Starting cross validation
2022-10-01 13:09:57,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,163:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,180:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,197:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,214:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,231:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,248:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,265:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,281:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,298:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,315:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:09:57,323:INFO:Calculating mean and std
2022-10-01 13:09:57,324:INFO:Creating metrics dataframe
2022-10-01 13:09:57,326:INFO:Uploading results into container
2022-10-01 13:09:57,326:INFO:Uploading model into container now
2022-10-01 13:09:57,327:INFO:master_model_container: 3
2022-10-01 13:09:57,327:INFO:display_container: 2
2022-10-01 13:09:57,327:INFO:Ridge(random_state=123)
2022-10-01 13:09:57,327:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,399:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,399:INFO:Creating metrics dataframe
2022-10-01 13:09:57,403:INFO:Initializing Elastic Net
2022-10-01 13:09:57,403:INFO:Total runtime is 0.013513620694478354 minutes
2022-10-01 13:09:57,403:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,404:INFO:Initializing create_model()
2022-10-01 13:09:57,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,404:INFO:Checking exceptions
2022-10-01 13:09:57,405:INFO:Importing libraries
2022-10-01 13:09:57,405:INFO:Copying training dataset
2022-10-01 13:09:57,406:INFO:Defining folds
2022-10-01 13:09:57,406:INFO:Declaring metric variables
2022-10-01 13:09:57,407:INFO:Importing untrained model
2022-10-01 13:09:57,407:INFO:Elastic Net Imported successfully
2022-10-01 13:09:57,407:INFO:Starting cross validation
2022-10-01 13:09:57,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,419:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,437:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,455:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,472:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,490:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,507:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,524:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,542:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,559:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,576:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:09:57,583:INFO:Calculating mean and std
2022-10-01 13:09:57,584:INFO:Creating metrics dataframe
2022-10-01 13:09:57,586:INFO:Uploading results into container
2022-10-01 13:09:57,587:INFO:Uploading model into container now
2022-10-01 13:09:57,587:INFO:master_model_container: 4
2022-10-01 13:09:57,587:INFO:display_container: 2
2022-10-01 13:09:57,587:INFO:ElasticNet(random_state=123)
2022-10-01 13:09:57,587:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,660:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,660:INFO:Creating metrics dataframe
2022-10-01 13:09:57,664:INFO:Initializing Least Angle Regression
2022-10-01 13:09:57,664:INFO:Total runtime is 0.01786251465479533 minutes
2022-10-01 13:09:57,664:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,664:INFO:Initializing create_model()
2022-10-01 13:09:57,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,664:INFO:Checking exceptions
2022-10-01 13:09:57,665:INFO:Importing libraries
2022-10-01 13:09:57,665:INFO:Copying training dataset
2022-10-01 13:09:57,667:INFO:Defining folds
2022-10-01 13:09:57,667:INFO:Declaring metric variables
2022-10-01 13:09:57,667:INFO:Importing untrained model
2022-10-01 13:09:57,667:INFO:Least Angle Regression Imported successfully
2022-10-01 13:09:57,668:INFO:Starting cross validation
2022-10-01 13:09:57,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,679:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,697:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,715:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,733:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,751:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,769:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,786:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,804:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,821:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,839:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:57,847:INFO:Calculating mean and std
2022-10-01 13:09:57,848:INFO:Creating metrics dataframe
2022-10-01 13:09:57,850:INFO:Uploading results into container
2022-10-01 13:09:57,850:INFO:Uploading model into container now
2022-10-01 13:09:57,851:INFO:master_model_container: 5
2022-10-01 13:09:57,851:INFO:display_container: 2
2022-10-01 13:09:57,851:INFO:Lars(random_state=123)
2022-10-01 13:09:57,851:INFO:create_model() successfully completed......................................
2022-10-01 13:09:57,923:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:57,923:INFO:Creating metrics dataframe
2022-10-01 13:09:57,927:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:09:57,927:INFO:Total runtime is 0.022244664033253987 minutes
2022-10-01 13:09:57,927:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:57,927:INFO:Initializing create_model()
2022-10-01 13:09:57,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:57,927:INFO:Checking exceptions
2022-10-01 13:09:57,928:INFO:Importing libraries
2022-10-01 13:09:57,928:INFO:Copying training dataset
2022-10-01 13:09:57,930:INFO:Defining folds
2022-10-01 13:09:57,930:INFO:Declaring metric variables
2022-10-01 13:09:57,930:INFO:Importing untrained model
2022-10-01 13:09:57,930:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:09:57,930:INFO:Starting cross validation
2022-10-01 13:09:57,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:57,941:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:57,958:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:57,977:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:57,996:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,014:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,032:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,050:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,068:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,085:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,103:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:09:58,111:INFO:Calculating mean and std
2022-10-01 13:09:58,112:INFO:Creating metrics dataframe
2022-10-01 13:09:58,114:INFO:Uploading results into container
2022-10-01 13:09:58,115:INFO:Uploading model into container now
2022-10-01 13:09:58,115:INFO:master_model_container: 6
2022-10-01 13:09:58,115:INFO:display_container: 2
2022-10-01 13:09:58,115:INFO:LassoLars(random_state=123)
2022-10-01 13:09:58,115:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,186:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,186:INFO:Creating metrics dataframe
2022-10-01 13:09:58,190:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:09:58,190:INFO:Total runtime is 0.026626821358998617 minutes
2022-10-01 13:09:58,190:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,191:INFO:Initializing create_model()
2022-10-01 13:09:58,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,191:INFO:Checking exceptions
2022-10-01 13:09:58,192:INFO:Importing libraries
2022-10-01 13:09:58,192:INFO:Copying training dataset
2022-10-01 13:09:58,193:INFO:Defining folds
2022-10-01 13:09:58,193:INFO:Declaring metric variables
2022-10-01 13:09:58,193:INFO:Importing untrained model
2022-10-01 13:09:58,194:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:09:58,194:INFO:Starting cross validation
2022-10-01 13:09:58,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:58,203:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,220:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,237:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,253:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,270:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,287:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,320:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,337:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,353:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:09:58,362:INFO:Calculating mean and std
2022-10-01 13:09:58,362:INFO:Creating metrics dataframe
2022-10-01 13:09:58,365:INFO:Uploading results into container
2022-10-01 13:09:58,365:INFO:Uploading model into container now
2022-10-01 13:09:58,365:INFO:master_model_container: 7
2022-10-01 13:09:58,366:INFO:display_container: 2
2022-10-01 13:09:58,366:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:09:58,366:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,438:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,438:INFO:Creating metrics dataframe
2022-10-01 13:09:58,442:INFO:Initializing Bayesian Ridge
2022-10-01 13:09:58,442:INFO:Total runtime is 0.030825102329254152 minutes
2022-10-01 13:09:58,442:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,442:INFO:Initializing create_model()
2022-10-01 13:09:58,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,442:INFO:Checking exceptions
2022-10-01 13:09:58,443:INFO:Importing libraries
2022-10-01 13:09:58,443:INFO:Copying training dataset
2022-10-01 13:09:58,445:INFO:Defining folds
2022-10-01 13:09:58,445:INFO:Declaring metric variables
2022-10-01 13:09:58,445:INFO:Importing untrained model
2022-10-01 13:09:58,445:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:09:58,446:INFO:Starting cross validation
2022-10-01 13:09:58,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:58,617:INFO:Calculating mean and std
2022-10-01 13:09:58,617:INFO:Creating metrics dataframe
2022-10-01 13:09:58,620:INFO:Uploading results into container
2022-10-01 13:09:58,620:INFO:Uploading model into container now
2022-10-01 13:09:58,620:INFO:master_model_container: 8
2022-10-01 13:09:58,620:INFO:display_container: 2
2022-10-01 13:09:58,621:INFO:BayesianRidge()
2022-10-01 13:09:58,621:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,694:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,694:INFO:Creating metrics dataframe
2022-10-01 13:09:58,698:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:09:58,698:INFO:Total runtime is 0.03509122927983602 minutes
2022-10-01 13:09:58,698:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,698:INFO:Initializing create_model()
2022-10-01 13:09:58,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,699:INFO:Checking exceptions
2022-10-01 13:09:58,700:INFO:Importing libraries
2022-10-01 13:09:58,700:INFO:Copying training dataset
2022-10-01 13:09:58,701:INFO:Defining folds
2022-10-01 13:09:58,701:INFO:Declaring metric variables
2022-10-01 13:09:58,701:INFO:Importing untrained model
2022-10-01 13:09:58,702:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:09:58,702:INFO:Starting cross validation
2022-10-01 13:09:58,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:58,875:INFO:Calculating mean and std
2022-10-01 13:09:58,876:INFO:Creating metrics dataframe
2022-10-01 13:09:58,878:INFO:Uploading results into container
2022-10-01 13:09:58,878:INFO:Uploading model into container now
2022-10-01 13:09:58,879:INFO:master_model_container: 9
2022-10-01 13:09:58,879:INFO:display_container: 2
2022-10-01 13:09:58,879:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:09:58,879:INFO:create_model() successfully completed......................................
2022-10-01 13:09:58,952:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:58,952:INFO:Creating metrics dataframe
2022-10-01 13:09:58,956:INFO:Initializing Huber Regressor
2022-10-01 13:09:58,956:INFO:Total runtime is 0.03938958644866943 minutes
2022-10-01 13:09:58,956:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:58,956:INFO:Initializing create_model()
2022-10-01 13:09:58,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:58,957:INFO:Checking exceptions
2022-10-01 13:09:58,957:INFO:Importing libraries
2022-10-01 13:09:58,958:INFO:Copying training dataset
2022-10-01 13:09:58,959:INFO:Defining folds
2022-10-01 13:09:58,959:INFO:Declaring metric variables
2022-10-01 13:09:58,959:INFO:Importing untrained model
2022-10-01 13:09:58,960:INFO:Huber Regressor Imported successfully
2022-10-01 13:09:58,960:INFO:Starting cross validation
2022-10-01 13:09:58,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:09:59,184:INFO:Calculating mean and std
2022-10-01 13:09:59,185:INFO:Creating metrics dataframe
2022-10-01 13:09:59,187:INFO:Uploading results into container
2022-10-01 13:09:59,188:INFO:Uploading model into container now
2022-10-01 13:09:59,188:INFO:master_model_container: 10
2022-10-01 13:09:59,188:INFO:display_container: 2
2022-10-01 13:09:59,188:INFO:HuberRegressor()
2022-10-01 13:09:59,188:INFO:create_model() successfully completed......................................
2022-10-01 13:09:59,261:INFO:SubProcess create_model() end ==================================
2022-10-01 13:09:59,261:INFO:Creating metrics dataframe
2022-10-01 13:09:59,264:INFO:Initializing K Neighbors Regressor
2022-10-01 13:09:59,265:INFO:Total runtime is 0.044538625081380206 minutes
2022-10-01 13:09:59,265:INFO:SubProcess create_model() called ==================================
2022-10-01 13:09:59,265:INFO:Initializing create_model()
2022-10-01 13:09:59,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:09:59,265:INFO:Checking exceptions
2022-10-01 13:09:59,266:INFO:Importing libraries
2022-10-01 13:09:59,266:INFO:Copying training dataset
2022-10-01 13:09:59,268:INFO:Defining folds
2022-10-01 13:09:59,268:INFO:Declaring metric variables
2022-10-01 13:09:59,268:INFO:Importing untrained model
2022-10-01 13:09:59,268:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:09:59,268:INFO:Starting cross validation
2022-10-01 13:09:59,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:02,243:INFO:Calculating mean and std
2022-10-01 13:10:02,243:INFO:Creating metrics dataframe
2022-10-01 13:10:02,246:INFO:Uploading results into container
2022-10-01 13:10:02,247:INFO:Uploading model into container now
2022-10-01 13:10:02,247:INFO:master_model_container: 11
2022-10-01 13:10:02,247:INFO:display_container: 2
2022-10-01 13:10:02,247:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:10:02,247:INFO:create_model() successfully completed......................................
2022-10-01 13:10:02,340:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:02,340:INFO:Creating metrics dataframe
2022-10-01 13:10:02,344:INFO:Initializing Decision Tree Regressor
2022-10-01 13:10:02,344:INFO:Total runtime is 0.09585729837417603 minutes
2022-10-01 13:10:02,344:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:02,345:INFO:Initializing create_model()
2022-10-01 13:10:02,345:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:02,345:INFO:Checking exceptions
2022-10-01 13:10:02,346:INFO:Importing libraries
2022-10-01 13:10:02,346:INFO:Copying training dataset
2022-10-01 13:10:02,348:INFO:Defining folds
2022-10-01 13:10:02,348:INFO:Declaring metric variables
2022-10-01 13:10:02,348:INFO:Importing untrained model
2022-10-01 13:10:02,349:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:10:02,349:INFO:Starting cross validation
2022-10-01 13:10:02,350:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:02,556:INFO:Calculating mean and std
2022-10-01 13:10:02,557:INFO:Creating metrics dataframe
2022-10-01 13:10:02,559:INFO:Uploading results into container
2022-10-01 13:10:02,560:INFO:Uploading model into container now
2022-10-01 13:10:02,560:INFO:master_model_container: 12
2022-10-01 13:10:02,560:INFO:display_container: 2
2022-10-01 13:10:02,560:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:10:02,560:INFO:create_model() successfully completed......................................
2022-10-01 13:10:02,636:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:02,636:INFO:Creating metrics dataframe
2022-10-01 13:10:02,640:INFO:Initializing Random Forest Regressor
2022-10-01 13:10:02,640:INFO:Total runtime is 0.10078946749369304 minutes
2022-10-01 13:10:02,640:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:02,640:INFO:Initializing create_model()
2022-10-01 13:10:02,640:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:02,640:INFO:Checking exceptions
2022-10-01 13:10:02,641:INFO:Importing libraries
2022-10-01 13:10:02,641:INFO:Copying training dataset
2022-10-01 13:10:02,643:INFO:Defining folds
2022-10-01 13:10:02,643:INFO:Declaring metric variables
2022-10-01 13:10:02,643:INFO:Importing untrained model
2022-10-01 13:10:02,644:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:10:02,644:INFO:Starting cross validation
2022-10-01 13:10:02,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:03,829:INFO:Calculating mean and std
2022-10-01 13:10:03,830:INFO:Creating metrics dataframe
2022-10-01 13:10:03,832:INFO:Uploading results into container
2022-10-01 13:10:03,832:INFO:Uploading model into container now
2022-10-01 13:10:03,833:INFO:master_model_container: 13
2022-10-01 13:10:03,833:INFO:display_container: 2
2022-10-01 13:10:03,833:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:10:03,833:INFO:create_model() successfully completed......................................
2022-10-01 13:10:03,904:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:03,904:INFO:Creating metrics dataframe
2022-10-01 13:10:03,908:INFO:Initializing Extra Trees Regressor
2022-10-01 13:10:03,908:INFO:Total runtime is 0.12193002700805665 minutes
2022-10-01 13:10:03,908:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:03,908:INFO:Initializing create_model()
2022-10-01 13:10:03,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:03,908:INFO:Checking exceptions
2022-10-01 13:10:03,909:INFO:Importing libraries
2022-10-01 13:10:03,909:INFO:Copying training dataset
2022-10-01 13:10:03,911:INFO:Defining folds
2022-10-01 13:10:03,911:INFO:Declaring metric variables
2022-10-01 13:10:03,911:INFO:Importing untrained model
2022-10-01 13:10:03,912:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:10:03,912:INFO:Starting cross validation
2022-10-01 13:10:03,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:05,069:INFO:Calculating mean and std
2022-10-01 13:10:05,069:INFO:Creating metrics dataframe
2022-10-01 13:10:05,072:INFO:Uploading results into container
2022-10-01 13:10:05,073:INFO:Uploading model into container now
2022-10-01 13:10:05,073:INFO:master_model_container: 14
2022-10-01 13:10:05,073:INFO:display_container: 2
2022-10-01 13:10:05,074:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:10:05,074:INFO:create_model() successfully completed......................................
2022-10-01 13:10:05,145:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:05,145:INFO:Creating metrics dataframe
2022-10-01 13:10:05,149:INFO:Initializing AdaBoost Regressor
2022-10-01 13:10:05,150:INFO:Total runtime is 0.1426245133082072 minutes
2022-10-01 13:10:05,150:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:05,150:INFO:Initializing create_model()
2022-10-01 13:10:05,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:05,150:INFO:Checking exceptions
2022-10-01 13:10:05,151:INFO:Importing libraries
2022-10-01 13:10:05,151:INFO:Copying training dataset
2022-10-01 13:10:05,153:INFO:Defining folds
2022-10-01 13:10:05,153:INFO:Declaring metric variables
2022-10-01 13:10:05,153:INFO:Importing untrained model
2022-10-01 13:10:05,153:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:10:05,153:INFO:Starting cross validation
2022-10-01 13:10:05,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:05,823:INFO:Calculating mean and std
2022-10-01 13:10:05,823:INFO:Creating metrics dataframe
2022-10-01 13:10:05,826:INFO:Uploading results into container
2022-10-01 13:10:05,826:INFO:Uploading model into container now
2022-10-01 13:10:05,827:INFO:master_model_container: 15
2022-10-01 13:10:05,827:INFO:display_container: 2
2022-10-01 13:10:05,827:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:10:05,827:INFO:create_model() successfully completed......................................
2022-10-01 13:10:05,899:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:05,899:INFO:Creating metrics dataframe
2022-10-01 13:10:05,903:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:10:05,903:INFO:Total runtime is 0.1551711599032084 minutes
2022-10-01 13:10:05,903:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:05,904:INFO:Initializing create_model()
2022-10-01 13:10:05,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:05,904:INFO:Checking exceptions
2022-10-01 13:10:05,905:INFO:Importing libraries
2022-10-01 13:10:05,905:INFO:Copying training dataset
2022-10-01 13:10:05,906:INFO:Defining folds
2022-10-01 13:10:05,906:INFO:Declaring metric variables
2022-10-01 13:10:05,906:INFO:Importing untrained model
2022-10-01 13:10:05,907:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:10:05,907:INFO:Starting cross validation
2022-10-01 13:10:05,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:06,479:INFO:Calculating mean and std
2022-10-01 13:10:06,480:INFO:Creating metrics dataframe
2022-10-01 13:10:06,482:INFO:Uploading results into container
2022-10-01 13:10:06,483:INFO:Uploading model into container now
2022-10-01 13:10:06,483:INFO:master_model_container: 16
2022-10-01 13:10:06,483:INFO:display_container: 2
2022-10-01 13:10:06,483:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:10:06,483:INFO:create_model() successfully completed......................................
2022-10-01 13:10:06,559:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:06,559:INFO:Creating metrics dataframe
2022-10-01 13:10:06,563:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:10:06,563:INFO:Total runtime is 0.16616882880528766 minutes
2022-10-01 13:10:06,563:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:06,564:INFO:Initializing create_model()
2022-10-01 13:10:06,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:06,564:INFO:Checking exceptions
2022-10-01 13:10:06,565:INFO:Importing libraries
2022-10-01 13:10:06,565:INFO:Copying training dataset
2022-10-01 13:10:06,567:INFO:Defining folds
2022-10-01 13:10:06,567:INFO:Declaring metric variables
2022-10-01 13:10:06,567:INFO:Importing untrained model
2022-10-01 13:10:06,567:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:10:06,567:INFO:Starting cross validation
2022-10-01 13:10:06,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:10,947:INFO:Calculating mean and std
2022-10-01 13:10:10,948:INFO:Creating metrics dataframe
2022-10-01 13:10:10,951:INFO:Uploading results into container
2022-10-01 13:10:10,952:INFO:Uploading model into container now
2022-10-01 13:10:10,952:INFO:master_model_container: 17
2022-10-01 13:10:10,952:INFO:display_container: 2
2022-10-01 13:10:10,953:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:10:10,953:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,037:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:11,037:INFO:Creating metrics dataframe
2022-10-01 13:10:11,042:INFO:Initializing Dummy Regressor
2022-10-01 13:10:11,042:INFO:Total runtime is 0.24082986513773597 minutes
2022-10-01 13:10:11,043:INFO:SubProcess create_model() called ==================================
2022-10-01 13:10:11,043:INFO:Initializing create_model()
2022-10-01 13:10:11,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027DEC650A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:11,043:INFO:Checking exceptions
2022-10-01 13:10:11,044:INFO:Importing libraries
2022-10-01 13:10:11,044:INFO:Copying training dataset
2022-10-01 13:10:11,045:INFO:Defining folds
2022-10-01 13:10:11,046:INFO:Declaring metric variables
2022-10-01 13:10:11,046:INFO:Importing untrained model
2022-10-01 13:10:11,046:INFO:Dummy Regressor Imported successfully
2022-10-01 13:10:11,046:INFO:Starting cross validation
2022-10-01 13:10:11,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:11,200:INFO:Calculating mean and std
2022-10-01 13:10:11,200:INFO:Creating metrics dataframe
2022-10-01 13:10:11,203:INFO:Uploading results into container
2022-10-01 13:10:11,203:INFO:Uploading model into container now
2022-10-01 13:10:11,203:INFO:master_model_container: 18
2022-10-01 13:10:11,204:INFO:display_container: 2
2022-10-01 13:10:11,204:INFO:DummyRegressor()
2022-10-01 13:10:11,204:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,277:INFO:SubProcess create_model() end ==================================
2022-10-01 13:10:11,277:INFO:Creating metrics dataframe
2022-10-01 13:10:11,282:INFO:Initializing create_model()
2022-10-01 13:10:11,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:11,282:INFO:Checking exceptions
2022-10-01 13:10:11,284:INFO:Importing libraries
2022-10-01 13:10:11,284:INFO:Copying training dataset
2022-10-01 13:10:11,285:INFO:Defining folds
2022-10-01 13:10:11,285:INFO:Declaring metric variables
2022-10-01 13:10:11,286:INFO:Importing untrained model
2022-10-01 13:10:11,286:INFO:Declaring custom model
2022-10-01 13:10:11,286:INFO:Linear Regression Imported successfully
2022-10-01 13:10:11,286:INFO:Cross validation set to False
2022-10-01 13:10:11,287:INFO:Fitting Model
2022-10-01 13:10:11,295:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:10:11,296:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,380:INFO:master_model_container: 18
2022-10-01 13:10:11,381:INFO:display_container: 2
2022-10-01 13:10:11,381:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:10:11,381:INFO:compare_models() successfully completed......................................
2022-10-01 13:10:11,382:INFO:Initializing create_model()
2022-10-01 13:10:11,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:10:11,382:INFO:Checking exceptions
2022-10-01 13:10:11,385:INFO:Importing libraries
2022-10-01 13:10:11,386:INFO:Copying training dataset
2022-10-01 13:10:11,387:INFO:Defining folds
2022-10-01 13:10:11,387:INFO:Declaring metric variables
2022-10-01 13:10:11,388:INFO:Importing untrained model
2022-10-01 13:10:11,388:INFO:Declaring custom model
2022-10-01 13:10:11,388:INFO:Linear Regression Imported successfully
2022-10-01 13:10:11,388:INFO:Starting cross validation
2022-10-01 13:10:11,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:10:11,597:INFO:Calculating mean and std
2022-10-01 13:10:11,597:INFO:Creating metrics dataframe
2022-10-01 13:10:11,599:INFO:Finalizing model
2022-10-01 13:10:11,609:INFO:Uploading results into container
2022-10-01 13:10:11,609:INFO:Uploading model into container now
2022-10-01 13:10:11,618:INFO:master_model_container: 19
2022-10-01 13:10:11,618:INFO:display_container: 3
2022-10-01 13:10:11,618:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:10:11,619:INFO:create_model() successfully completed......................................
2022-10-01 13:10:11,746:INFO:Initializing predict_model()
2022-10-01 13:10:11,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027DE3724F70>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000027DE3CBB6D0>)
2022-10-01 13:10:11,746:INFO:Checking exceptions
2022-10-01 13:10:11,746:INFO:Preloading libraries
2022-10-01 13:10:11,746:INFO:Set up data.
2022-10-01 13:10:11,750:INFO:Set up index.
2022-10-01 13:10:11,882:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'Label' : np.nan},ignore_index = True)

2022-10-01 13:11:02,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:02,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:02,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:02,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:03,258:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:11:05,022:INFO:PyCaret RegressionExperiment
2022-10-01 13:11:05,022:INFO:Logging name: reg-default-name
2022-10-01 13:11:05,022:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:11:05,022:INFO:version 3.0.0.rc4
2022-10-01 13:11:05,022:INFO:Initializing setup()
2022-10-01 13:11:05,022:INFO:self.USI: f933
2022-10-01 13:11:05,022:INFO:self.variable_keys: {'html_param', '_all_models', 'fold_groups_param', 'fold_shuffle_param', 'y', '_gpu_n_jobs_param', 'target_param', 'USI', 'X_train', 'fold_generator', 'X', '_available_plots', 'variable_keys', 'display_container', 'data', 'exp_id', 'transform_target_method_param', 'logging_param', 'y_train', 'exp_name_log', '_ml_usecase', 'master_model_container', 'idx', 'gpu_param', 'n_jobs_param', 'pipeline', 'log_plots_param', 'y_test', 'transform_target_param', 'memory', 'seed', 'X_test', '_all_metrics', '_all_models_internal'}
2022-10-01 13:11:05,022:INFO:Checking environment
2022-10-01 13:11:05,022:INFO:python_version: 3.10.7
2022-10-01 13:11:05,022:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:11:05,022:INFO:machine: AMD64
2022-10-01 13:11:05,034:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:11:05,034:INFO:Memory: svmem(total=8497213440, available=2212753408, percent=74.0, used=6284460032, free=2212753408)
2022-10-01 13:11:05,034:INFO:Physical Core: 6
2022-10-01 13:11:05,034:INFO:Logical Core: 12
2022-10-01 13:11:05,034:INFO:Checking libraries
2022-10-01 13:11:05,034:INFO:System:
2022-10-01 13:11:05,034:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:11:05,034:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:11:05,034:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:11:05,034:INFO:PyCaret required dependencies:
2022-10-01 13:11:05,034:INFO:                 pip: 22.2.2
2022-10-01 13:11:05,034:INFO:          setuptools: 63.2.0
2022-10-01 13:11:05,035:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:11:05,035:INFO:             IPython: 8.5.0
2022-10-01 13:11:05,035:INFO:          ipywidgets: 8.0.2
2022-10-01 13:11:05,035:INFO:                tqdm: 4.64.1
2022-10-01 13:11:05,035:INFO:               numpy: 1.22.4
2022-10-01 13:11:05,035:INFO:              pandas: 1.4.4
2022-10-01 13:11:05,035:INFO:              jinja2: 3.1.2
2022-10-01 13:11:05,035:INFO:               scipy: 1.8.1
2022-10-01 13:11:05,035:INFO:              joblib: 1.2.0
2022-10-01 13:11:05,035:INFO:             sklearn: 1.1.2
2022-10-01 13:11:05,035:INFO:                pyod: 1.0.5
2022-10-01 13:11:05,035:INFO:            imblearn: 0.9.1
2022-10-01 13:11:05,035:INFO:   category_encoders: 2.5.0
2022-10-01 13:11:05,035:INFO:            lightgbm: 3.3.2
2022-10-01 13:11:05,035:INFO:               numba: 0.55.2
2022-10-01 13:11:05,035:INFO:            requests: 2.28.1
2022-10-01 13:11:05,035:INFO:          matplotlib: 3.6.0
2022-10-01 13:11:05,035:INFO:          scikitplot: 0.3.7
2022-10-01 13:11:05,035:INFO:         yellowbrick: 1.5
2022-10-01 13:11:05,035:INFO:              plotly: 5.10.0
2022-10-01 13:11:05,035:INFO:             kaleido: 0.2.1
2022-10-01 13:11:05,035:INFO:         statsmodels: 0.13.2
2022-10-01 13:11:05,035:INFO:              sktime: 0.13.4
2022-10-01 13:11:05,035:INFO:               tbats: 1.1.0
2022-10-01 13:11:05,036:INFO:            pmdarima: 1.8.5
2022-10-01 13:11:05,036:INFO:              psutil: 5.9.2
2022-10-01 13:11:05,036:INFO:PyCaret optional dependencies:
2022-10-01 13:11:05,049:INFO:                shap: Not installed
2022-10-01 13:11:05,049:INFO:           interpret: Not installed
2022-10-01 13:11:05,049:INFO:                umap: Not installed
2022-10-01 13:11:05,050:INFO:    pandas_profiling: Not installed
2022-10-01 13:11:05,050:INFO:  explainerdashboard: Not installed
2022-10-01 13:11:05,050:INFO:             autoviz: Not installed
2022-10-01 13:11:05,050:INFO:           fairlearn: Not installed
2022-10-01 13:11:05,050:INFO:             xgboost: Not installed
2022-10-01 13:11:05,050:INFO:            catboost: Not installed
2022-10-01 13:11:05,050:INFO:              kmodes: Not installed
2022-10-01 13:11:05,050:INFO:             mlxtend: Not installed
2022-10-01 13:11:05,050:INFO:       statsforecast: Not installed
2022-10-01 13:11:05,050:INFO:        tune_sklearn: Not installed
2022-10-01 13:11:05,050:INFO:                 ray: Not installed
2022-10-01 13:11:05,050:INFO:            hyperopt: Not installed
2022-10-01 13:11:05,050:INFO:              optuna: Not installed
2022-10-01 13:11:05,050:INFO:               skopt: Not installed
2022-10-01 13:11:05,050:INFO:              mlflow: Not installed
2022-10-01 13:11:05,050:INFO:              gradio: Not installed
2022-10-01 13:11:05,050:INFO:             fastapi: Not installed
2022-10-01 13:11:05,050:INFO:             uvicorn: Not installed
2022-10-01 13:11:05,050:INFO:              m2cgen: Not installed
2022-10-01 13:11:05,050:INFO:           evidently: Not installed
2022-10-01 13:11:05,050:INFO:                nltk: Not installed
2022-10-01 13:11:05,050:INFO:            pyLDAvis: Not installed
2022-10-01 13:11:05,051:INFO:              gensim: Not installed
2022-10-01 13:11:05,051:INFO:               spacy: Not installed
2022-10-01 13:11:05,051:INFO:           wordcloud: Not installed
2022-10-01 13:11:05,051:INFO:            textblob: Not installed
2022-10-01 13:11:05,051:INFO:               fugue: Not installed
2022-10-01 13:11:05,051:INFO:           streamlit: Not installed
2022-10-01 13:11:05,051:INFO:             prophet: Not installed
2022-10-01 13:11:05,051:INFO:None
2022-10-01 13:11:05,051:INFO:Set up GPU usage.
2022-10-01 13:11:05,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,051:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:11:05,051:INFO:Set up data.
2022-10-01 13:11:05,055:INFO:Set up train/test split.
2022-10-01 13:11:05,057:INFO:Set up index.
2022-10-01 13:11:05,057:INFO:Set up folding strategy.
2022-10-01 13:11:05,058:INFO:Assigning column types.
2022-10-01 13:11:05,060:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:11:05,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,060:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,064:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,069:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,123:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,166:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:05,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:05,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,627:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,634:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:05,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,016:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:11:06,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,023:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,113:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,402:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,408:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:06,757:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:11:06,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,771:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,771:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,895:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:06,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:06,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,214:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,482:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:11:07,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:07,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:07,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:07,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:08,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,253:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:11:08,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:08,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:08,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:08,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,030:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:11:09,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:09,837:INFO:Preparing preprocessing pipeline...
2022-10-01 13:11:09,838:INFO:Set up simple imputation.
2022-10-01 13:11:09,838:INFO:Set up variance threshold.
2022-10-01 13:11:09,856:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:11:09,864:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:11:09,864:INFO:Creating final display dataframe.
2022-10-01 13:11:09,959:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              f933
2022-10-01 13:11:09,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:09,974:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:10,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:10,693:INFO:setup() successfully completed in 5.67s...............
2022-10-01 13:11:10,693:INFO:Initializing compare_models()
2022-10-01 13:11:10,693:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:11:10,693:INFO:Checking exceptions
2022-10-01 13:11:10,694:INFO:Preparing display monitor
2022-10-01 13:11:10,697:INFO:Initializing Linear Regression
2022-10-01 13:11:10,697:INFO:Total runtime is 0.0 minutes
2022-10-01 13:11:10,698:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:10,698:INFO:Initializing create_model()
2022-10-01 13:11:10,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:10,698:INFO:Checking exceptions
2022-10-01 13:11:10,699:INFO:Importing libraries
2022-10-01 13:11:10,699:INFO:Copying training dataset
2022-10-01 13:11:10,701:INFO:Defining folds
2022-10-01 13:11:10,701:INFO:Declaring metric variables
2022-10-01 13:11:10,702:INFO:Importing untrained model
2022-10-01 13:11:10,702:INFO:Linear Regression Imported successfully
2022-10-01 13:11:10,702:INFO:Starting cross validation
2022-10-01 13:11:10,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:10,910:INFO:Calculating mean and std
2022-10-01 13:11:10,911:INFO:Creating metrics dataframe
2022-10-01 13:11:10,913:INFO:Uploading results into container
2022-10-01 13:11:10,913:INFO:Uploading model into container now
2022-10-01 13:11:10,914:INFO:master_model_container: 1
2022-10-01 13:11:10,914:INFO:display_container: 2
2022-10-01 13:11:10,914:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:10,914:INFO:create_model() successfully completed......................................
2022-10-01 13:11:10,990:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:10,990:INFO:Creating metrics dataframe
2022-10-01 13:11:10,993:INFO:Initializing Lasso Regression
2022-10-01 13:11:10,994:INFO:Total runtime is 0.004949319362640381 minutes
2022-10-01 13:11:10,994:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:10,994:INFO:Initializing create_model()
2022-10-01 13:11:10,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:10,994:INFO:Checking exceptions
2022-10-01 13:11:10,995:INFO:Importing libraries
2022-10-01 13:11:10,995:INFO:Copying training dataset
2022-10-01 13:11:10,997:INFO:Defining folds
2022-10-01 13:11:10,997:INFO:Declaring metric variables
2022-10-01 13:11:10,997:INFO:Importing untrained model
2022-10-01 13:11:10,997:INFO:Lasso Regression Imported successfully
2022-10-01 13:11:10,997:INFO:Starting cross validation
2022-10-01 13:11:10,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,010:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,027:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,045:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,063:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,080:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,099:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,118:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,137:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,155:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,172:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,180:INFO:Calculating mean and std
2022-10-01 13:11:11,181:INFO:Creating metrics dataframe
2022-10-01 13:11:11,183:INFO:Uploading results into container
2022-10-01 13:11:11,183:INFO:Uploading model into container now
2022-10-01 13:11:11,184:INFO:master_model_container: 2
2022-10-01 13:11:11,184:INFO:display_container: 2
2022-10-01 13:11:11,184:INFO:Lasso(random_state=123)
2022-10-01 13:11:11,184:INFO:create_model() successfully completed......................................
2022-10-01 13:11:11,255:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:11,255:INFO:Creating metrics dataframe
2022-10-01 13:11:11,259:INFO:Initializing Ridge Regression
2022-10-01 13:11:11,259:INFO:Total runtime is 0.009364831447601318 minutes
2022-10-01 13:11:11,259:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:11,259:INFO:Initializing create_model()
2022-10-01 13:11:11,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:11,259:INFO:Checking exceptions
2022-10-01 13:11:11,260:INFO:Importing libraries
2022-10-01 13:11:11,260:INFO:Copying training dataset
2022-10-01 13:11:11,262:INFO:Defining folds
2022-10-01 13:11:11,262:INFO:Declaring metric variables
2022-10-01 13:11:11,262:INFO:Importing untrained model
2022-10-01 13:11:11,262:INFO:Ridge Regression Imported successfully
2022-10-01 13:11:11,262:INFO:Starting cross validation
2022-10-01 13:11:11,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,274:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,291:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,308:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,326:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,342:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,359:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,376:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,392:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,409:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,426:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:11:11,433:INFO:Calculating mean and std
2022-10-01 13:11:11,433:INFO:Creating metrics dataframe
2022-10-01 13:11:11,436:INFO:Uploading results into container
2022-10-01 13:11:11,436:INFO:Uploading model into container now
2022-10-01 13:11:11,436:INFO:master_model_container: 3
2022-10-01 13:11:11,436:INFO:display_container: 2
2022-10-01 13:11:11,437:INFO:Ridge(random_state=123)
2022-10-01 13:11:11,437:INFO:create_model() successfully completed......................................
2022-10-01 13:11:11,512:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:11,512:INFO:Creating metrics dataframe
2022-10-01 13:11:11,516:INFO:Initializing Elastic Net
2022-10-01 13:11:11,516:INFO:Total runtime is 0.013646944363911947 minutes
2022-10-01 13:11:11,516:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:11,516:INFO:Initializing create_model()
2022-10-01 13:11:11,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:11,516:INFO:Checking exceptions
2022-10-01 13:11:11,517:INFO:Importing libraries
2022-10-01 13:11:11,517:INFO:Copying training dataset
2022-10-01 13:11:11,519:INFO:Defining folds
2022-10-01 13:11:11,519:INFO:Declaring metric variables
2022-10-01 13:11:11,519:INFO:Importing untrained model
2022-10-01 13:11:11,519:INFO:Elastic Net Imported successfully
2022-10-01 13:11:11,519:INFO:Starting cross validation
2022-10-01 13:11:11,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,531:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,549:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,566:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,584:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,602:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,620:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,637:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,656:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,673:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,690:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:11:11,698:INFO:Calculating mean and std
2022-10-01 13:11:11,699:INFO:Creating metrics dataframe
2022-10-01 13:11:11,700:INFO:Uploading results into container
2022-10-01 13:11:11,701:INFO:Uploading model into container now
2022-10-01 13:11:11,701:INFO:master_model_container: 4
2022-10-01 13:11:11,701:INFO:display_container: 2
2022-10-01 13:11:11,701:INFO:ElasticNet(random_state=123)
2022-10-01 13:11:11,701:INFO:create_model() successfully completed......................................
2022-10-01 13:11:11,773:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:11,773:INFO:Creating metrics dataframe
2022-10-01 13:11:11,777:INFO:Initializing Least Angle Regression
2022-10-01 13:11:11,777:INFO:Total runtime is 0.01800063451131185 minutes
2022-10-01 13:11:11,777:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:11,777:INFO:Initializing create_model()
2022-10-01 13:11:11,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:11,777:INFO:Checking exceptions
2022-10-01 13:11:11,778:INFO:Importing libraries
2022-10-01 13:11:11,778:INFO:Copying training dataset
2022-10-01 13:11:11,780:INFO:Defining folds
2022-10-01 13:11:11,780:INFO:Declaring metric variables
2022-10-01 13:11:11,780:INFO:Importing untrained model
2022-10-01 13:11:11,780:INFO:Least Angle Regression Imported successfully
2022-10-01 13:11:11,781:INFO:Starting cross validation
2022-10-01 13:11:11,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:11,791:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,809:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,827:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,844:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,862:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,879:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,896:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,913:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,931:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,948:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:11,956:INFO:Calculating mean and std
2022-10-01 13:11:11,957:INFO:Creating metrics dataframe
2022-10-01 13:11:11,959:INFO:Uploading results into container
2022-10-01 13:11:11,960:INFO:Uploading model into container now
2022-10-01 13:11:11,960:INFO:master_model_container: 5
2022-10-01 13:11:11,960:INFO:display_container: 2
2022-10-01 13:11:11,960:INFO:Lars(random_state=123)
2022-10-01 13:11:11,960:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,033:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,033:INFO:Creating metrics dataframe
2022-10-01 13:11:12,037:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:11:12,037:INFO:Total runtime is 0.02233216365178426 minutes
2022-10-01 13:11:12,037:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,037:INFO:Initializing create_model()
2022-10-01 13:11:12,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,037:INFO:Checking exceptions
2022-10-01 13:11:12,038:INFO:Importing libraries
2022-10-01 13:11:12,038:INFO:Copying training dataset
2022-10-01 13:11:12,040:INFO:Defining folds
2022-10-01 13:11:12,040:INFO:Declaring metric variables
2022-10-01 13:11:12,040:INFO:Importing untrained model
2022-10-01 13:11:12,040:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:11:12,041:INFO:Starting cross validation
2022-10-01 13:11:12,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,052:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,070:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,087:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,105:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,124:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,141:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,158:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,175:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,192:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,209:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:11:12,217:INFO:Calculating mean and std
2022-10-01 13:11:12,218:INFO:Creating metrics dataframe
2022-10-01 13:11:12,220:INFO:Uploading results into container
2022-10-01 13:11:12,221:INFO:Uploading model into container now
2022-10-01 13:11:12,221:INFO:master_model_container: 6
2022-10-01 13:11:12,221:INFO:display_container: 2
2022-10-01 13:11:12,221:INFO:LassoLars(random_state=123)
2022-10-01 13:11:12,221:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,299:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,299:INFO:Creating metrics dataframe
2022-10-01 13:11:12,302:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:11:12,303:INFO:Total runtime is 0.026764289538065592 minutes
2022-10-01 13:11:12,303:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,303:INFO:Initializing create_model()
2022-10-01 13:11:12,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,303:INFO:Checking exceptions
2022-10-01 13:11:12,304:INFO:Importing libraries
2022-10-01 13:11:12,304:INFO:Copying training dataset
2022-10-01 13:11:12,306:INFO:Defining folds
2022-10-01 13:11:12,306:INFO:Declaring metric variables
2022-10-01 13:11:12,306:INFO:Importing untrained model
2022-10-01 13:11:12,306:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:11:12,306:INFO:Starting cross validation
2022-10-01 13:11:12,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,316:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,333:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,351:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,368:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,385:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,402:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,419:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,436:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,469:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:11:12,477:INFO:Calculating mean and std
2022-10-01 13:11:12,478:INFO:Creating metrics dataframe
2022-10-01 13:11:12,480:INFO:Uploading results into container
2022-10-01 13:11:12,481:INFO:Uploading model into container now
2022-10-01 13:11:12,481:INFO:master_model_container: 7
2022-10-01 13:11:12,481:INFO:display_container: 2
2022-10-01 13:11:12,481:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:11:12,481:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,553:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,553:INFO:Creating metrics dataframe
2022-10-01 13:11:12,557:INFO:Initializing Bayesian Ridge
2022-10-01 13:11:12,557:INFO:Total runtime is 0.030997029940287274 minutes
2022-10-01 13:11:12,558:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,558:INFO:Initializing create_model()
2022-10-01 13:11:12,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,558:INFO:Checking exceptions
2022-10-01 13:11:12,559:INFO:Importing libraries
2022-10-01 13:11:12,559:INFO:Copying training dataset
2022-10-01 13:11:12,561:INFO:Defining folds
2022-10-01 13:11:12,561:INFO:Declaring metric variables
2022-10-01 13:11:12,561:INFO:Importing untrained model
2022-10-01 13:11:12,561:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:11:12,561:INFO:Starting cross validation
2022-10-01 13:11:12,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,734:INFO:Calculating mean and std
2022-10-01 13:11:12,735:INFO:Creating metrics dataframe
2022-10-01 13:11:12,737:INFO:Uploading results into container
2022-10-01 13:11:12,738:INFO:Uploading model into container now
2022-10-01 13:11:12,738:INFO:master_model_container: 8
2022-10-01 13:11:12,738:INFO:display_container: 2
2022-10-01 13:11:12,738:INFO:BayesianRidge()
2022-10-01 13:11:12,738:INFO:create_model() successfully completed......................................
2022-10-01 13:11:12,815:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:12,815:INFO:Creating metrics dataframe
2022-10-01 13:11:12,818:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:11:12,819:INFO:Total runtime is 0.035345947742462164 minutes
2022-10-01 13:11:12,819:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:12,819:INFO:Initializing create_model()
2022-10-01 13:11:12,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:12,819:INFO:Checking exceptions
2022-10-01 13:11:12,820:INFO:Importing libraries
2022-10-01 13:11:12,820:INFO:Copying training dataset
2022-10-01 13:11:12,821:INFO:Defining folds
2022-10-01 13:11:12,822:INFO:Declaring metric variables
2022-10-01 13:11:12,822:INFO:Importing untrained model
2022-10-01 13:11:12,822:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:11:12,822:INFO:Starting cross validation
2022-10-01 13:11:12,823:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:12,990:INFO:Calculating mean and std
2022-10-01 13:11:12,991:INFO:Creating metrics dataframe
2022-10-01 13:11:12,994:INFO:Uploading results into container
2022-10-01 13:11:12,994:INFO:Uploading model into container now
2022-10-01 13:11:12,994:INFO:master_model_container: 9
2022-10-01 13:11:12,994:INFO:display_container: 2
2022-10-01 13:11:12,995:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:11:12,995:INFO:create_model() successfully completed......................................
2022-10-01 13:11:13,070:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:13,070:INFO:Creating metrics dataframe
2022-10-01 13:11:13,074:INFO:Initializing Huber Regressor
2022-10-01 13:11:13,074:INFO:Total runtime is 0.03961147864659628 minutes
2022-10-01 13:11:13,074:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:13,075:INFO:Initializing create_model()
2022-10-01 13:11:13,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:13,075:INFO:Checking exceptions
2022-10-01 13:11:13,076:INFO:Importing libraries
2022-10-01 13:11:13,076:INFO:Copying training dataset
2022-10-01 13:11:13,077:INFO:Defining folds
2022-10-01 13:11:13,077:INFO:Declaring metric variables
2022-10-01 13:11:13,077:INFO:Importing untrained model
2022-10-01 13:11:13,078:INFO:Huber Regressor Imported successfully
2022-10-01 13:11:13,078:INFO:Starting cross validation
2022-10-01 13:11:13,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:13,304:INFO:Calculating mean and std
2022-10-01 13:11:13,304:INFO:Creating metrics dataframe
2022-10-01 13:11:13,307:INFO:Uploading results into container
2022-10-01 13:11:13,307:INFO:Uploading model into container now
2022-10-01 13:11:13,308:INFO:master_model_container: 10
2022-10-01 13:11:13,308:INFO:display_container: 2
2022-10-01 13:11:13,308:INFO:HuberRegressor()
2022-10-01 13:11:13,308:INFO:create_model() successfully completed......................................
2022-10-01 13:11:13,381:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:13,381:INFO:Creating metrics dataframe
2022-10-01 13:11:13,385:INFO:Initializing K Neighbors Regressor
2022-10-01 13:11:13,385:INFO:Total runtime is 0.0447928269704183 minutes
2022-10-01 13:11:13,385:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:13,385:INFO:Initializing create_model()
2022-10-01 13:11:13,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:13,385:INFO:Checking exceptions
2022-10-01 13:11:13,386:INFO:Importing libraries
2022-10-01 13:11:13,386:INFO:Copying training dataset
2022-10-01 13:11:13,388:INFO:Defining folds
2022-10-01 13:11:13,388:INFO:Declaring metric variables
2022-10-01 13:11:13,388:INFO:Importing untrained model
2022-10-01 13:11:13,388:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:11:13,388:INFO:Starting cross validation
2022-10-01 13:11:13,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:16,810:INFO:Calculating mean and std
2022-10-01 13:11:16,811:INFO:Creating metrics dataframe
2022-10-01 13:11:16,813:INFO:Uploading results into container
2022-10-01 13:11:16,814:INFO:Uploading model into container now
2022-10-01 13:11:16,814:INFO:master_model_container: 11
2022-10-01 13:11:16,814:INFO:display_container: 2
2022-10-01 13:11:16,814:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:11:16,814:INFO:create_model() successfully completed......................................
2022-10-01 13:11:16,887:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:16,887:INFO:Creating metrics dataframe
2022-10-01 13:11:16,891:INFO:Initializing Decision Tree Regressor
2022-10-01 13:11:16,891:INFO:Total runtime is 0.10322792132695516 minutes
2022-10-01 13:11:16,891:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:16,892:INFO:Initializing create_model()
2022-10-01 13:11:16,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:16,892:INFO:Checking exceptions
2022-10-01 13:11:16,893:INFO:Importing libraries
2022-10-01 13:11:16,893:INFO:Copying training dataset
2022-10-01 13:11:16,894:INFO:Defining folds
2022-10-01 13:11:16,894:INFO:Declaring metric variables
2022-10-01 13:11:16,894:INFO:Importing untrained model
2022-10-01 13:11:16,895:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:11:16,895:INFO:Starting cross validation
2022-10-01 13:11:16,896:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:17,073:INFO:Calculating mean and std
2022-10-01 13:11:17,074:INFO:Creating metrics dataframe
2022-10-01 13:11:17,076:INFO:Uploading results into container
2022-10-01 13:11:17,077:INFO:Uploading model into container now
2022-10-01 13:11:17,077:INFO:master_model_container: 12
2022-10-01 13:11:17,077:INFO:display_container: 2
2022-10-01 13:11:17,077:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:11:17,077:INFO:create_model() successfully completed......................................
2022-10-01 13:11:17,150:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:17,150:INFO:Creating metrics dataframe
2022-10-01 13:11:17,154:INFO:Initializing Random Forest Regressor
2022-10-01 13:11:17,154:INFO:Total runtime is 0.10761003096898397 minutes
2022-10-01 13:11:17,154:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:17,155:INFO:Initializing create_model()
2022-10-01 13:11:17,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:17,155:INFO:Checking exceptions
2022-10-01 13:11:17,156:INFO:Importing libraries
2022-10-01 13:11:17,156:INFO:Copying training dataset
2022-10-01 13:11:17,157:INFO:Defining folds
2022-10-01 13:11:17,157:INFO:Declaring metric variables
2022-10-01 13:11:17,158:INFO:Importing untrained model
2022-10-01 13:11:17,158:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:11:17,158:INFO:Starting cross validation
2022-10-01 13:11:17,159:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:18,341:INFO:Calculating mean and std
2022-10-01 13:11:18,342:INFO:Creating metrics dataframe
2022-10-01 13:11:18,344:INFO:Uploading results into container
2022-10-01 13:11:18,345:INFO:Uploading model into container now
2022-10-01 13:11:18,345:INFO:master_model_container: 13
2022-10-01 13:11:18,345:INFO:display_container: 2
2022-10-01 13:11:18,345:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:11:18,345:INFO:create_model() successfully completed......................................
2022-10-01 13:11:18,418:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:18,418:INFO:Creating metrics dataframe
2022-10-01 13:11:18,422:INFO:Initializing Extra Trees Regressor
2022-10-01 13:11:18,422:INFO:Total runtime is 0.12874761819839478 minutes
2022-10-01 13:11:18,422:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:18,422:INFO:Initializing create_model()
2022-10-01 13:11:18,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:18,423:INFO:Checking exceptions
2022-10-01 13:11:18,424:INFO:Importing libraries
2022-10-01 13:11:18,424:INFO:Copying training dataset
2022-10-01 13:11:18,425:INFO:Defining folds
2022-10-01 13:11:18,425:INFO:Declaring metric variables
2022-10-01 13:11:18,425:INFO:Importing untrained model
2022-10-01 13:11:18,426:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:11:18,426:INFO:Starting cross validation
2022-10-01 13:11:18,427:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:19,554:INFO:Calculating mean and std
2022-10-01 13:11:19,555:INFO:Creating metrics dataframe
2022-10-01 13:11:19,558:INFO:Uploading results into container
2022-10-01 13:11:19,558:INFO:Uploading model into container now
2022-10-01 13:11:19,558:INFO:master_model_container: 14
2022-10-01 13:11:19,558:INFO:display_container: 2
2022-10-01 13:11:19,559:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:11:19,559:INFO:create_model() successfully completed......................................
2022-10-01 13:11:19,631:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:19,631:INFO:Creating metrics dataframe
2022-10-01 13:11:19,634:INFO:Initializing AdaBoost Regressor
2022-10-01 13:11:19,635:INFO:Total runtime is 0.14896668593088785 minutes
2022-10-01 13:11:19,635:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:19,635:INFO:Initializing create_model()
2022-10-01 13:11:19,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:19,635:INFO:Checking exceptions
2022-10-01 13:11:19,636:INFO:Importing libraries
2022-10-01 13:11:19,636:INFO:Copying training dataset
2022-10-01 13:11:19,638:INFO:Defining folds
2022-10-01 13:11:19,638:INFO:Declaring metric variables
2022-10-01 13:11:19,638:INFO:Importing untrained model
2022-10-01 13:11:19,638:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:11:19,638:INFO:Starting cross validation
2022-10-01 13:11:19,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:20,306:INFO:Calculating mean and std
2022-10-01 13:11:20,307:INFO:Creating metrics dataframe
2022-10-01 13:11:20,310:INFO:Uploading results into container
2022-10-01 13:11:20,310:INFO:Uploading model into container now
2022-10-01 13:11:20,310:INFO:master_model_container: 15
2022-10-01 13:11:20,310:INFO:display_container: 2
2022-10-01 13:11:20,310:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:11:20,310:INFO:create_model() successfully completed......................................
2022-10-01 13:11:20,387:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:20,387:INFO:Creating metrics dataframe
2022-10-01 13:11:20,391:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:11:20,392:INFO:Total runtime is 0.16157998243967692 minutes
2022-10-01 13:11:20,392:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:20,392:INFO:Initializing create_model()
2022-10-01 13:11:20,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:20,392:INFO:Checking exceptions
2022-10-01 13:11:20,393:INFO:Importing libraries
2022-10-01 13:11:20,393:INFO:Copying training dataset
2022-10-01 13:11:20,395:INFO:Defining folds
2022-10-01 13:11:20,395:INFO:Declaring metric variables
2022-10-01 13:11:20,395:INFO:Importing untrained model
2022-10-01 13:11:20,395:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:11:20,395:INFO:Starting cross validation
2022-10-01 13:11:20,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:20,964:INFO:Calculating mean and std
2022-10-01 13:11:20,965:INFO:Creating metrics dataframe
2022-10-01 13:11:20,967:INFO:Uploading results into container
2022-10-01 13:11:20,968:INFO:Uploading model into container now
2022-10-01 13:11:20,968:INFO:master_model_container: 16
2022-10-01 13:11:20,968:INFO:display_container: 2
2022-10-01 13:11:20,968:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:11:20,968:INFO:create_model() successfully completed......................................
2022-10-01 13:11:21,042:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:21,042:INFO:Creating metrics dataframe
2022-10-01 13:11:21,046:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:11:21,047:INFO:Total runtime is 0.17248994509379068 minutes
2022-10-01 13:11:21,047:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:21,047:INFO:Initializing create_model()
2022-10-01 13:11:21,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:21,047:INFO:Checking exceptions
2022-10-01 13:11:21,048:INFO:Importing libraries
2022-10-01 13:11:21,048:INFO:Copying training dataset
2022-10-01 13:11:21,050:INFO:Defining folds
2022-10-01 13:11:21,050:INFO:Declaring metric variables
2022-10-01 13:11:21,050:INFO:Importing untrained model
2022-10-01 13:11:21,050:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:11:21,050:INFO:Starting cross validation
2022-10-01 13:11:21,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:25,517:INFO:Calculating mean and std
2022-10-01 13:11:25,518:INFO:Creating metrics dataframe
2022-10-01 13:11:25,521:INFO:Uploading results into container
2022-10-01 13:11:25,522:INFO:Uploading model into container now
2022-10-01 13:11:25,522:INFO:master_model_container: 17
2022-10-01 13:11:25,522:INFO:display_container: 2
2022-10-01 13:11:25,523:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:11:25,523:INFO:create_model() successfully completed......................................
2022-10-01 13:11:25,607:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:25,607:INFO:Creating metrics dataframe
2022-10-01 13:11:25,612:INFO:Initializing Dummy Regressor
2022-10-01 13:11:25,612:INFO:Total runtime is 0.2485697786013285 minutes
2022-10-01 13:11:25,612:INFO:SubProcess create_model() called ==================================
2022-10-01 13:11:25,613:INFO:Initializing create_model()
2022-10-01 13:11:25,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002038CC50A30>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:25,613:INFO:Checking exceptions
2022-10-01 13:11:25,614:INFO:Importing libraries
2022-10-01 13:11:25,614:INFO:Copying training dataset
2022-10-01 13:11:25,616:INFO:Defining folds
2022-10-01 13:11:25,616:INFO:Declaring metric variables
2022-10-01 13:11:25,616:INFO:Importing untrained model
2022-10-01 13:11:25,616:INFO:Dummy Regressor Imported successfully
2022-10-01 13:11:25,617:INFO:Starting cross validation
2022-10-01 13:11:25,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:25,768:INFO:Calculating mean and std
2022-10-01 13:11:25,769:INFO:Creating metrics dataframe
2022-10-01 13:11:25,771:INFO:Uploading results into container
2022-10-01 13:11:25,771:INFO:Uploading model into container now
2022-10-01 13:11:25,772:INFO:master_model_container: 18
2022-10-01 13:11:25,772:INFO:display_container: 2
2022-10-01 13:11:25,772:INFO:DummyRegressor()
2022-10-01 13:11:25,772:INFO:create_model() successfully completed......................................
2022-10-01 13:11:25,846:INFO:SubProcess create_model() end ==================================
2022-10-01 13:11:25,846:INFO:Creating metrics dataframe
2022-10-01 13:11:25,851:INFO:Initializing create_model()
2022-10-01 13:11:25,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:25,851:INFO:Checking exceptions
2022-10-01 13:11:25,853:INFO:Importing libraries
2022-10-01 13:11:25,853:INFO:Copying training dataset
2022-10-01 13:11:25,855:INFO:Defining folds
2022-10-01 13:11:25,855:INFO:Declaring metric variables
2022-10-01 13:11:25,855:INFO:Importing untrained model
2022-10-01 13:11:25,855:INFO:Declaring custom model
2022-10-01 13:11:25,855:INFO:Linear Regression Imported successfully
2022-10-01 13:11:25,856:INFO:Cross validation set to False
2022-10-01 13:11:25,856:INFO:Fitting Model
2022-10-01 13:11:25,865:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:25,865:INFO:create_model() successfully completed......................................
2022-10-01 13:11:25,951:INFO:master_model_container: 18
2022-10-01 13:11:25,951:INFO:display_container: 2
2022-10-01 13:11:25,951:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:25,951:INFO:compare_models() successfully completed......................................
2022-10-01 13:11:25,952:INFO:Initializing create_model()
2022-10-01 13:11:25,952:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:11:25,952:INFO:Checking exceptions
2022-10-01 13:11:25,955:INFO:Importing libraries
2022-10-01 13:11:25,956:INFO:Copying training dataset
2022-10-01 13:11:25,958:INFO:Defining folds
2022-10-01 13:11:25,959:INFO:Declaring metric variables
2022-10-01 13:11:25,959:INFO:Importing untrained model
2022-10-01 13:11:25,959:INFO:Declaring custom model
2022-10-01 13:11:25,959:INFO:Linear Regression Imported successfully
2022-10-01 13:11:25,959:INFO:Starting cross validation
2022-10-01 13:11:25,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:11:26,164:INFO:Calculating mean and std
2022-10-01 13:11:26,165:INFO:Creating metrics dataframe
2022-10-01 13:11:26,166:INFO:Finalizing model
2022-10-01 13:11:26,176:INFO:Uploading results into container
2022-10-01 13:11:26,176:INFO:Uploading model into container now
2022-10-01 13:11:26,185:INFO:master_model_container: 19
2022-10-01 13:11:26,185:INFO:display_container: 3
2022-10-01 13:11:26,186:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:11:26,186:INFO:create_model() successfully completed......................................
2022-10-01 13:11:26,278:INFO:Initializing predict_model()
2022-10-01 13:11:26,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020383D24F70>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000203842BB6D0>)
2022-10-01 13:11:26,278:INFO:Checking exceptions
2022-10-01 13:11:26,278:INFO:Preloading libraries
2022-10-01 13:11:26,278:INFO:Set up data.
2022-10-01 13:11:26,281:INFO:Set up index.
2022-10-01 13:11:26,419:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:51,918:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 13:11:55,078:INFO:PyCaret RegressionExperiment
2022-10-01 13:11:55,078:INFO:Logging name: reg-default-name
2022-10-01 13:11:55,078:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 13:11:55,078:INFO:version 3.0.0.rc4
2022-10-01 13:11:55,078:INFO:Initializing setup()
2022-10-01 13:11:55,078:INFO:self.USI: ec85
2022-10-01 13:11:55,078:INFO:self.variable_keys: {'data', 'y', 'gpu_param', 'target_param', 'X', 'exp_id', 'fold_generator', 'transform_target_param', 'fold_shuffle_param', 'idx', '_available_plots', 'USI', 'master_model_container', '_all_metrics', 'display_container', 'memory', 'variable_keys', 'html_param', 'exp_name_log', 'fold_groups_param', 'X_test', 'pipeline', 'log_plots_param', '_gpu_n_jobs_param', 'y_train', '_ml_usecase', 'logging_param', '_all_models_internal', 'n_jobs_param', 'y_test', 'seed', 'X_train', 'transform_target_method_param', '_all_models'}
2022-10-01 13:11:55,078:INFO:Checking environment
2022-10-01 13:11:55,078:INFO:python_version: 3.10.7
2022-10-01 13:11:55,078:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 13:11:55,078:INFO:machine: AMD64
2022-10-01 13:11:55,090:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 13:11:55,090:INFO:Memory: svmem(total=8497213440, available=2254368768, percent=73.5, used=6242844672, free=2254368768)
2022-10-01 13:11:55,091:INFO:Physical Core: 6
2022-10-01 13:11:55,091:INFO:Logical Core: 12
2022-10-01 13:11:55,091:INFO:Checking libraries
2022-10-01 13:11:55,091:INFO:System:
2022-10-01 13:11:55,091:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 13:11:55,091:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 13:11:55,091:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 13:11:55,091:INFO:PyCaret required dependencies:
2022-10-01 13:11:55,091:INFO:                 pip: 22.2.2
2022-10-01 13:11:55,091:INFO:          setuptools: 63.2.0
2022-10-01 13:11:55,091:INFO:             pycaret: 3.0.0rc4
2022-10-01 13:11:55,091:INFO:             IPython: 8.5.0
2022-10-01 13:11:55,091:INFO:          ipywidgets: 8.0.2
2022-10-01 13:11:55,092:INFO:                tqdm: 4.64.1
2022-10-01 13:11:55,092:INFO:               numpy: 1.22.4
2022-10-01 13:11:55,092:INFO:              pandas: 1.4.4
2022-10-01 13:11:55,092:INFO:              jinja2: 3.1.2
2022-10-01 13:11:55,092:INFO:               scipy: 1.8.1
2022-10-01 13:11:55,092:INFO:              joblib: 1.2.0
2022-10-01 13:11:55,092:INFO:             sklearn: 1.1.2
2022-10-01 13:11:55,092:INFO:                pyod: 1.0.5
2022-10-01 13:11:55,092:INFO:            imblearn: 0.9.1
2022-10-01 13:11:55,092:INFO:   category_encoders: 2.5.0
2022-10-01 13:11:55,092:INFO:            lightgbm: 3.3.2
2022-10-01 13:11:55,092:INFO:               numba: 0.55.2
2022-10-01 13:11:55,092:INFO:            requests: 2.28.1
2022-10-01 13:11:55,092:INFO:          matplotlib: 3.6.0
2022-10-01 13:11:55,092:INFO:          scikitplot: 0.3.7
2022-10-01 13:11:55,092:INFO:         yellowbrick: 1.5
2022-10-01 13:11:55,093:INFO:              plotly: 5.10.0
2022-10-01 13:11:55,093:INFO:             kaleido: 0.2.1
2022-10-01 13:11:55,093:INFO:         statsmodels: 0.13.2
2022-10-01 13:11:55,093:INFO:              sktime: 0.13.4
2022-10-01 13:11:55,093:INFO:               tbats: 1.1.0
2022-10-01 13:11:55,093:INFO:            pmdarima: 1.8.5
2022-10-01 13:11:55,093:INFO:              psutil: 5.9.2
2022-10-01 13:11:55,093:INFO:PyCaret optional dependencies:
2022-10-01 13:11:55,108:INFO:                shap: Not installed
2022-10-01 13:11:55,108:INFO:           interpret: Not installed
2022-10-01 13:11:55,108:INFO:                umap: Not installed
2022-10-01 13:11:55,108:INFO:    pandas_profiling: Not installed
2022-10-01 13:11:55,108:INFO:  explainerdashboard: Not installed
2022-10-01 13:11:55,108:INFO:             autoviz: Not installed
2022-10-01 13:11:55,108:INFO:           fairlearn: Not installed
2022-10-01 13:11:55,108:INFO:             xgboost: Not installed
2022-10-01 13:11:55,108:INFO:            catboost: Not installed
2022-10-01 13:11:55,108:INFO:              kmodes: Not installed
2022-10-01 13:11:55,108:INFO:             mlxtend: Not installed
2022-10-01 13:11:55,108:INFO:       statsforecast: Not installed
2022-10-01 13:11:55,108:INFO:        tune_sklearn: Not installed
2022-10-01 13:11:55,108:INFO:                 ray: Not installed
2022-10-01 13:11:55,108:INFO:            hyperopt: Not installed
2022-10-01 13:11:55,108:INFO:              optuna: Not installed
2022-10-01 13:11:55,109:INFO:               skopt: Not installed
2022-10-01 13:11:55,109:INFO:              mlflow: Not installed
2022-10-01 13:11:55,109:INFO:              gradio: Not installed
2022-10-01 13:11:55,109:INFO:             fastapi: Not installed
2022-10-01 13:11:55,109:INFO:             uvicorn: Not installed
2022-10-01 13:11:55,109:INFO:              m2cgen: Not installed
2022-10-01 13:11:55,109:INFO:           evidently: Not installed
2022-10-01 13:11:55,109:INFO:                nltk: Not installed
2022-10-01 13:11:55,109:INFO:            pyLDAvis: Not installed
2022-10-01 13:11:55,109:INFO:              gensim: Not installed
2022-10-01 13:11:55,109:INFO:               spacy: Not installed
2022-10-01 13:11:55,109:INFO:           wordcloud: Not installed
2022-10-01 13:11:55,109:INFO:            textblob: Not installed
2022-10-01 13:11:55,109:INFO:               fugue: Not installed
2022-10-01 13:11:55,109:INFO:           streamlit: Not installed
2022-10-01 13:11:55,109:INFO:             prophet: Not installed
2022-10-01 13:11:55,109:INFO:None
2022-10-01 13:11:55,109:INFO:Set up GPU usage.
2022-10-01 13:11:55,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,109:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 13:11:55,109:INFO:Set up data.
2022-10-01 13:11:55,113:INFO:Set up train/test split.
2022-10-01 13:11:55,116:INFO:Set up index.
2022-10-01 13:11:55,116:INFO:Set up folding strategy.
2022-10-01 13:11:55,116:INFO:Assigning column types.
2022-10-01 13:11:55,118:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 13:11:55,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,119:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,123:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,128:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,182:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:55,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:55,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,623:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,630:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,636:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:55,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:55,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,003:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 13:11:56,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,010:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,017:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,366:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,372:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:56,734:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 13:11:56,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,748:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:56,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:56,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,122:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,252:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,480:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 13:11:57,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,620:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:57,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 13:11:57,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,989:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:57,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 13:11:58,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,222:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,311:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:58,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:58,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,699:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 13:11:58,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:58,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,006:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 13:11:59,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:11:59,756:INFO:Preparing preprocessing pipeline...
2022-10-01 13:11:59,756:INFO:Set up simple imputation.
2022-10-01 13:11:59,757:INFO:Set up variance threshold.
2022-10-01 13:11:59,772:INFO:Finished creating preprocessing pipeline.
2022-10-01 13:11:59,779:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 13:11:59,779:INFO:Creating final display dataframe.
2022-10-01 13:11:59,858:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              ec85
2022-10-01 13:11:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:11:59,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 13:12:00,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 13:12:00,592:INFO:setup() successfully completed in 5.51s...............
2022-10-01 13:12:00,592:INFO:Initializing compare_models()
2022-10-01 13:12:00,592:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 13:12:00,592:INFO:Checking exceptions
2022-10-01 13:12:00,594:INFO:Preparing display monitor
2022-10-01 13:12:00,597:INFO:Initializing Linear Regression
2022-10-01 13:12:00,597:INFO:Total runtime is 0.0 minutes
2022-10-01 13:12:00,597:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:00,598:INFO:Initializing create_model()
2022-10-01 13:12:00,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:00,598:INFO:Checking exceptions
2022-10-01 13:12:00,599:INFO:Importing libraries
2022-10-01 13:12:00,599:INFO:Copying training dataset
2022-10-01 13:12:00,601:INFO:Defining folds
2022-10-01 13:12:00,601:INFO:Declaring metric variables
2022-10-01 13:12:00,601:INFO:Importing untrained model
2022-10-01 13:12:00,602:INFO:Linear Regression Imported successfully
2022-10-01 13:12:00,602:INFO:Starting cross validation
2022-10-01 13:12:00,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:00,806:INFO:Calculating mean and std
2022-10-01 13:12:00,807:INFO:Creating metrics dataframe
2022-10-01 13:12:00,809:INFO:Uploading results into container
2022-10-01 13:12:00,809:INFO:Uploading model into container now
2022-10-01 13:12:00,810:INFO:master_model_container: 1
2022-10-01 13:12:00,810:INFO:display_container: 2
2022-10-01 13:12:00,810:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:00,810:INFO:create_model() successfully completed......................................
2022-10-01 13:12:00,887:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:00,887:INFO:Creating metrics dataframe
2022-10-01 13:12:00,890:INFO:Initializing Lasso Regression
2022-10-01 13:12:00,890:INFO:Total runtime is 0.004898695151011149 minutes
2022-10-01 13:12:00,891:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:00,891:INFO:Initializing create_model()
2022-10-01 13:12:00,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:00,891:INFO:Checking exceptions
2022-10-01 13:12:00,892:INFO:Importing libraries
2022-10-01 13:12:00,892:INFO:Copying training dataset
2022-10-01 13:12:00,894:INFO:Defining folds
2022-10-01 13:12:00,894:INFO:Declaring metric variables
2022-10-01 13:12:00,894:INFO:Importing untrained model
2022-10-01 13:12:00,894:INFO:Lasso Regression Imported successfully
2022-10-01 13:12:00,894:INFO:Starting cross validation
2022-10-01 13:12:00,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:00,907:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,925:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,943:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,961:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,979:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:00,996:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,014:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,032:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,050:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,067:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,074:INFO:Calculating mean and std
2022-10-01 13:12:01,075:INFO:Creating metrics dataframe
2022-10-01 13:12:01,077:INFO:Uploading results into container
2022-10-01 13:12:01,078:INFO:Uploading model into container now
2022-10-01 13:12:01,078:INFO:master_model_container: 2
2022-10-01 13:12:01,078:INFO:display_container: 2
2022-10-01 13:12:01,078:INFO:Lasso(random_state=123)
2022-10-01 13:12:01,078:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,152:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,152:INFO:Creating metrics dataframe
2022-10-01 13:12:01,156:INFO:Initializing Ridge Regression
2022-10-01 13:12:01,156:INFO:Total runtime is 0.009331377347310384 minutes
2022-10-01 13:12:01,157:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,157:INFO:Initializing create_model()
2022-10-01 13:12:01,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,157:INFO:Checking exceptions
2022-10-01 13:12:01,158:INFO:Importing libraries
2022-10-01 13:12:01,158:INFO:Copying training dataset
2022-10-01 13:12:01,159:INFO:Defining folds
2022-10-01 13:12:01,160:INFO:Declaring metric variables
2022-10-01 13:12:01,160:INFO:Importing untrained model
2022-10-01 13:12:01,160:INFO:Ridge Regression Imported successfully
2022-10-01 13:12:01,160:INFO:Starting cross validation
2022-10-01 13:12:01,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,172:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.33873e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,189:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.71007e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,205:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43731e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,222:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.73664e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,239:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.07642e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,255:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.44763e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,272:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.29773e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,289:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.62433e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,306:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52749e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,323:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.63259e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 13:12:01,331:INFO:Calculating mean and std
2022-10-01 13:12:01,332:INFO:Creating metrics dataframe
2022-10-01 13:12:01,334:INFO:Uploading results into container
2022-10-01 13:12:01,334:INFO:Uploading model into container now
2022-10-01 13:12:01,335:INFO:master_model_container: 3
2022-10-01 13:12:01,335:INFO:display_container: 2
2022-10-01 13:12:01,335:INFO:Ridge(random_state=123)
2022-10-01 13:12:01,335:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,409:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,409:INFO:Creating metrics dataframe
2022-10-01 13:12:01,413:INFO:Initializing Elastic Net
2022-10-01 13:12:01,413:INFO:Total runtime is 0.013609278202056884 minutes
2022-10-01 13:12:01,413:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,413:INFO:Initializing create_model()
2022-10-01 13:12:01,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,414:INFO:Checking exceptions
2022-10-01 13:12:01,414:INFO:Importing libraries
2022-10-01 13:12:01,415:INFO:Copying training dataset
2022-10-01 13:12:01,416:INFO:Defining folds
2022-10-01 13:12:01,416:INFO:Declaring metric variables
2022-10-01 13:12:01,416:INFO:Importing untrained model
2022-10-01 13:12:01,417:INFO:Elastic Net Imported successfully
2022-10-01 13:12:01,417:INFO:Starting cross validation
2022-10-01 13:12:01,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,432:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.616e+07, tolerance: 3.014e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.908e+07, tolerance: 2.984e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,470:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.091e+07, tolerance: 2.858e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,487:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.835e+07, tolerance: 3.150e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,505:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.051e+07, tolerance: 2.981e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,522:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+07, tolerance: 3.054e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,539:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+07, tolerance: 3.251e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,556:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.233e+07, tolerance: 3.023e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.903e+07, tolerance: 3.011e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,590:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.861e+07, tolerance: 3.257e+06
  model = cd_fast.enet_coordinate_descent(

2022-10-01 13:12:01,598:INFO:Calculating mean and std
2022-10-01 13:12:01,598:INFO:Creating metrics dataframe
2022-10-01 13:12:01,601:INFO:Uploading results into container
2022-10-01 13:12:01,601:INFO:Uploading model into container now
2022-10-01 13:12:01,601:INFO:master_model_container: 4
2022-10-01 13:12:01,601:INFO:display_container: 2
2022-10-01 13:12:01,602:INFO:ElasticNet(random_state=123)
2022-10-01 13:12:01,602:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,676:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,676:INFO:Creating metrics dataframe
2022-10-01 13:12:01,680:INFO:Initializing Least Angle Regression
2022-10-01 13:12:01,680:INFO:Total runtime is 0.01805855433146159 minutes
2022-10-01 13:12:01,680:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,681:INFO:Initializing create_model()
2022-10-01 13:12:01,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,681:INFO:Checking exceptions
2022-10-01 13:12:01,682:INFO:Importing libraries
2022-10-01 13:12:01,682:INFO:Copying training dataset
2022-10-01 13:12:01,683:INFO:Defining folds
2022-10-01 13:12:01,683:INFO:Declaring metric variables
2022-10-01 13:12:01,683:INFO:Importing untrained model
2022-10-01 13:12:01,684:INFO:Least Angle Regression Imported successfully
2022-10-01 13:12:01,684:INFO:Starting cross validation
2022-10-01 13:12:01,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,694:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,712:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,729:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,747:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,764:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,782:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,799:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,816:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,834:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,851:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:01,859:INFO:Calculating mean and std
2022-10-01 13:12:01,859:INFO:Creating metrics dataframe
2022-10-01 13:12:01,862:INFO:Uploading results into container
2022-10-01 13:12:01,862:INFO:Uploading model into container now
2022-10-01 13:12:01,863:INFO:master_model_container: 5
2022-10-01 13:12:01,863:INFO:display_container: 2
2022-10-01 13:12:01,863:INFO:Lars(random_state=123)
2022-10-01 13:12:01,863:INFO:create_model() successfully completed......................................
2022-10-01 13:12:01,938:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:01,938:INFO:Creating metrics dataframe
2022-10-01 13:12:01,942:INFO:Initializing Lasso Least Angle Regression
2022-10-01 13:12:01,942:INFO:Total runtime is 0.022424010435740153 minutes
2022-10-01 13:12:01,942:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:01,942:INFO:Initializing create_model()
2022-10-01 13:12:01,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:01,943:INFO:Checking exceptions
2022-10-01 13:12:01,944:INFO:Importing libraries
2022-10-01 13:12:01,944:INFO:Copying training dataset
2022-10-01 13:12:01,945:INFO:Defining folds
2022-10-01 13:12:01,945:INFO:Declaring metric variables
2022-10-01 13:12:01,945:INFO:Importing untrained model
2022-10-01 13:12:01,946:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 13:12:01,946:INFO:Starting cross validation
2022-10-01 13:12:01,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:01,957:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:01,974:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:01,991:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,008:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,026:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,043:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,061:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,078:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,096:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,113:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 13:12:02,121:INFO:Calculating mean and std
2022-10-01 13:12:02,122:INFO:Creating metrics dataframe
2022-10-01 13:12:02,124:INFO:Uploading results into container
2022-10-01 13:12:02,125:INFO:Uploading model into container now
2022-10-01 13:12:02,125:INFO:master_model_container: 6
2022-10-01 13:12:02,125:INFO:display_container: 2
2022-10-01 13:12:02,125:INFO:LassoLars(random_state=123)
2022-10-01 13:12:02,125:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,199:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,199:INFO:Creating metrics dataframe
2022-10-01 13:12:02,203:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 13:12:02,203:INFO:Total runtime is 0.026772427558898925 minutes
2022-10-01 13:12:02,203:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,203:INFO:Initializing create_model()
2022-10-01 13:12:02,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,203:INFO:Checking exceptions
2022-10-01 13:12:02,204:INFO:Importing libraries
2022-10-01 13:12:02,204:INFO:Copying training dataset
2022-10-01 13:12:02,206:INFO:Defining folds
2022-10-01 13:12:02,206:INFO:Declaring metric variables
2022-10-01 13:12:02,206:INFO:Importing untrained model
2022-10-01 13:12:02,206:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 13:12:02,207:INFO:Starting cross validation
2022-10-01 13:12:02,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:02,216:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,234:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,251:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,268:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,286:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,320:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,337:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,353:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,370:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 13:12:02,378:INFO:Calculating mean and std
2022-10-01 13:12:02,379:INFO:Creating metrics dataframe
2022-10-01 13:12:02,381:INFO:Uploading results into container
2022-10-01 13:12:02,382:INFO:Uploading model into container now
2022-10-01 13:12:02,382:INFO:master_model_container: 7
2022-10-01 13:12:02,382:INFO:display_container: 2
2022-10-01 13:12:02,382:INFO:OrthogonalMatchingPursuit()
2022-10-01 13:12:02,382:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,456:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,457:INFO:Creating metrics dataframe
2022-10-01 13:12:02,460:INFO:Initializing Bayesian Ridge
2022-10-01 13:12:02,461:INFO:Total runtime is 0.031071507930755617 minutes
2022-10-01 13:12:02,461:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,461:INFO:Initializing create_model()
2022-10-01 13:12:02,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,461:INFO:Checking exceptions
2022-10-01 13:12:02,462:INFO:Importing libraries
2022-10-01 13:12:02,462:INFO:Copying training dataset
2022-10-01 13:12:02,464:INFO:Defining folds
2022-10-01 13:12:02,464:INFO:Declaring metric variables
2022-10-01 13:12:02,464:INFO:Importing untrained model
2022-10-01 13:12:02,465:INFO:Bayesian Ridge Imported successfully
2022-10-01 13:12:02,465:INFO:Starting cross validation
2022-10-01 13:12:02,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:02,635:INFO:Calculating mean and std
2022-10-01 13:12:02,636:INFO:Creating metrics dataframe
2022-10-01 13:12:02,638:INFO:Uploading results into container
2022-10-01 13:12:02,638:INFO:Uploading model into container now
2022-10-01 13:12:02,639:INFO:master_model_container: 8
2022-10-01 13:12:02,639:INFO:display_container: 2
2022-10-01 13:12:02,639:INFO:BayesianRidge()
2022-10-01 13:12:02,639:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,711:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,712:INFO:Creating metrics dataframe
2022-10-01 13:12:02,716:INFO:Initializing Passive Aggressive Regressor
2022-10-01 13:12:02,716:INFO:Total runtime is 0.035320572058359784 minutes
2022-10-01 13:12:02,716:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,716:INFO:Initializing create_model()
2022-10-01 13:12:02,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,716:INFO:Checking exceptions
2022-10-01 13:12:02,717:INFO:Importing libraries
2022-10-01 13:12:02,717:INFO:Copying training dataset
2022-10-01 13:12:02,719:INFO:Defining folds
2022-10-01 13:12:02,719:INFO:Declaring metric variables
2022-10-01 13:12:02,719:INFO:Importing untrained model
2022-10-01 13:12:02,719:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 13:12:02,719:INFO:Starting cross validation
2022-10-01 13:12:02,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:02,890:INFO:Calculating mean and std
2022-10-01 13:12:02,891:INFO:Creating metrics dataframe
2022-10-01 13:12:02,893:INFO:Uploading results into container
2022-10-01 13:12:02,893:INFO:Uploading model into container now
2022-10-01 13:12:02,894:INFO:master_model_container: 9
2022-10-01 13:12:02,894:INFO:display_container: 2
2022-10-01 13:12:02,894:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 13:12:02,894:INFO:create_model() successfully completed......................................
2022-10-01 13:12:02,971:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:02,971:INFO:Creating metrics dataframe
2022-10-01 13:12:02,975:INFO:Initializing Huber Regressor
2022-10-01 13:12:02,975:INFO:Total runtime is 0.03964131275812785 minutes
2022-10-01 13:12:02,975:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:02,975:INFO:Initializing create_model()
2022-10-01 13:12:02,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:02,975:INFO:Checking exceptions
2022-10-01 13:12:02,976:INFO:Importing libraries
2022-10-01 13:12:02,976:INFO:Copying training dataset
2022-10-01 13:12:02,978:INFO:Defining folds
2022-10-01 13:12:02,978:INFO:Declaring metric variables
2022-10-01 13:12:02,978:INFO:Importing untrained model
2022-10-01 13:12:02,978:INFO:Huber Regressor Imported successfully
2022-10-01 13:12:02,979:INFO:Starting cross validation
2022-10-01 13:12:02,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:03,203:INFO:Calculating mean and std
2022-10-01 13:12:03,203:INFO:Creating metrics dataframe
2022-10-01 13:12:03,206:INFO:Uploading results into container
2022-10-01 13:12:03,206:INFO:Uploading model into container now
2022-10-01 13:12:03,207:INFO:master_model_container: 10
2022-10-01 13:12:03,207:INFO:display_container: 2
2022-10-01 13:12:03,207:INFO:HuberRegressor()
2022-10-01 13:12:03,207:INFO:create_model() successfully completed......................................
2022-10-01 13:12:03,280:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:03,280:INFO:Creating metrics dataframe
2022-10-01 13:12:03,284:INFO:Initializing K Neighbors Regressor
2022-10-01 13:12:03,284:INFO:Total runtime is 0.04479014873504639 minutes
2022-10-01 13:12:03,284:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:03,284:INFO:Initializing create_model()
2022-10-01 13:12:03,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:03,284:INFO:Checking exceptions
2022-10-01 13:12:03,285:INFO:Importing libraries
2022-10-01 13:12:03,285:INFO:Copying training dataset
2022-10-01 13:12:03,287:INFO:Defining folds
2022-10-01 13:12:03,287:INFO:Declaring metric variables
2022-10-01 13:12:03,287:INFO:Importing untrained model
2022-10-01 13:12:03,287:INFO:K Neighbors Regressor Imported successfully
2022-10-01 13:12:03,287:INFO:Starting cross validation
2022-10-01 13:12:03,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:06,626:INFO:Calculating mean and std
2022-10-01 13:12:06,627:INFO:Creating metrics dataframe
2022-10-01 13:12:06,630:INFO:Uploading results into container
2022-10-01 13:12:06,630:INFO:Uploading model into container now
2022-10-01 13:12:06,631:INFO:master_model_container: 11
2022-10-01 13:12:06,631:INFO:display_container: 2
2022-10-01 13:12:06,631:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 13:12:06,631:INFO:create_model() successfully completed......................................
2022-10-01 13:12:06,720:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:06,720:INFO:Creating metrics dataframe
2022-10-01 13:12:06,724:INFO:Initializing Decision Tree Regressor
2022-10-01 13:12:06,724:INFO:Total runtime is 0.10212409098943075 minutes
2022-10-01 13:12:06,724:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:06,725:INFO:Initializing create_model()
2022-10-01 13:12:06,725:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:06,725:INFO:Checking exceptions
2022-10-01 13:12:06,726:INFO:Importing libraries
2022-10-01 13:12:06,726:INFO:Copying training dataset
2022-10-01 13:12:06,727:INFO:Defining folds
2022-10-01 13:12:06,728:INFO:Declaring metric variables
2022-10-01 13:12:06,728:INFO:Importing untrained model
2022-10-01 13:12:06,728:INFO:Decision Tree Regressor Imported successfully
2022-10-01 13:12:06,729:INFO:Starting cross validation
2022-10-01 13:12:06,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:06,919:INFO:Calculating mean and std
2022-10-01 13:12:06,919:INFO:Creating metrics dataframe
2022-10-01 13:12:06,922:INFO:Uploading results into container
2022-10-01 13:12:06,923:INFO:Uploading model into container now
2022-10-01 13:12:06,923:INFO:master_model_container: 12
2022-10-01 13:12:06,923:INFO:display_container: 2
2022-10-01 13:12:06,923:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 13:12:06,923:INFO:create_model() successfully completed......................................
2022-10-01 13:12:06,998:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:06,998:INFO:Creating metrics dataframe
2022-10-01 13:12:07,002:INFO:Initializing Random Forest Regressor
2022-10-01 13:12:07,002:INFO:Total runtime is 0.1067568302154541 minutes
2022-10-01 13:12:07,003:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:07,003:INFO:Initializing create_model()
2022-10-01 13:12:07,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:07,003:INFO:Checking exceptions
2022-10-01 13:12:07,004:INFO:Importing libraries
2022-10-01 13:12:07,004:INFO:Copying training dataset
2022-10-01 13:12:07,005:INFO:Defining folds
2022-10-01 13:12:07,006:INFO:Declaring metric variables
2022-10-01 13:12:07,006:INFO:Importing untrained model
2022-10-01 13:12:07,006:INFO:Random Forest Regressor Imported successfully
2022-10-01 13:12:07,006:INFO:Starting cross validation
2022-10-01 13:12:07,007:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:08,211:INFO:Calculating mean and std
2022-10-01 13:12:08,211:INFO:Creating metrics dataframe
2022-10-01 13:12:08,214:INFO:Uploading results into container
2022-10-01 13:12:08,214:INFO:Uploading model into container now
2022-10-01 13:12:08,215:INFO:master_model_container: 13
2022-10-01 13:12:08,215:INFO:display_container: 2
2022-10-01 13:12:08,215:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:12:08,215:INFO:create_model() successfully completed......................................
2022-10-01 13:12:08,287:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:08,287:INFO:Creating metrics dataframe
2022-10-01 13:12:08,291:INFO:Initializing Extra Trees Regressor
2022-10-01 13:12:08,291:INFO:Total runtime is 0.12823380231857298 minutes
2022-10-01 13:12:08,291:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:08,291:INFO:Initializing create_model()
2022-10-01 13:12:08,291:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:08,291:INFO:Checking exceptions
2022-10-01 13:12:08,292:INFO:Importing libraries
2022-10-01 13:12:08,292:INFO:Copying training dataset
2022-10-01 13:12:08,294:INFO:Defining folds
2022-10-01 13:12:08,294:INFO:Declaring metric variables
2022-10-01 13:12:08,294:INFO:Importing untrained model
2022-10-01 13:12:08,294:INFO:Extra Trees Regressor Imported successfully
2022-10-01 13:12:08,295:INFO:Starting cross validation
2022-10-01 13:12:08,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:09,428:INFO:Calculating mean and std
2022-10-01 13:12:09,429:INFO:Creating metrics dataframe
2022-10-01 13:12:09,431:INFO:Uploading results into container
2022-10-01 13:12:09,432:INFO:Uploading model into container now
2022-10-01 13:12:09,432:INFO:master_model_container: 14
2022-10-01 13:12:09,432:INFO:display_container: 2
2022-10-01 13:12:09,433:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 13:12:09,433:INFO:create_model() successfully completed......................................
2022-10-01 13:12:09,505:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:09,505:INFO:Creating metrics dataframe
2022-10-01 13:12:09,509:INFO:Initializing AdaBoost Regressor
2022-10-01 13:12:09,509:INFO:Total runtime is 0.14854367971420288 minutes
2022-10-01 13:12:09,509:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:09,509:INFO:Initializing create_model()
2022-10-01 13:12:09,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:09,509:INFO:Checking exceptions
2022-10-01 13:12:09,510:INFO:Importing libraries
2022-10-01 13:12:09,510:INFO:Copying training dataset
2022-10-01 13:12:09,512:INFO:Defining folds
2022-10-01 13:12:09,512:INFO:Declaring metric variables
2022-10-01 13:12:09,512:INFO:Importing untrained model
2022-10-01 13:12:09,512:INFO:AdaBoost Regressor Imported successfully
2022-10-01 13:12:09,513:INFO:Starting cross validation
2022-10-01 13:12:09,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:10,175:INFO:Calculating mean and std
2022-10-01 13:12:10,176:INFO:Creating metrics dataframe
2022-10-01 13:12:10,178:INFO:Uploading results into container
2022-10-01 13:12:10,178:INFO:Uploading model into container now
2022-10-01 13:12:10,179:INFO:master_model_container: 15
2022-10-01 13:12:10,179:INFO:display_container: 2
2022-10-01 13:12:10,179:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 13:12:10,179:INFO:create_model() successfully completed......................................
2022-10-01 13:12:10,251:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:10,251:INFO:Creating metrics dataframe
2022-10-01 13:12:10,255:INFO:Initializing Gradient Boosting Regressor
2022-10-01 13:12:10,255:INFO:Total runtime is 0.16097259918848672 minutes
2022-10-01 13:12:10,255:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:10,255:INFO:Initializing create_model()
2022-10-01 13:12:10,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:10,255:INFO:Checking exceptions
2022-10-01 13:12:10,256:INFO:Importing libraries
2022-10-01 13:12:10,256:INFO:Copying training dataset
2022-10-01 13:12:10,258:INFO:Defining folds
2022-10-01 13:12:10,258:INFO:Declaring metric variables
2022-10-01 13:12:10,258:INFO:Importing untrained model
2022-10-01 13:12:10,258:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 13:12:10,259:INFO:Starting cross validation
2022-10-01 13:12:10,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:10,853:INFO:Calculating mean and std
2022-10-01 13:12:10,854:INFO:Creating metrics dataframe
2022-10-01 13:12:10,856:INFO:Uploading results into container
2022-10-01 13:12:10,857:INFO:Uploading model into container now
2022-10-01 13:12:10,857:INFO:master_model_container: 16
2022-10-01 13:12:10,857:INFO:display_container: 2
2022-10-01 13:12:10,857:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 13:12:10,857:INFO:create_model() successfully completed......................................
2022-10-01 13:12:10,931:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:10,931:INFO:Creating metrics dataframe
2022-10-01 13:12:10,935:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 13:12:10,935:INFO:Total runtime is 0.1723022937774658 minutes
2022-10-01 13:12:10,935:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:10,936:INFO:Initializing create_model()
2022-10-01 13:12:10,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:10,936:INFO:Checking exceptions
2022-10-01 13:12:10,937:INFO:Importing libraries
2022-10-01 13:12:10,937:INFO:Copying training dataset
2022-10-01 13:12:10,938:INFO:Defining folds
2022-10-01 13:12:10,939:INFO:Declaring metric variables
2022-10-01 13:12:10,939:INFO:Importing untrained model
2022-10-01 13:12:10,939:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 13:12:10,939:INFO:Starting cross validation
2022-10-01 13:12:10,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:15,680:INFO:Calculating mean and std
2022-10-01 13:12:15,681:INFO:Creating metrics dataframe
2022-10-01 13:12:15,684:INFO:Uploading results into container
2022-10-01 13:12:15,685:INFO:Uploading model into container now
2022-10-01 13:12:15,685:INFO:master_model_container: 17
2022-10-01 13:12:15,685:INFO:display_container: 2
2022-10-01 13:12:15,685:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 13:12:15,685:INFO:create_model() successfully completed......................................
2022-10-01 13:12:15,771:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:15,771:INFO:Creating metrics dataframe
2022-10-01 13:12:15,776:INFO:Initializing Dummy Regressor
2022-10-01 13:12:15,776:INFO:Total runtime is 0.2529852628707886 minutes
2022-10-01 13:12:15,776:INFO:SubProcess create_model() called ==================================
2022-10-01 13:12:15,777:INFO:Initializing create_model()
2022-10-01 13:12:15,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C068450A00>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:15,777:INFO:Checking exceptions
2022-10-01 13:12:15,778:INFO:Importing libraries
2022-10-01 13:12:15,778:INFO:Copying training dataset
2022-10-01 13:12:15,779:INFO:Defining folds
2022-10-01 13:12:15,779:INFO:Declaring metric variables
2022-10-01 13:12:15,779:INFO:Importing untrained model
2022-10-01 13:12:15,780:INFO:Dummy Regressor Imported successfully
2022-10-01 13:12:15,780:INFO:Starting cross validation
2022-10-01 13:12:15,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:15,935:INFO:Calculating mean and std
2022-10-01 13:12:15,936:INFO:Creating metrics dataframe
2022-10-01 13:12:15,938:INFO:Uploading results into container
2022-10-01 13:12:15,939:INFO:Uploading model into container now
2022-10-01 13:12:15,939:INFO:master_model_container: 18
2022-10-01 13:12:15,939:INFO:display_container: 2
2022-10-01 13:12:15,939:INFO:DummyRegressor()
2022-10-01 13:12:15,939:INFO:create_model() successfully completed......................................
2022-10-01 13:12:16,012:INFO:SubProcess create_model() end ==================================
2022-10-01 13:12:16,012:INFO:Creating metrics dataframe
2022-10-01 13:12:16,017:INFO:Initializing create_model()
2022-10-01 13:12:16,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:16,017:INFO:Checking exceptions
2022-10-01 13:12:16,019:INFO:Importing libraries
2022-10-01 13:12:16,019:INFO:Copying training dataset
2022-10-01 13:12:16,020:INFO:Defining folds
2022-10-01 13:12:16,020:INFO:Declaring metric variables
2022-10-01 13:12:16,020:INFO:Importing untrained model
2022-10-01 13:12:16,020:INFO:Declaring custom model
2022-10-01 13:12:16,021:INFO:Linear Regression Imported successfully
2022-10-01 13:12:16,021:INFO:Cross validation set to False
2022-10-01 13:12:16,021:INFO:Fitting Model
2022-10-01 13:12:16,030:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:16,030:INFO:create_model() successfully completed......................................
2022-10-01 13:12:16,115:INFO:master_model_container: 18
2022-10-01 13:12:16,115:INFO:display_container: 2
2022-10-01 13:12:16,115:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:16,115:INFO:compare_models() successfully completed......................................
2022-10-01 13:12:16,116:INFO:Initializing create_model()
2022-10-01 13:12:16,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 13:12:16,116:INFO:Checking exceptions
2022-10-01 13:12:16,118:INFO:Importing libraries
2022-10-01 13:12:16,118:INFO:Copying training dataset
2022-10-01 13:12:16,120:INFO:Defining folds
2022-10-01 13:12:16,120:INFO:Declaring metric variables
2022-10-01 13:12:16,120:INFO:Importing untrained model
2022-10-01 13:12:16,120:INFO:Declaring custom model
2022-10-01 13:12:16,121:INFO:Linear Regression Imported successfully
2022-10-01 13:12:16,121:INFO:Starting cross validation
2022-10-01 13:12:16,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 13:12:16,313:INFO:Calculating mean and std
2022-10-01 13:12:16,314:INFO:Creating metrics dataframe
2022-10-01 13:12:16,316:INFO:Finalizing model
2022-10-01 13:12:16,327:INFO:Uploading results into container
2022-10-01 13:12:16,327:INFO:Uploading model into container now
2022-10-01 13:12:16,337:INFO:master_model_container: 19
2022-10-01 13:12:16,337:INFO:display_container: 3
2022-10-01 13:12:16,338:INFO:LinearRegression(n_jobs=-1)
2022-10-01 13:12:16,338:INFO:create_model() successfully completed......................................
2022-10-01 13:12:16,454:INFO:Initializing predict_model()
2022-10-01 13:12:16,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C05F524F40>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C05FA62F80>)
2022-10-01 13:12:16,454:INFO:Checking exceptions
2022-10-01 13:12:16,454:INFO:Preloading libraries
2022-10-01 13:12:16,454:INFO:Set up data.
2022-10-01 13:12:16,457:INFO:Set up index.
2022-10-01 13:12:16,578:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 17:53:04,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:05,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:05,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:05,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:13,922:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 17:53:21,986:INFO:PyCaret RegressionExperiment
2022-10-01 17:53:21,987:INFO:Logging name: reg-default-name
2022-10-01 17:53:21,987:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 17:53:21,987:INFO:version 3.0.0.rc4
2022-10-01 17:53:21,987:INFO:Initializing setup()
2022-10-01 17:53:21,987:INFO:self.USI: 1555
2022-10-01 17:53:21,987:INFO:self.variable_keys: {'logging_param', 'X', '_ml_usecase', '_all_models_internal', 'y_train', '_all_metrics', 'X_train', 'y_test', 'exp_id', 'transform_target_method_param', 'master_model_container', 'display_container', 'USI', 'fold_groups_param', 'target_param', 'n_jobs_param', 'y', '_gpu_n_jobs_param', 'seed', 'idx', 'X_test', 'html_param', 'transform_target_param', 'gpu_param', 'data', 'fold_generator', 'variable_keys', '_available_plots', 'pipeline', 'fold_shuffle_param', 'exp_name_log', 'log_plots_param', 'memory', '_all_models'}
2022-10-01 17:53:21,987:INFO:Checking environment
2022-10-01 17:53:21,987:INFO:python_version: 3.10.7
2022-10-01 17:53:21,987:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 17:53:21,987:INFO:machine: AMD64
2022-10-01 17:53:22,006:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 17:53:22,020:INFO:Memory: svmem(total=8497213440, available=2897829888, percent=65.9, used=5599383552, free=2897829888)
2022-10-01 17:53:22,020:INFO:Physical Core: 6
2022-10-01 17:53:22,020:INFO:Logical Core: 12
2022-10-01 17:53:22,020:INFO:Checking libraries
2022-10-01 17:53:22,020:INFO:System:
2022-10-01 17:53:22,020:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 17:53:22,020:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 17:53:22,020:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 17:53:22,020:INFO:PyCaret required dependencies:
2022-10-01 17:53:22,020:INFO:                 pip: 22.2.2
2022-10-01 17:53:22,020:INFO:          setuptools: 63.2.0
2022-10-01 17:53:22,020:INFO:             pycaret: 3.0.0rc4
2022-10-01 17:53:22,020:INFO:             IPython: 8.5.0
2022-10-01 17:53:22,020:INFO:          ipywidgets: 8.0.2
2022-10-01 17:53:22,020:INFO:                tqdm: 4.64.1
2022-10-01 17:53:22,020:INFO:               numpy: 1.22.4
2022-10-01 17:53:22,020:INFO:              pandas: 1.4.4
2022-10-01 17:53:22,021:INFO:              jinja2: 3.1.2
2022-10-01 17:53:22,021:INFO:               scipy: 1.8.1
2022-10-01 17:53:22,021:INFO:              joblib: 1.2.0
2022-10-01 17:53:22,021:INFO:             sklearn: 1.1.2
2022-10-01 17:53:22,021:INFO:                pyod: 1.0.5
2022-10-01 17:53:22,021:INFO:            imblearn: 0.9.1
2022-10-01 17:53:22,021:INFO:   category_encoders: 2.5.0
2022-10-01 17:53:22,021:INFO:            lightgbm: 3.3.2
2022-10-01 17:53:22,021:INFO:               numba: 0.55.2
2022-10-01 17:53:22,021:INFO:            requests: 2.28.1
2022-10-01 17:53:22,021:INFO:          matplotlib: 3.6.0
2022-10-01 17:53:22,021:INFO:          scikitplot: 0.3.7
2022-10-01 17:53:22,021:INFO:         yellowbrick: 1.5
2022-10-01 17:53:22,021:INFO:              plotly: 5.10.0
2022-10-01 17:53:22,021:INFO:             kaleido: 0.2.1
2022-10-01 17:53:22,021:INFO:         statsmodels: 0.13.2
2022-10-01 17:53:22,021:INFO:              sktime: 0.13.4
2022-10-01 17:53:22,021:INFO:               tbats: 1.1.0
2022-10-01 17:53:22,021:INFO:            pmdarima: 1.8.5
2022-10-01 17:53:22,021:INFO:              psutil: 5.9.2
2022-10-01 17:53:22,021:INFO:PyCaret optional dependencies:
2022-10-01 17:53:22,035:INFO:                shap: Not installed
2022-10-01 17:53:22,035:INFO:           interpret: Not installed
2022-10-01 17:53:22,035:INFO:                umap: Not installed
2022-10-01 17:53:22,035:INFO:    pandas_profiling: Not installed
2022-10-01 17:53:22,035:INFO:  explainerdashboard: Not installed
2022-10-01 17:53:22,035:INFO:             autoviz: Not installed
2022-10-01 17:53:22,035:INFO:           fairlearn: Not installed
2022-10-01 17:53:22,035:INFO:             xgboost: Not installed
2022-10-01 17:53:22,035:INFO:            catboost: Not installed
2022-10-01 17:53:22,035:INFO:              kmodes: Not installed
2022-10-01 17:53:22,035:INFO:             mlxtend: Not installed
2022-10-01 17:53:22,036:INFO:       statsforecast: Not installed
2022-10-01 17:53:22,036:INFO:        tune_sklearn: Not installed
2022-10-01 17:53:22,036:INFO:                 ray: Not installed
2022-10-01 17:53:22,036:INFO:            hyperopt: Not installed
2022-10-01 17:53:22,036:INFO:              optuna: Not installed
2022-10-01 17:53:22,036:INFO:               skopt: Not installed
2022-10-01 17:53:22,036:INFO:              mlflow: Not installed
2022-10-01 17:53:22,036:INFO:              gradio: Not installed
2022-10-01 17:53:22,036:INFO:             fastapi: Not installed
2022-10-01 17:53:22,036:INFO:             uvicorn: Not installed
2022-10-01 17:53:22,036:INFO:              m2cgen: Not installed
2022-10-01 17:53:22,036:INFO:           evidently: Not installed
2022-10-01 17:53:22,036:INFO:                nltk: Not installed
2022-10-01 17:53:22,036:INFO:            pyLDAvis: Not installed
2022-10-01 17:53:22,036:INFO:              gensim: Not installed
2022-10-01 17:53:22,036:INFO:               spacy: Not installed
2022-10-01 17:53:22,036:INFO:           wordcloud: Not installed
2022-10-01 17:53:22,036:INFO:            textblob: Not installed
2022-10-01 17:53:22,036:INFO:               fugue: Not installed
2022-10-01 17:53:22,036:INFO:           streamlit: Not installed
2022-10-01 17:53:22,036:INFO:             prophet: Not installed
2022-10-01 17:53:22,036:INFO:None
2022-10-01 17:53:22,037:INFO:Set up GPU usage.
2022-10-01 17:53:22,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,037:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 17:53:22,037:INFO:Set up data.
2022-10-01 17:53:22,055:INFO:Set up train/test split.
2022-10-01 17:53:22,071:INFO:Set up index.
2022-10-01 17:53:22,071:INFO:Set up folding strategy.
2022-10-01 17:53:22,071:INFO:Assigning column types.
2022-10-01 17:53:22,073:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 17:53:22,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,073:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,078:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,082:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,174:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:22,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:22,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,927:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,933:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:22,940:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 17:53:22,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:23,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:23,302:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 17:53:23,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,309:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,316:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,450:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,451:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:23,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:23,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,735:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,741:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,823:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,868:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:23,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:23,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:24,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:24,093:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 17:53:24,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,107:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:24,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:24,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,484:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:24,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:24,839:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 17:53:24,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,933:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:24,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:24,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:25,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:25,198:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,198:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,291:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:25,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,337:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 17:53:25,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:25,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:25,560:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 17:53:25,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,652:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:25,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:25,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:25,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,922:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:25,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 17:53:26,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:26,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:26,276:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 17:53:26,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:26,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:26,669:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,669:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,682:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:26,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:27,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:27,039:INFO:Preparing preprocessing pipeline...
2022-10-01 17:53:27,040:INFO:Set up simple imputation.
2022-10-01 17:53:27,040:INFO:Set up variance threshold.
2022-10-01 17:53:27,243:INFO:Finished creating preprocessing pipeline.
2022-10-01 17:53:27,249:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 17:53:27,249:INFO:Creating final display dataframe.
2022-10-01 17:53:27,442:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              1555
2022-10-01 17:53:27,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:27,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:27,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:27,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:28,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:28,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 17:53:28,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:28,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 17:53:28,270:INFO:setup() successfully completed in 6.3s...............
2022-10-01 17:53:28,270:INFO:Initializing compare_models()
2022-10-01 17:53:28,270:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 17:53:28,270:INFO:Checking exceptions
2022-10-01 17:53:28,272:INFO:Preparing display monitor
2022-10-01 17:53:28,282:INFO:Initializing Linear Regression
2022-10-01 17:53:28,283:INFO:Total runtime is 1.6677379608154298e-05 minutes
2022-10-01 17:53:28,283:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:28,283:INFO:Initializing create_model()
2022-10-01 17:53:28,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:28,283:INFO:Checking exceptions
2022-10-01 17:53:28,285:INFO:Importing libraries
2022-10-01 17:53:28,286:INFO:Copying training dataset
2022-10-01 17:53:28,288:INFO:Defining folds
2022-10-01 17:53:28,288:INFO:Declaring metric variables
2022-10-01 17:53:28,288:INFO:Importing untrained model
2022-10-01 17:53:28,288:INFO:Linear Regression Imported successfully
2022-10-01 17:53:28,289:INFO:Starting cross validation
2022-10-01 17:53:28,343:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:29,345:INFO:Calculating mean and std
2022-10-01 17:53:29,346:INFO:Creating metrics dataframe
2022-10-01 17:53:29,348:INFO:Uploading results into container
2022-10-01 17:53:29,349:INFO:Uploading model into container now
2022-10-01 17:53:29,349:INFO:master_model_container: 1
2022-10-01 17:53:29,349:INFO:display_container: 2
2022-10-01 17:53:29,349:INFO:LinearRegression(n_jobs=-1)
2022-10-01 17:53:29,349:INFO:create_model() successfully completed......................................
2022-10-01 17:53:29,421:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:29,421:INFO:Creating metrics dataframe
2022-10-01 17:53:29,425:INFO:Initializing Lasso Regression
2022-10-01 17:53:29,425:INFO:Total runtime is 0.019047991434733073 minutes
2022-10-01 17:53:29,425:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:29,425:INFO:Initializing create_model()
2022-10-01 17:53:29,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:29,425:INFO:Checking exceptions
2022-10-01 17:53:29,426:INFO:Importing libraries
2022-10-01 17:53:29,426:INFO:Copying training dataset
2022-10-01 17:53:29,428:INFO:Defining folds
2022-10-01 17:53:29,428:INFO:Declaring metric variables
2022-10-01 17:53:29,428:INFO:Importing untrained model
2022-10-01 17:53:29,428:INFO:Lasso Regression Imported successfully
2022-10-01 17:53:29,428:INFO:Starting cross validation
2022-10-01 17:53:29,429:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:29,749:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:29,823:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:29,861:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:29,874:INFO:Calculating mean and std
2022-10-01 17:53:29,876:INFO:Creating metrics dataframe
2022-10-01 17:53:29,878:INFO:Uploading results into container
2022-10-01 17:53:29,878:INFO:Uploading model into container now
2022-10-01 17:53:29,879:INFO:master_model_container: 2
2022-10-01 17:53:29,879:INFO:display_container: 2
2022-10-01 17:53:29,879:INFO:Lasso(random_state=123)
2022-10-01 17:53:29,879:INFO:create_model() successfully completed......................................
2022-10-01 17:53:29,949:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:29,949:INFO:Creating metrics dataframe
2022-10-01 17:53:29,953:INFO:Initializing Ridge Regression
2022-10-01 17:53:29,953:INFO:Total runtime is 0.027863184611002602 minutes
2022-10-01 17:53:29,953:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:29,954:INFO:Initializing create_model()
2022-10-01 17:53:29,954:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:29,954:INFO:Checking exceptions
2022-10-01 17:53:29,955:INFO:Importing libraries
2022-10-01 17:53:29,955:INFO:Copying training dataset
2022-10-01 17:53:29,957:INFO:Defining folds
2022-10-01 17:53:29,957:INFO:Declaring metric variables
2022-10-01 17:53:29,958:INFO:Importing untrained model
2022-10-01 17:53:29,958:INFO:Ridge Regression Imported successfully
2022-10-01 17:53:29,958:INFO:Starting cross validation
2022-10-01 17:53:29,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:30,151:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,169:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,186:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,205:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,222:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,239:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,256:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,273:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,290:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,307:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 17:53:30,314:INFO:Calculating mean and std
2022-10-01 17:53:30,314:INFO:Creating metrics dataframe
2022-10-01 17:53:30,317:INFO:Uploading results into container
2022-10-01 17:53:30,317:INFO:Uploading model into container now
2022-10-01 17:53:30,317:INFO:master_model_container: 3
2022-10-01 17:53:30,317:INFO:display_container: 2
2022-10-01 17:53:30,318:INFO:Ridge(random_state=123)
2022-10-01 17:53:30,318:INFO:create_model() successfully completed......................................
2022-10-01 17:53:30,405:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:30,405:INFO:Creating metrics dataframe
2022-10-01 17:53:30,409:INFO:Initializing Elastic Net
2022-10-01 17:53:30,409:INFO:Total runtime is 0.03546134233474731 minutes
2022-10-01 17:53:30,410:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:30,410:INFO:Initializing create_model()
2022-10-01 17:53:30,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:30,410:INFO:Checking exceptions
2022-10-01 17:53:30,411:INFO:Importing libraries
2022-10-01 17:53:30,411:INFO:Copying training dataset
2022-10-01 17:53:30,412:INFO:Defining folds
2022-10-01 17:53:30,412:INFO:Declaring metric variables
2022-10-01 17:53:30,413:INFO:Importing untrained model
2022-10-01 17:53:30,413:INFO:Elastic Net Imported successfully
2022-10-01 17:53:30,413:INFO:Starting cross validation
2022-10-01 17:53:30,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:30,532:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:30,585:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:30,593:INFO:Calculating mean and std
2022-10-01 17:53:30,593:INFO:Creating metrics dataframe
2022-10-01 17:53:30,596:INFO:Uploading results into container
2022-10-01 17:53:30,596:INFO:Uploading model into container now
2022-10-01 17:53:30,596:INFO:master_model_container: 4
2022-10-01 17:53:30,597:INFO:display_container: 2
2022-10-01 17:53:30,597:INFO:ElasticNet(random_state=123)
2022-10-01 17:53:30,597:INFO:create_model() successfully completed......................................
2022-10-01 17:53:30,671:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:30,671:INFO:Creating metrics dataframe
2022-10-01 17:53:30,674:INFO:Initializing Least Angle Regression
2022-10-01 17:53:30,674:INFO:Total runtime is 0.03987274964650472 minutes
2022-10-01 17:53:30,674:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:30,675:INFO:Initializing create_model()
2022-10-01 17:53:30,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:30,675:INFO:Checking exceptions
2022-10-01 17:53:30,676:INFO:Importing libraries
2022-10-01 17:53:30,676:INFO:Copying training dataset
2022-10-01 17:53:30,677:INFO:Defining folds
2022-10-01 17:53:30,677:INFO:Declaring metric variables
2022-10-01 17:53:30,677:INFO:Importing untrained model
2022-10-01 17:53:30,678:INFO:Least Angle Regression Imported successfully
2022-10-01 17:53:30,678:INFO:Starting cross validation
2022-10-01 17:53:30,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:30,706:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,772:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,792:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,809:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,826:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,843:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,861:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,880:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,899:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,917:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:30,926:INFO:Calculating mean and std
2022-10-01 17:53:30,927:INFO:Creating metrics dataframe
2022-10-01 17:53:30,929:INFO:Uploading results into container
2022-10-01 17:53:30,930:INFO:Uploading model into container now
2022-10-01 17:53:30,930:INFO:master_model_container: 5
2022-10-01 17:53:30,930:INFO:display_container: 2
2022-10-01 17:53:30,930:INFO:Lars(random_state=123)
2022-10-01 17:53:30,930:INFO:create_model() successfully completed......................................
2022-10-01 17:53:31,006:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:31,028:INFO:Creating metrics dataframe
2022-10-01 17:53:31,032:INFO:Initializing Lasso Least Angle Regression
2022-10-01 17:53:31,032:INFO:Total runtime is 0.04583954413731892 minutes
2022-10-01 17:53:31,032:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:31,032:INFO:Initializing create_model()
2022-10-01 17:53:31,032:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:31,032:INFO:Checking exceptions
2022-10-01 17:53:31,033:INFO:Importing libraries
2022-10-01 17:53:31,033:INFO:Copying training dataset
2022-10-01 17:53:31,035:INFO:Defining folds
2022-10-01 17:53:31,035:INFO:Declaring metric variables
2022-10-01 17:53:31,035:INFO:Importing untrained model
2022-10-01 17:53:31,036:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 17:53:31,036:INFO:Starting cross validation
2022-10-01 17:53:31,037:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:31,047:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,065:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,084:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,102:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,120:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,138:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,156:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,173:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,191:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,208:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 17:53:31,218:INFO:Calculating mean and std
2022-10-01 17:53:31,218:INFO:Creating metrics dataframe
2022-10-01 17:53:31,221:INFO:Uploading results into container
2022-10-01 17:53:31,221:INFO:Uploading model into container now
2022-10-01 17:53:31,221:INFO:master_model_container: 6
2022-10-01 17:53:31,221:INFO:display_container: 2
2022-10-01 17:53:31,222:INFO:LassoLars(random_state=123)
2022-10-01 17:53:31,222:INFO:create_model() successfully completed......................................
2022-10-01 17:53:31,295:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:31,295:INFO:Creating metrics dataframe
2022-10-01 17:53:31,300:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 17:53:31,300:INFO:Total runtime is 0.050296922524770096 minutes
2022-10-01 17:53:31,300:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:31,300:INFO:Initializing create_model()
2022-10-01 17:53:31,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:31,300:INFO:Checking exceptions
2022-10-01 17:53:31,301:INFO:Importing libraries
2022-10-01 17:53:31,301:INFO:Copying training dataset
2022-10-01 17:53:31,303:INFO:Defining folds
2022-10-01 17:53:31,303:INFO:Declaring metric variables
2022-10-01 17:53:31,303:INFO:Importing untrained model
2022-10-01 17:53:31,303:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 17:53:31,304:INFO:Starting cross validation
2022-10-01 17:53:31,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:31,314:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,331:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,348:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,365:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,383:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,400:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,417:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,435:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,452:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,470:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 17:53:31,478:INFO:Calculating mean and std
2022-10-01 17:53:31,479:INFO:Creating metrics dataframe
2022-10-01 17:53:31,481:INFO:Uploading results into container
2022-10-01 17:53:31,482:INFO:Uploading model into container now
2022-10-01 17:53:31,482:INFO:master_model_container: 7
2022-10-01 17:53:31,482:INFO:display_container: 2
2022-10-01 17:53:31,482:INFO:OrthogonalMatchingPursuit()
2022-10-01 17:53:31,482:INFO:create_model() successfully completed......................................
2022-10-01 17:53:31,559:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:31,559:INFO:Creating metrics dataframe
2022-10-01 17:53:31,563:INFO:Initializing Bayesian Ridge
2022-10-01 17:53:31,563:INFO:Total runtime is 0.05469367901484171 minutes
2022-10-01 17:53:31,563:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:31,564:INFO:Initializing create_model()
2022-10-01 17:53:31,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:31,564:INFO:Checking exceptions
2022-10-01 17:53:31,565:INFO:Importing libraries
2022-10-01 17:53:31,565:INFO:Copying training dataset
2022-10-01 17:53:31,566:INFO:Defining folds
2022-10-01 17:53:31,566:INFO:Declaring metric variables
2022-10-01 17:53:31,566:INFO:Importing untrained model
2022-10-01 17:53:31,567:INFO:Bayesian Ridge Imported successfully
2022-10-01 17:53:31,567:INFO:Starting cross validation
2022-10-01 17:53:31,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:31,750:INFO:Calculating mean and std
2022-10-01 17:53:31,750:INFO:Creating metrics dataframe
2022-10-01 17:53:31,753:INFO:Uploading results into container
2022-10-01 17:53:31,753:INFO:Uploading model into container now
2022-10-01 17:53:31,753:INFO:master_model_container: 8
2022-10-01 17:53:31,753:INFO:display_container: 2
2022-10-01 17:53:31,753:INFO:BayesianRidge()
2022-10-01 17:53:31,755:INFO:create_model() successfully completed......................................
2022-10-01 17:53:31,829:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:31,830:INFO:Creating metrics dataframe
2022-10-01 17:53:31,834:INFO:Initializing Passive Aggressive Regressor
2022-10-01 17:53:31,834:INFO:Total runtime is 0.05919973452885945 minutes
2022-10-01 17:53:31,834:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:31,834:INFO:Initializing create_model()
2022-10-01 17:53:31,834:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:31,834:INFO:Checking exceptions
2022-10-01 17:53:31,835:INFO:Importing libraries
2022-10-01 17:53:31,835:INFO:Copying training dataset
2022-10-01 17:53:31,837:INFO:Defining folds
2022-10-01 17:53:31,837:INFO:Declaring metric variables
2022-10-01 17:53:31,837:INFO:Importing untrained model
2022-10-01 17:53:31,838:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 17:53:31,838:INFO:Starting cross validation
2022-10-01 17:53:31,838:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:32,073:INFO:Calculating mean and std
2022-10-01 17:53:32,074:INFO:Creating metrics dataframe
2022-10-01 17:53:32,076:INFO:Uploading results into container
2022-10-01 17:53:32,076:INFO:Uploading model into container now
2022-10-01 17:53:32,077:INFO:master_model_container: 9
2022-10-01 17:53:32,077:INFO:display_container: 2
2022-10-01 17:53:32,077:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 17:53:32,077:INFO:create_model() successfully completed......................................
2022-10-01 17:53:32,148:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:32,148:INFO:Creating metrics dataframe
2022-10-01 17:53:32,152:INFO:Initializing Huber Regressor
2022-10-01 17:53:32,152:INFO:Total runtime is 0.06450991233189901 minutes
2022-10-01 17:53:32,152:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:32,152:INFO:Initializing create_model()
2022-10-01 17:53:32,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:32,152:INFO:Checking exceptions
2022-10-01 17:53:32,153:INFO:Importing libraries
2022-10-01 17:53:32,153:INFO:Copying training dataset
2022-10-01 17:53:32,155:INFO:Defining folds
2022-10-01 17:53:32,155:INFO:Declaring metric variables
2022-10-01 17:53:32,155:INFO:Importing untrained model
2022-10-01 17:53:32,156:INFO:Huber Regressor Imported successfully
2022-10-01 17:53:32,156:INFO:Starting cross validation
2022-10-01 17:53:32,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:32,487:INFO:Calculating mean and std
2022-10-01 17:53:32,488:INFO:Creating metrics dataframe
2022-10-01 17:53:32,490:INFO:Uploading results into container
2022-10-01 17:53:32,491:INFO:Uploading model into container now
2022-10-01 17:53:32,491:INFO:master_model_container: 10
2022-10-01 17:53:32,491:INFO:display_container: 2
2022-10-01 17:53:32,491:INFO:HuberRegressor()
2022-10-01 17:53:32,491:INFO:create_model() successfully completed......................................
2022-10-01 17:53:32,566:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:32,566:INFO:Creating metrics dataframe
2022-10-01 17:53:32,570:INFO:Initializing K Neighbors Regressor
2022-10-01 17:53:32,570:INFO:Total runtime is 0.07146357297897339 minutes
2022-10-01 17:53:32,570:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:32,570:INFO:Initializing create_model()
2022-10-01 17:53:32,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:32,570:INFO:Checking exceptions
2022-10-01 17:53:32,571:INFO:Importing libraries
2022-10-01 17:53:32,571:INFO:Copying training dataset
2022-10-01 17:53:32,573:INFO:Defining folds
2022-10-01 17:53:32,573:INFO:Declaring metric variables
2022-10-01 17:53:32,573:INFO:Importing untrained model
2022-10-01 17:53:32,573:INFO:K Neighbors Regressor Imported successfully
2022-10-01 17:53:32,574:INFO:Starting cross validation
2022-10-01 17:53:32,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:35,416:INFO:Calculating mean and std
2022-10-01 17:53:35,417:INFO:Creating metrics dataframe
2022-10-01 17:53:35,420:INFO:Uploading results into container
2022-10-01 17:53:35,420:INFO:Uploading model into container now
2022-10-01 17:53:35,421:INFO:master_model_container: 11
2022-10-01 17:53:35,421:INFO:display_container: 2
2022-10-01 17:53:35,421:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 17:53:35,421:INFO:create_model() successfully completed......................................
2022-10-01 17:53:35,499:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:35,499:INFO:Creating metrics dataframe
2022-10-01 17:53:35,503:INFO:Initializing Decision Tree Regressor
2022-10-01 17:53:35,503:INFO:Total runtime is 0.12034782171249389 minutes
2022-10-01 17:53:35,503:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:35,503:INFO:Initializing create_model()
2022-10-01 17:53:35,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:35,503:INFO:Checking exceptions
2022-10-01 17:53:35,504:INFO:Importing libraries
2022-10-01 17:53:35,504:INFO:Copying training dataset
2022-10-01 17:53:35,506:INFO:Defining folds
2022-10-01 17:53:35,506:INFO:Declaring metric variables
2022-10-01 17:53:35,506:INFO:Importing untrained model
2022-10-01 17:53:35,506:INFO:Decision Tree Regressor Imported successfully
2022-10-01 17:53:35,506:INFO:Starting cross validation
2022-10-01 17:53:35,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:36,601:INFO:Calculating mean and std
2022-10-01 17:53:36,602:INFO:Creating metrics dataframe
2022-10-01 17:53:36,604:INFO:Uploading results into container
2022-10-01 17:53:36,605:INFO:Uploading model into container now
2022-10-01 17:53:36,605:INFO:master_model_container: 12
2022-10-01 17:53:36,605:INFO:display_container: 2
2022-10-01 17:53:36,605:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 17:53:36,605:INFO:create_model() successfully completed......................................
2022-10-01 17:53:36,683:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:36,684:INFO:Creating metrics dataframe
2022-10-01 17:53:36,687:INFO:Initializing Random Forest Regressor
2022-10-01 17:53:36,687:INFO:Total runtime is 0.14009532928466797 minutes
2022-10-01 17:53:36,688:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:36,688:INFO:Initializing create_model()
2022-10-01 17:53:36,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:36,688:INFO:Checking exceptions
2022-10-01 17:53:36,689:INFO:Importing libraries
2022-10-01 17:53:36,689:INFO:Copying training dataset
2022-10-01 17:53:36,690:INFO:Defining folds
2022-10-01 17:53:36,690:INFO:Declaring metric variables
2022-10-01 17:53:36,691:INFO:Importing untrained model
2022-10-01 17:53:36,691:INFO:Random Forest Regressor Imported successfully
2022-10-01 17:53:36,691:INFO:Starting cross validation
2022-10-01 17:53:36,692:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:38,019:INFO:Calculating mean and std
2022-10-01 17:53:38,020:INFO:Creating metrics dataframe
2022-10-01 17:53:38,022:INFO:Uploading results into container
2022-10-01 17:53:38,023:INFO:Uploading model into container now
2022-10-01 17:53:38,023:INFO:master_model_container: 13
2022-10-01 17:53:38,023:INFO:display_container: 2
2022-10-01 17:53:38,023:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 17:53:38,023:INFO:create_model() successfully completed......................................
2022-10-01 17:53:38,132:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:38,132:INFO:Creating metrics dataframe
2022-10-01 17:53:38,136:INFO:Initializing Extra Trees Regressor
2022-10-01 17:53:38,136:INFO:Total runtime is 0.16423789262771607 minutes
2022-10-01 17:53:38,136:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:38,136:INFO:Initializing create_model()
2022-10-01 17:53:38,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:38,136:INFO:Checking exceptions
2022-10-01 17:53:38,137:INFO:Importing libraries
2022-10-01 17:53:38,138:INFO:Copying training dataset
2022-10-01 17:53:38,141:INFO:Defining folds
2022-10-01 17:53:38,141:INFO:Declaring metric variables
2022-10-01 17:53:38,142:INFO:Importing untrained model
2022-10-01 17:53:38,142:INFO:Extra Trees Regressor Imported successfully
2022-10-01 17:53:38,142:INFO:Starting cross validation
2022-10-01 17:53:38,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:39,527:INFO:Calculating mean and std
2022-10-01 17:53:39,528:INFO:Creating metrics dataframe
2022-10-01 17:53:39,531:INFO:Uploading results into container
2022-10-01 17:53:39,531:INFO:Uploading model into container now
2022-10-01 17:53:39,531:INFO:master_model_container: 14
2022-10-01 17:53:39,531:INFO:display_container: 2
2022-10-01 17:53:39,532:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 17:53:39,532:INFO:create_model() successfully completed......................................
2022-10-01 17:53:39,638:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:39,638:INFO:Creating metrics dataframe
2022-10-01 17:53:39,644:INFO:Initializing AdaBoost Regressor
2022-10-01 17:53:39,644:INFO:Total runtime is 0.18937607606252035 minutes
2022-10-01 17:53:39,645:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:39,645:INFO:Initializing create_model()
2022-10-01 17:53:39,645:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:39,646:INFO:Checking exceptions
2022-10-01 17:53:39,647:INFO:Importing libraries
2022-10-01 17:53:39,647:INFO:Copying training dataset
2022-10-01 17:53:39,650:INFO:Defining folds
2022-10-01 17:53:39,650:INFO:Declaring metric variables
2022-10-01 17:53:39,650:INFO:Importing untrained model
2022-10-01 17:53:39,650:INFO:AdaBoost Regressor Imported successfully
2022-10-01 17:53:39,651:INFO:Starting cross validation
2022-10-01 17:53:39,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:40,645:INFO:Calculating mean and std
2022-10-01 17:53:40,645:INFO:Creating metrics dataframe
2022-10-01 17:53:40,650:INFO:Uploading results into container
2022-10-01 17:53:40,650:INFO:Uploading model into container now
2022-10-01 17:53:40,651:INFO:master_model_container: 15
2022-10-01 17:53:40,651:INFO:display_container: 2
2022-10-01 17:53:40,651:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 17:53:40,651:INFO:create_model() successfully completed......................................
2022-10-01 17:53:40,744:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:40,744:INFO:Creating metrics dataframe
2022-10-01 17:53:40,751:INFO:Initializing Gradient Boosting Regressor
2022-10-01 17:53:40,751:INFO:Total runtime is 0.20781982342402142 minutes
2022-10-01 17:53:40,751:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:40,752:INFO:Initializing create_model()
2022-10-01 17:53:40,752:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:40,752:INFO:Checking exceptions
2022-10-01 17:53:40,754:INFO:Importing libraries
2022-10-01 17:53:40,754:INFO:Copying training dataset
2022-10-01 17:53:40,756:INFO:Defining folds
2022-10-01 17:53:40,756:INFO:Declaring metric variables
2022-10-01 17:53:40,756:INFO:Importing untrained model
2022-10-01 17:53:40,757:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 17:53:40,757:INFO:Starting cross validation
2022-10-01 17:53:40,757:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:41,524:INFO:Calculating mean and std
2022-10-01 17:53:41,525:INFO:Creating metrics dataframe
2022-10-01 17:53:41,528:INFO:Uploading results into container
2022-10-01 17:53:41,528:INFO:Uploading model into container now
2022-10-01 17:53:41,529:INFO:master_model_container: 16
2022-10-01 17:53:41,529:INFO:display_container: 2
2022-10-01 17:53:41,529:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 17:53:41,529:INFO:create_model() successfully completed......................................
2022-10-01 17:53:41,615:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:41,615:INFO:Creating metrics dataframe
2022-10-01 17:53:41,621:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 17:53:41,621:INFO:Total runtime is 0.2223137140274048 minutes
2022-10-01 17:53:41,621:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:41,621:INFO:Initializing create_model()
2022-10-01 17:53:41,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:41,622:INFO:Checking exceptions
2022-10-01 17:53:41,623:INFO:Importing libraries
2022-10-01 17:53:41,623:INFO:Copying training dataset
2022-10-01 17:53:41,625:INFO:Defining folds
2022-10-01 17:53:41,625:INFO:Declaring metric variables
2022-10-01 17:53:41,625:INFO:Importing untrained model
2022-10-01 17:53:41,626:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 17:53:41,626:INFO:Starting cross validation
2022-10-01 17:53:41,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:46,952:INFO:Calculating mean and std
2022-10-01 17:53:46,953:INFO:Creating metrics dataframe
2022-10-01 17:53:46,956:INFO:Uploading results into container
2022-10-01 17:53:46,957:INFO:Uploading model into container now
2022-10-01 17:53:46,957:INFO:master_model_container: 17
2022-10-01 17:53:46,957:INFO:display_container: 2
2022-10-01 17:53:46,957:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 17:53:46,958:INFO:create_model() successfully completed......................................
2022-10-01 17:53:47,042:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:47,042:INFO:Creating metrics dataframe
2022-10-01 17:53:47,047:INFO:Initializing Dummy Regressor
2022-10-01 17:53:47,047:INFO:Total runtime is 0.3127591331799825 minutes
2022-10-01 17:53:47,047:INFO:SubProcess create_model() called ==================================
2022-10-01 17:53:47,048:INFO:Initializing create_model()
2022-10-01 17:53:47,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000220B1C50400>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:47,048:INFO:Checking exceptions
2022-10-01 17:53:47,049:INFO:Importing libraries
2022-10-01 17:53:47,049:INFO:Copying training dataset
2022-10-01 17:53:47,051:INFO:Defining folds
2022-10-01 17:53:47,051:INFO:Declaring metric variables
2022-10-01 17:53:47,051:INFO:Importing untrained model
2022-10-01 17:53:47,051:INFO:Dummy Regressor Imported successfully
2022-10-01 17:53:47,052:INFO:Starting cross validation
2022-10-01 17:53:47,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:47,208:INFO:Calculating mean and std
2022-10-01 17:53:47,209:INFO:Creating metrics dataframe
2022-10-01 17:53:47,211:INFO:Uploading results into container
2022-10-01 17:53:47,212:INFO:Uploading model into container now
2022-10-01 17:53:47,212:INFO:master_model_container: 18
2022-10-01 17:53:47,212:INFO:display_container: 2
2022-10-01 17:53:47,212:INFO:DummyRegressor()
2022-10-01 17:53:47,212:INFO:create_model() successfully completed......................................
2022-10-01 17:53:47,283:INFO:SubProcess create_model() end ==================================
2022-10-01 17:53:47,284:INFO:Creating metrics dataframe
2022-10-01 17:53:47,289:INFO:Initializing create_model()
2022-10-01 17:53:47,289:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:47,289:INFO:Checking exceptions
2022-10-01 17:53:47,290:INFO:Importing libraries
2022-10-01 17:53:47,290:INFO:Copying training dataset
2022-10-01 17:53:47,292:INFO:Defining folds
2022-10-01 17:53:47,292:INFO:Declaring metric variables
2022-10-01 17:53:47,292:INFO:Importing untrained model
2022-10-01 17:53:47,292:INFO:Declaring custom model
2022-10-01 17:53:47,292:INFO:Lasso Regression Imported successfully
2022-10-01 17:53:47,293:INFO:Cross validation set to False
2022-10-01 17:53:47,293:INFO:Fitting Model
2022-10-01 17:53:47,323:INFO:Lasso(random_state=123)
2022-10-01 17:53:47,323:INFO:create_model() successfully completed......................................
2022-10-01 17:53:47,407:INFO:master_model_container: 18
2022-10-01 17:53:47,407:INFO:display_container: 2
2022-10-01 17:53:47,408:INFO:Lasso(random_state=123)
2022-10-01 17:53:47,408:INFO:compare_models() successfully completed......................................
2022-10-01 17:53:47,408:INFO:Initializing create_model()
2022-10-01 17:53:47,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 17:53:47,408:INFO:Checking exceptions
2022-10-01 17:53:47,412:INFO:Importing libraries
2022-10-01 17:53:47,412:INFO:Copying training dataset
2022-10-01 17:53:47,414:INFO:Defining folds
2022-10-01 17:53:47,414:INFO:Declaring metric variables
2022-10-01 17:53:47,415:INFO:Importing untrained model
2022-10-01 17:53:47,415:INFO:Declaring custom model
2022-10-01 17:53:47,415:INFO:Lasso Regression Imported successfully
2022-10-01 17:53:47,415:INFO:Starting cross validation
2022-10-01 17:53:47,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 17:53:47,554:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:47,590:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:47,607:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 17:53:47,614:INFO:Calculating mean and std
2022-10-01 17:53:47,615:INFO:Creating metrics dataframe
2022-10-01 17:53:47,616:INFO:Finalizing model
2022-10-01 17:53:47,632:INFO:Uploading results into container
2022-10-01 17:53:47,632:INFO:Uploading model into container now
2022-10-01 17:53:47,642:INFO:master_model_container: 19
2022-10-01 17:53:47,642:INFO:display_container: 3
2022-10-01 17:53:47,643:INFO:Lasso(random_state=123)
2022-10-01 17:53:47,643:INFO:create_model() successfully completed......................................
2022-10-01 17:53:47,749:INFO:Initializing predict_model()
2022-10-01 17:53:47,749:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220A8D24F10>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000220B1CD7C70>)
2022-10-01 17:53:47,750:INFO:Checking exceptions
2022-10-01 17:53:47,750:INFO:Preloading libraries
2022-10-01 17:53:47,750:INFO:Set up data.
2022-10-01 17:53:47,753:INFO:Set up index.
2022-10-01 17:53:47,898:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 18:09:28,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:09:28,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:09:28,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:09:28,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:02,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:02,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:02,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:02,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:09,921:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 18:12:22,323:INFO:PyCaret RegressionExperiment
2022-10-01 18:12:22,323:INFO:Logging name: reg-default-name
2022-10-01 18:12:22,323:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 18:12:22,323:INFO:version 3.0.0.rc4
2022-10-01 18:12:22,323:INFO:Initializing setup()
2022-10-01 18:12:22,323:INFO:self.USI: a0be
2022-10-01 18:12:22,323:INFO:self.variable_keys: {'fold_groups_param', 'variable_keys', 'target_param', 'logging_param', '_all_models', '_available_plots', 'seed', 'y_train', '_all_models_internal', 'exp_id', 'X', 'X_test', 'gpu_param', 'exp_name_log', '_gpu_n_jobs_param', 'transform_target_method_param', 'transform_target_param', 'fold_shuffle_param', 'log_plots_param', 'idx', 'memory', '_all_metrics', 'X_train', 'y', '_ml_usecase', 'master_model_container', 'n_jobs_param', 'html_param', 'display_container', 'data', 'USI', 'fold_generator', 'pipeline', 'y_test'}
2022-10-01 18:12:22,323:INFO:Checking environment
2022-10-01 18:12:22,324:INFO:python_version: 3.10.7
2022-10-01 18:12:22,324:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 18:12:22,324:INFO:machine: AMD64
2022-10-01 18:12:22,352:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 18:12:22,371:INFO:Memory: svmem(total=8497213440, available=518029312, percent=93.9, used=7979184128, free=518029312)
2022-10-01 18:12:22,371:INFO:Physical Core: 6
2022-10-01 18:12:22,371:INFO:Logical Core: 12
2022-10-01 18:12:22,371:INFO:Checking libraries
2022-10-01 18:12:22,371:INFO:System:
2022-10-01 18:12:22,372:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 18:12:22,372:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 18:12:22,372:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 18:12:22,372:INFO:PyCaret required dependencies:
2022-10-01 18:12:22,372:INFO:                 pip: 22.2.2
2022-10-01 18:12:22,372:INFO:          setuptools: 63.2.0
2022-10-01 18:12:22,372:INFO:             pycaret: 3.0.0rc4
2022-10-01 18:12:22,372:INFO:             IPython: 8.5.0
2022-10-01 18:12:22,372:INFO:          ipywidgets: 8.0.2
2022-10-01 18:12:22,372:INFO:                tqdm: 4.64.1
2022-10-01 18:12:22,372:INFO:               numpy: 1.22.4
2022-10-01 18:12:22,372:INFO:              pandas: 1.4.4
2022-10-01 18:12:22,372:INFO:              jinja2: 3.1.2
2022-10-01 18:12:22,372:INFO:               scipy: 1.8.1
2022-10-01 18:12:22,373:INFO:              joblib: 1.2.0
2022-10-01 18:12:22,373:INFO:             sklearn: 1.1.2
2022-10-01 18:12:22,373:INFO:                pyod: 1.0.5
2022-10-01 18:12:22,373:INFO:            imblearn: 0.9.1
2022-10-01 18:12:22,373:INFO:   category_encoders: 2.5.0
2022-10-01 18:12:22,373:INFO:            lightgbm: 3.3.2
2022-10-01 18:12:22,373:INFO:               numba: 0.55.2
2022-10-01 18:12:22,373:INFO:            requests: 2.28.1
2022-10-01 18:12:22,373:INFO:          matplotlib: 3.6.0
2022-10-01 18:12:22,373:INFO:          scikitplot: 0.3.7
2022-10-01 18:12:22,373:INFO:         yellowbrick: 1.5
2022-10-01 18:12:22,373:INFO:              plotly: 5.10.0
2022-10-01 18:12:22,373:INFO:             kaleido: 0.2.1
2022-10-01 18:12:22,373:INFO:         statsmodels: 0.13.2
2022-10-01 18:12:22,373:INFO:              sktime: 0.13.4
2022-10-01 18:12:22,373:INFO:               tbats: 1.1.0
2022-10-01 18:12:22,373:INFO:            pmdarima: 1.8.5
2022-10-01 18:12:22,374:INFO:              psutil: 5.9.2
2022-10-01 18:12:22,374:INFO:PyCaret optional dependencies:
2022-10-01 18:12:22,388:INFO:                shap: Not installed
2022-10-01 18:12:22,388:INFO:           interpret: Not installed
2022-10-01 18:12:22,388:INFO:                umap: Not installed
2022-10-01 18:12:22,388:INFO:    pandas_profiling: Not installed
2022-10-01 18:12:22,389:INFO:  explainerdashboard: Not installed
2022-10-01 18:12:22,389:INFO:             autoviz: Not installed
2022-10-01 18:12:22,389:INFO:           fairlearn: Not installed
2022-10-01 18:12:22,389:INFO:             xgboost: Not installed
2022-10-01 18:12:22,389:INFO:            catboost: Not installed
2022-10-01 18:12:22,389:INFO:              kmodes: Not installed
2022-10-01 18:12:22,389:INFO:             mlxtend: Not installed
2022-10-01 18:12:22,389:INFO:       statsforecast: Not installed
2022-10-01 18:12:22,389:INFO:        tune_sklearn: Not installed
2022-10-01 18:12:22,389:INFO:                 ray: Not installed
2022-10-01 18:12:22,389:INFO:            hyperopt: Not installed
2022-10-01 18:12:22,389:INFO:              optuna: Not installed
2022-10-01 18:12:22,389:INFO:               skopt: Not installed
2022-10-01 18:12:22,389:INFO:              mlflow: Not installed
2022-10-01 18:12:22,389:INFO:              gradio: Not installed
2022-10-01 18:12:22,389:INFO:             fastapi: Not installed
2022-10-01 18:12:22,389:INFO:             uvicorn: Not installed
2022-10-01 18:12:22,389:INFO:              m2cgen: Not installed
2022-10-01 18:12:22,389:INFO:           evidently: Not installed
2022-10-01 18:12:22,389:INFO:                nltk: Not installed
2022-10-01 18:12:22,389:INFO:            pyLDAvis: Not installed
2022-10-01 18:12:22,389:INFO:              gensim: Not installed
2022-10-01 18:12:22,389:INFO:               spacy: Not installed
2022-10-01 18:12:22,390:INFO:           wordcloud: Not installed
2022-10-01 18:12:22,390:INFO:            textblob: Not installed
2022-10-01 18:12:22,390:INFO:               fugue: Not installed
2022-10-01 18:12:22,390:INFO:           streamlit: Not installed
2022-10-01 18:12:22,390:INFO:             prophet: Not installed
2022-10-01 18:12:22,390:INFO:None
2022-10-01 18:12:22,390:INFO:Set up GPU usage.
2022-10-01 18:12:22,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,390:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 18:12:22,390:INFO:Set up data.
2022-10-01 18:12:22,428:INFO:Set up train/test split.
2022-10-01 18:12:22,440:INFO:Set up index.
2022-10-01 18:12:22,440:INFO:Set up folding strategy.
2022-10-01 18:12:22,440:INFO:Assigning column types.
2022-10-01 18:12:22,443:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 18:12:22,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,443:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:12:22,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,447:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:12:22,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,452:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:12:22,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:22,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:22,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:22,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:23,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:23,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:23,942:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:12:23,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:23,955:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:12:23,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:23,963:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:12:23,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,050:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:24,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:24,467:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 18:12:24,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,475:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,482:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,483:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:24,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:24,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,953:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:24,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:12:24,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,056:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:25,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:25,394:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 18:12:25,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,409:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,409:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,503:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:25,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:25,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,895:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:25,981:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:25,981:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,024:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:26,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:26,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:26,312:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 18:12:26,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,417:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:26,417:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:26,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:26,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:26,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:26,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:12:26,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:26,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:27,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:27,285:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 18:12:27,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,387:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:27,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:27,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:27,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,798:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:12:27,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:27,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:28,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:28,231:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 18:12:28,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:28,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:28,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:28,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:29,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:29,211:INFO:Preparing preprocessing pipeline...
2022-10-01 18:12:29,212:INFO:Set up simple imputation.
2022-10-01 18:12:29,212:INFO:Set up variance threshold.
2022-10-01 18:12:29,328:INFO:Finished creating preprocessing pipeline.
2022-10-01 18:12:29,351:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 18:12:29,351:INFO:Creating final display dataframe.
2022-10-01 18:12:29,424:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              a0be
2022-10-01 18:12:29,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,439:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:29,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:29,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:29,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:30,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:30,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:30,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:12:30,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:30,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:12:30,371:INFO:setup() successfully completed in 8.09s...............
2022-10-01 18:12:30,371:INFO:Initializing compare_models()
2022-10-01 18:12:30,371:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 18:12:30,371:INFO:Checking exceptions
2022-10-01 18:12:30,373:INFO:Preparing display monitor
2022-10-01 18:12:30,378:INFO:Initializing Linear Regression
2022-10-01 18:12:30,379:INFO:Total runtime is 1.6669432322184246e-05 minutes
2022-10-01 18:12:30,379:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:30,379:INFO:Initializing create_model()
2022-10-01 18:12:30,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:30,379:INFO:Checking exceptions
2022-10-01 18:12:30,381:INFO:Importing libraries
2022-10-01 18:12:30,381:INFO:Copying training dataset
2022-10-01 18:12:30,383:INFO:Defining folds
2022-10-01 18:12:30,383:INFO:Declaring metric variables
2022-10-01 18:12:30,384:INFO:Importing untrained model
2022-10-01 18:12:30,384:INFO:Linear Regression Imported successfully
2022-10-01 18:12:30,384:INFO:Starting cross validation
2022-10-01 18:12:30,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:31,136:INFO:Calculating mean and std
2022-10-01 18:12:31,137:INFO:Creating metrics dataframe
2022-10-01 18:12:31,139:INFO:Uploading results into container
2022-10-01 18:12:31,140:INFO:Uploading model into container now
2022-10-01 18:12:31,140:INFO:master_model_container: 1
2022-10-01 18:12:31,140:INFO:display_container: 2
2022-10-01 18:12:31,140:INFO:LinearRegression(n_jobs=-1)
2022-10-01 18:12:31,140:INFO:create_model() successfully completed......................................
2022-10-01 18:12:31,234:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:31,234:INFO:Creating metrics dataframe
2022-10-01 18:12:31,261:INFO:Initializing Lasso Regression
2022-10-01 18:12:31,261:INFO:Total runtime is 0.014707990487416585 minutes
2022-10-01 18:12:31,261:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:31,261:INFO:Initializing create_model()
2022-10-01 18:12:31,261:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:31,261:INFO:Checking exceptions
2022-10-01 18:12:31,262:INFO:Importing libraries
2022-10-01 18:12:31,263:INFO:Copying training dataset
2022-10-01 18:12:31,264:INFO:Defining folds
2022-10-01 18:12:31,264:INFO:Declaring metric variables
2022-10-01 18:12:31,265:INFO:Importing untrained model
2022-10-01 18:12:31,265:INFO:Lasso Regression Imported successfully
2022-10-01 18:12:31,265:INFO:Starting cross validation
2022-10-01 18:12:31,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:31,534:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:12:31,577:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:12:31,597:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:12:31,606:INFO:Calculating mean and std
2022-10-01 18:12:31,607:INFO:Creating metrics dataframe
2022-10-01 18:12:31,609:INFO:Uploading results into container
2022-10-01 18:12:31,610:INFO:Uploading model into container now
2022-10-01 18:12:31,610:INFO:master_model_container: 2
2022-10-01 18:12:31,610:INFO:display_container: 2
2022-10-01 18:12:31,610:INFO:Lasso(random_state=123)
2022-10-01 18:12:31,610:INFO:create_model() successfully completed......................................
2022-10-01 18:12:31,699:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:31,700:INFO:Creating metrics dataframe
2022-10-01 18:12:31,703:INFO:Initializing Ridge Regression
2022-10-01 18:12:31,704:INFO:Total runtime is 0.022095656394958495 minutes
2022-10-01 18:12:31,704:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:31,704:INFO:Initializing create_model()
2022-10-01 18:12:31,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:31,704:INFO:Checking exceptions
2022-10-01 18:12:31,705:INFO:Importing libraries
2022-10-01 18:12:31,705:INFO:Copying training dataset
2022-10-01 18:12:31,707:INFO:Defining folds
2022-10-01 18:12:31,707:INFO:Declaring metric variables
2022-10-01 18:12:31,707:INFO:Importing untrained model
2022-10-01 18:12:31,708:INFO:Ridge Regression Imported successfully
2022-10-01 18:12:31,708:INFO:Starting cross validation
2022-10-01 18:12:31,708:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:31,879:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:31,899:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:31,921:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:31,944:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:31,967:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:31,986:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:32,007:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:32,026:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:32,046:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:32,065:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:12:32,074:INFO:Calculating mean and std
2022-10-01 18:12:32,075:INFO:Creating metrics dataframe
2022-10-01 18:12:32,078:INFO:Uploading results into container
2022-10-01 18:12:32,078:INFO:Uploading model into container now
2022-10-01 18:12:32,079:INFO:master_model_container: 3
2022-10-01 18:12:32,079:INFO:display_container: 2
2022-10-01 18:12:32,079:INFO:Ridge(random_state=123)
2022-10-01 18:12:32,079:INFO:create_model() successfully completed......................................
2022-10-01 18:12:32,165:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:32,166:INFO:Creating metrics dataframe
2022-10-01 18:12:32,169:INFO:Initializing Elastic Net
2022-10-01 18:12:32,169:INFO:Total runtime is 0.02984759012858073 minutes
2022-10-01 18:12:32,169:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:32,170:INFO:Initializing create_model()
2022-10-01 18:12:32,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:32,170:INFO:Checking exceptions
2022-10-01 18:12:32,171:INFO:Importing libraries
2022-10-01 18:12:32,171:INFO:Copying training dataset
2022-10-01 18:12:32,172:INFO:Defining folds
2022-10-01 18:12:32,172:INFO:Declaring metric variables
2022-10-01 18:12:32,173:INFO:Importing untrained model
2022-10-01 18:12:32,173:INFO:Elastic Net Imported successfully
2022-10-01 18:12:32,173:INFO:Starting cross validation
2022-10-01 18:12:32,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:32,312:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:12:32,373:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:12:32,382:INFO:Calculating mean and std
2022-10-01 18:12:32,382:INFO:Creating metrics dataframe
2022-10-01 18:12:32,385:INFO:Uploading results into container
2022-10-01 18:12:32,386:INFO:Uploading model into container now
2022-10-01 18:12:32,386:INFO:master_model_container: 4
2022-10-01 18:12:32,386:INFO:display_container: 2
2022-10-01 18:12:32,386:INFO:ElasticNet(random_state=123)
2022-10-01 18:12:32,386:INFO:create_model() successfully completed......................................
2022-10-01 18:12:32,476:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:32,476:INFO:Creating metrics dataframe
2022-10-01 18:12:32,481:INFO:Initializing Least Angle Regression
2022-10-01 18:12:32,481:INFO:Total runtime is 0.03504032691319783 minutes
2022-10-01 18:12:32,481:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:32,481:INFO:Initializing create_model()
2022-10-01 18:12:32,481:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:32,481:INFO:Checking exceptions
2022-10-01 18:12:32,482:INFO:Importing libraries
2022-10-01 18:12:32,483:INFO:Copying training dataset
2022-10-01 18:12:32,485:INFO:Defining folds
2022-10-01 18:12:32,485:INFO:Declaring metric variables
2022-10-01 18:12:32,485:INFO:Importing untrained model
2022-10-01 18:12:32,485:INFO:Least Angle Regression Imported successfully
2022-10-01 18:12:32,486:INFO:Starting cross validation
2022-10-01 18:12:32,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:32,515:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,629:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,648:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,670:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,694:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,715:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,739:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,760:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,782:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,803:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:32,814:INFO:Calculating mean and std
2022-10-01 18:12:32,814:INFO:Creating metrics dataframe
2022-10-01 18:12:32,817:INFO:Uploading results into container
2022-10-01 18:12:32,818:INFO:Uploading model into container now
2022-10-01 18:12:32,818:INFO:master_model_container: 5
2022-10-01 18:12:32,818:INFO:display_container: 2
2022-10-01 18:12:32,818:INFO:Lars(random_state=123)
2022-10-01 18:12:32,818:INFO:create_model() successfully completed......................................
2022-10-01 18:12:32,909:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:32,909:INFO:Creating metrics dataframe
2022-10-01 18:12:32,914:INFO:Initializing Lasso Least Angle Regression
2022-10-01 18:12:32,914:INFO:Total runtime is 0.0422695795694987 minutes
2022-10-01 18:12:32,914:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:32,914:INFO:Initializing create_model()
2022-10-01 18:12:32,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:32,915:INFO:Checking exceptions
2022-10-01 18:12:32,916:INFO:Importing libraries
2022-10-01 18:12:32,916:INFO:Copying training dataset
2022-10-01 18:12:32,917:INFO:Defining folds
2022-10-01 18:12:32,918:INFO:Declaring metric variables
2022-10-01 18:12:32,918:INFO:Importing untrained model
2022-10-01 18:12:32,918:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 18:12:32,918:INFO:Starting cross validation
2022-10-01 18:12:32,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:32,930:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:32,955:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:32,976:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:32,995:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,015:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,036:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,056:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,076:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,098:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,118:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:12:33,127:INFO:Calculating mean and std
2022-10-01 18:12:33,128:INFO:Creating metrics dataframe
2022-10-01 18:12:33,131:INFO:Uploading results into container
2022-10-01 18:12:33,131:INFO:Uploading model into container now
2022-10-01 18:12:33,132:INFO:master_model_container: 6
2022-10-01 18:12:33,132:INFO:display_container: 2
2022-10-01 18:12:33,132:INFO:LassoLars(random_state=123)
2022-10-01 18:12:33,132:INFO:create_model() successfully completed......................................
2022-10-01 18:12:33,223:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:33,223:INFO:Creating metrics dataframe
2022-10-01 18:12:33,227:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 18:12:33,227:INFO:Total runtime is 0.04747695922851563 minutes
2022-10-01 18:12:33,227:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:33,228:INFO:Initializing create_model()
2022-10-01 18:12:33,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:33,228:INFO:Checking exceptions
2022-10-01 18:12:33,229:INFO:Importing libraries
2022-10-01 18:12:33,229:INFO:Copying training dataset
2022-10-01 18:12:33,232:INFO:Defining folds
2022-10-01 18:12:33,232:INFO:Declaring metric variables
2022-10-01 18:12:33,232:INFO:Importing untrained model
2022-10-01 18:12:33,232:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 18:12:33,232:INFO:Starting cross validation
2022-10-01 18:12:33,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:33,243:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,266:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,289:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,309:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,328:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,348:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,368:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,390:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,411:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,433:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:12:33,443:INFO:Calculating mean and std
2022-10-01 18:12:33,444:INFO:Creating metrics dataframe
2022-10-01 18:12:33,447:INFO:Uploading results into container
2022-10-01 18:12:33,447:INFO:Uploading model into container now
2022-10-01 18:12:33,448:INFO:master_model_container: 7
2022-10-01 18:12:33,448:INFO:display_container: 2
2022-10-01 18:12:33,448:INFO:OrthogonalMatchingPursuit()
2022-10-01 18:12:33,448:INFO:create_model() successfully completed......................................
2022-10-01 18:12:33,540:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:33,540:INFO:Creating metrics dataframe
2022-10-01 18:12:33,544:INFO:Initializing Bayesian Ridge
2022-10-01 18:12:33,544:INFO:Total runtime is 0.05275396505991618 minutes
2022-10-01 18:12:33,544:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:33,544:INFO:Initializing create_model()
2022-10-01 18:12:33,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:33,545:INFO:Checking exceptions
2022-10-01 18:12:33,546:INFO:Importing libraries
2022-10-01 18:12:33,546:INFO:Copying training dataset
2022-10-01 18:12:33,548:INFO:Defining folds
2022-10-01 18:12:33,548:INFO:Declaring metric variables
2022-10-01 18:12:33,548:INFO:Importing untrained model
2022-10-01 18:12:33,548:INFO:Bayesian Ridge Imported successfully
2022-10-01 18:12:33,548:INFO:Starting cross validation
2022-10-01 18:12:33,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:33,769:INFO:Calculating mean and std
2022-10-01 18:12:33,769:INFO:Creating metrics dataframe
2022-10-01 18:12:33,772:INFO:Uploading results into container
2022-10-01 18:12:33,773:INFO:Uploading model into container now
2022-10-01 18:12:33,773:INFO:master_model_container: 8
2022-10-01 18:12:33,773:INFO:display_container: 2
2022-10-01 18:12:33,773:INFO:BayesianRidge()
2022-10-01 18:12:33,773:INFO:create_model() successfully completed......................................
2022-10-01 18:12:33,869:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:33,869:INFO:Creating metrics dataframe
2022-10-01 18:12:33,874:INFO:Initializing Passive Aggressive Regressor
2022-10-01 18:12:33,874:INFO:Total runtime is 0.058266659577687584 minutes
2022-10-01 18:12:33,874:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:33,874:INFO:Initializing create_model()
2022-10-01 18:12:33,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:33,874:INFO:Checking exceptions
2022-10-01 18:12:33,875:INFO:Importing libraries
2022-10-01 18:12:33,875:INFO:Copying training dataset
2022-10-01 18:12:33,877:INFO:Defining folds
2022-10-01 18:12:33,877:INFO:Declaring metric variables
2022-10-01 18:12:33,878:INFO:Importing untrained model
2022-10-01 18:12:33,878:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 18:12:33,878:INFO:Starting cross validation
2022-10-01 18:12:33,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:34,168:INFO:Calculating mean and std
2022-10-01 18:12:34,169:INFO:Creating metrics dataframe
2022-10-01 18:12:34,172:INFO:Uploading results into container
2022-10-01 18:12:34,173:INFO:Uploading model into container now
2022-10-01 18:12:34,173:INFO:master_model_container: 9
2022-10-01 18:12:34,173:INFO:display_container: 2
2022-10-01 18:12:34,173:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 18:12:34,173:INFO:create_model() successfully completed......................................
2022-10-01 18:12:34,264:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:34,264:INFO:Creating metrics dataframe
2022-10-01 18:12:34,268:INFO:Initializing Huber Regressor
2022-10-01 18:12:34,269:INFO:Total runtime is 0.0648421049118042 minutes
2022-10-01 18:12:34,269:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:34,269:INFO:Initializing create_model()
2022-10-01 18:12:34,269:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:34,269:INFO:Checking exceptions
2022-10-01 18:12:34,270:INFO:Importing libraries
2022-10-01 18:12:34,270:INFO:Copying training dataset
2022-10-01 18:12:34,272:INFO:Defining folds
2022-10-01 18:12:34,272:INFO:Declaring metric variables
2022-10-01 18:12:34,272:INFO:Importing untrained model
2022-10-01 18:12:34,273:INFO:Huber Regressor Imported successfully
2022-10-01 18:12:34,273:INFO:Starting cross validation
2022-10-01 18:12:34,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:12:34,614:INFO:Calculating mean and std
2022-10-01 18:12:34,615:INFO:Creating metrics dataframe
2022-10-01 18:12:34,617:INFO:Uploading results into container
2022-10-01 18:12:34,618:INFO:Uploading model into container now
2022-10-01 18:12:34,618:INFO:master_model_container: 10
2022-10-01 18:12:34,618:INFO:display_container: 2
2022-10-01 18:12:34,618:INFO:HuberRegressor()
2022-10-01 18:12:34,619:INFO:create_model() successfully completed......................................
2022-10-01 18:12:34,704:INFO:SubProcess create_model() end ==================================
2022-10-01 18:12:34,704:INFO:Creating metrics dataframe
2022-10-01 18:12:34,709:INFO:Initializing K Neighbors Regressor
2022-10-01 18:12:34,709:INFO:Total runtime is 0.07217868566513061 minutes
2022-10-01 18:12:34,709:INFO:SubProcess create_model() called ==================================
2022-10-01 18:12:34,710:INFO:Initializing create_model()
2022-10-01 18:12:34,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:12:34,710:INFO:Checking exceptions
2022-10-01 18:12:34,711:INFO:Importing libraries
2022-10-01 18:12:34,711:INFO:Copying training dataset
2022-10-01 18:12:34,713:INFO:Defining folds
2022-10-01 18:12:34,713:INFO:Declaring metric variables
2022-10-01 18:12:34,714:INFO:Importing untrained model
2022-10-01 18:12:34,714:INFO:K Neighbors Regressor Imported successfully
2022-10-01 18:12:34,714:INFO:Starting cross validation
2022-10-01 18:12:34,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:20,047:INFO:Calculating mean and std
2022-10-01 18:13:20,047:INFO:Creating metrics dataframe
2022-10-01 18:13:20,050:INFO:Uploading results into container
2022-10-01 18:13:20,050:INFO:Uploading model into container now
2022-10-01 18:13:20,051:INFO:master_model_container: 11
2022-10-01 18:13:20,051:INFO:display_container: 2
2022-10-01 18:13:20,051:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 18:13:20,051:INFO:create_model() successfully completed......................................
2022-10-01 18:13:20,138:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:20,138:INFO:Creating metrics dataframe
2022-10-01 18:13:20,142:INFO:Initializing Decision Tree Regressor
2022-10-01 18:13:20,142:INFO:Total runtime is 0.829402502377828 minutes
2022-10-01 18:13:20,142:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:20,142:INFO:Initializing create_model()
2022-10-01 18:13:20,142:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:20,142:INFO:Checking exceptions
2022-10-01 18:13:20,143:INFO:Importing libraries
2022-10-01 18:13:20,144:INFO:Copying training dataset
2022-10-01 18:13:20,145:INFO:Defining folds
2022-10-01 18:13:20,145:INFO:Declaring metric variables
2022-10-01 18:13:20,145:INFO:Importing untrained model
2022-10-01 18:13:20,146:INFO:Decision Tree Regressor Imported successfully
2022-10-01 18:13:20,146:INFO:Starting cross validation
2022-10-01 18:13:20,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:20,508:INFO:Calculating mean and std
2022-10-01 18:13:20,508:INFO:Creating metrics dataframe
2022-10-01 18:13:20,511:INFO:Uploading results into container
2022-10-01 18:13:20,511:INFO:Uploading model into container now
2022-10-01 18:13:20,511:INFO:master_model_container: 12
2022-10-01 18:13:20,512:INFO:display_container: 2
2022-10-01 18:13:20,512:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 18:13:20,512:INFO:create_model() successfully completed......................................
2022-10-01 18:13:20,593:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:20,593:INFO:Creating metrics dataframe
2022-10-01 18:13:20,597:INFO:Initializing Random Forest Regressor
2022-10-01 18:13:20,597:INFO:Total runtime is 0.8369855920473734 minutes
2022-10-01 18:13:20,597:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:20,597:INFO:Initializing create_model()
2022-10-01 18:13:20,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:20,597:INFO:Checking exceptions
2022-10-01 18:13:20,598:INFO:Importing libraries
2022-10-01 18:13:20,598:INFO:Copying training dataset
2022-10-01 18:13:20,600:INFO:Defining folds
2022-10-01 18:13:20,600:INFO:Declaring metric variables
2022-10-01 18:13:20,600:INFO:Importing untrained model
2022-10-01 18:13:20,600:INFO:Random Forest Regressor Imported successfully
2022-10-01 18:13:20,601:INFO:Starting cross validation
2022-10-01 18:13:20,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:22,613:INFO:Calculating mean and std
2022-10-01 18:13:22,613:INFO:Creating metrics dataframe
2022-10-01 18:13:22,616:INFO:Uploading results into container
2022-10-01 18:13:22,616:INFO:Uploading model into container now
2022-10-01 18:13:22,617:INFO:master_model_container: 13
2022-10-01 18:13:22,617:INFO:display_container: 2
2022-10-01 18:13:22,617:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:13:22,617:INFO:create_model() successfully completed......................................
2022-10-01 18:13:22,699:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:22,699:INFO:Creating metrics dataframe
2022-10-01 18:13:22,704:INFO:Initializing Extra Trees Regressor
2022-10-01 18:13:22,704:INFO:Total runtime is 0.8720879554748535 minutes
2022-10-01 18:13:22,705:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:22,705:INFO:Initializing create_model()
2022-10-01 18:13:22,705:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:22,705:INFO:Checking exceptions
2022-10-01 18:13:22,706:INFO:Importing libraries
2022-10-01 18:13:22,706:INFO:Copying training dataset
2022-10-01 18:13:22,707:INFO:Defining folds
2022-10-01 18:13:22,707:INFO:Declaring metric variables
2022-10-01 18:13:22,708:INFO:Importing untrained model
2022-10-01 18:13:22,708:INFO:Extra Trees Regressor Imported successfully
2022-10-01 18:13:22,708:INFO:Starting cross validation
2022-10-01 18:13:22,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:23,925:INFO:Calculating mean and std
2022-10-01 18:13:23,926:INFO:Creating metrics dataframe
2022-10-01 18:13:23,929:INFO:Uploading results into container
2022-10-01 18:13:23,930:INFO:Uploading model into container now
2022-10-01 18:13:23,930:INFO:master_model_container: 14
2022-10-01 18:13:23,930:INFO:display_container: 2
2022-10-01 18:13:23,930:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:13:23,930:INFO:create_model() successfully completed......................................
2022-10-01 18:13:24,010:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:24,010:INFO:Creating metrics dataframe
2022-10-01 18:13:24,014:INFO:Initializing AdaBoost Regressor
2022-10-01 18:13:24,014:INFO:Total runtime is 0.8939242641131083 minutes
2022-10-01 18:13:24,014:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:24,014:INFO:Initializing create_model()
2022-10-01 18:13:24,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:24,014:INFO:Checking exceptions
2022-10-01 18:13:24,015:INFO:Importing libraries
2022-10-01 18:13:24,015:INFO:Copying training dataset
2022-10-01 18:13:24,017:INFO:Defining folds
2022-10-01 18:13:24,017:INFO:Declaring metric variables
2022-10-01 18:13:24,017:INFO:Importing untrained model
2022-10-01 18:13:24,017:INFO:AdaBoost Regressor Imported successfully
2022-10-01 18:13:24,018:INFO:Starting cross validation
2022-10-01 18:13:24,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:24,844:INFO:Calculating mean and std
2022-10-01 18:13:24,844:INFO:Creating metrics dataframe
2022-10-01 18:13:24,847:INFO:Uploading results into container
2022-10-01 18:13:24,847:INFO:Uploading model into container now
2022-10-01 18:13:24,847:INFO:master_model_container: 15
2022-10-01 18:13:24,848:INFO:display_container: 2
2022-10-01 18:13:24,848:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 18:13:24,848:INFO:create_model() successfully completed......................................
2022-10-01 18:13:24,923:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:24,923:INFO:Creating metrics dataframe
2022-10-01 18:13:24,927:INFO:Initializing Gradient Boosting Regressor
2022-10-01 18:13:24,927:INFO:Total runtime is 0.9091384172439575 minutes
2022-10-01 18:13:24,927:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:24,928:INFO:Initializing create_model()
2022-10-01 18:13:24,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:24,928:INFO:Checking exceptions
2022-10-01 18:13:24,929:INFO:Importing libraries
2022-10-01 18:13:24,929:INFO:Copying training dataset
2022-10-01 18:13:24,931:INFO:Defining folds
2022-10-01 18:13:24,931:INFO:Declaring metric variables
2022-10-01 18:13:24,931:INFO:Importing untrained model
2022-10-01 18:13:24,931:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 18:13:24,932:INFO:Starting cross validation
2022-10-01 18:13:24,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:25,566:INFO:Calculating mean and std
2022-10-01 18:13:25,567:INFO:Creating metrics dataframe
2022-10-01 18:13:25,570:INFO:Uploading results into container
2022-10-01 18:13:25,570:INFO:Uploading model into container now
2022-10-01 18:13:25,570:INFO:master_model_container: 16
2022-10-01 18:13:25,570:INFO:display_container: 2
2022-10-01 18:13:25,571:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 18:13:25,571:INFO:create_model() successfully completed......................................
2022-10-01 18:13:25,652:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:25,652:INFO:Creating metrics dataframe
2022-10-01 18:13:25,656:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 18:13:25,656:INFO:Total runtime is 0.921291716893514 minutes
2022-10-01 18:13:25,656:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:25,656:INFO:Initializing create_model()
2022-10-01 18:13:25,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:25,657:INFO:Checking exceptions
2022-10-01 18:13:25,658:INFO:Importing libraries
2022-10-01 18:13:25,658:INFO:Copying training dataset
2022-10-01 18:13:25,659:INFO:Defining folds
2022-10-01 18:13:25,659:INFO:Declaring metric variables
2022-10-01 18:13:25,659:INFO:Importing untrained model
2022-10-01 18:13:25,660:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 18:13:25,660:INFO:Starting cross validation
2022-10-01 18:13:25,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:31,272:INFO:Calculating mean and std
2022-10-01 18:13:31,273:INFO:Creating metrics dataframe
2022-10-01 18:13:31,279:INFO:Uploading results into container
2022-10-01 18:13:31,279:INFO:Uploading model into container now
2022-10-01 18:13:31,280:INFO:master_model_container: 17
2022-10-01 18:13:31,280:INFO:display_container: 2
2022-10-01 18:13:31,280:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 18:13:31,281:INFO:create_model() successfully completed......................................
2022-10-01 18:13:31,380:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:31,380:INFO:Creating metrics dataframe
2022-10-01 18:13:31,384:INFO:Initializing Dummy Regressor
2022-10-01 18:13:31,384:INFO:Total runtime is 1.0167611638704936 minutes
2022-10-01 18:13:31,384:INFO:SubProcess create_model() called ==================================
2022-10-01 18:13:31,385:INFO:Initializing create_model()
2022-10-01 18:13:31,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021A18175300>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:31,385:INFO:Checking exceptions
2022-10-01 18:13:31,386:INFO:Importing libraries
2022-10-01 18:13:31,386:INFO:Copying training dataset
2022-10-01 18:13:31,388:INFO:Defining folds
2022-10-01 18:13:31,388:INFO:Declaring metric variables
2022-10-01 18:13:31,388:INFO:Importing untrained model
2022-10-01 18:13:31,388:INFO:Dummy Regressor Imported successfully
2022-10-01 18:13:31,388:INFO:Starting cross validation
2022-10-01 18:13:31,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:31,555:INFO:Calculating mean and std
2022-10-01 18:13:31,823:INFO:Creating metrics dataframe
2022-10-01 18:13:31,825:INFO:Uploading results into container
2022-10-01 18:13:31,826:INFO:Uploading model into container now
2022-10-01 18:13:31,826:INFO:master_model_container: 18
2022-10-01 18:13:31,826:INFO:display_container: 2
2022-10-01 18:13:31,826:INFO:DummyRegressor()
2022-10-01 18:13:31,826:INFO:create_model() successfully completed......................................
2022-10-01 18:13:31,904:INFO:SubProcess create_model() end ==================================
2022-10-01 18:13:31,904:INFO:Creating metrics dataframe
2022-10-01 18:13:31,909:INFO:Initializing create_model()
2022-10-01 18:13:31,910:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:31,910:INFO:Checking exceptions
2022-10-01 18:13:31,911:INFO:Importing libraries
2022-10-01 18:13:31,911:INFO:Copying training dataset
2022-10-01 18:13:31,913:INFO:Defining folds
2022-10-01 18:13:31,913:INFO:Declaring metric variables
2022-10-01 18:13:31,913:INFO:Importing untrained model
2022-10-01 18:13:31,913:INFO:Declaring custom model
2022-10-01 18:13:31,913:INFO:Lasso Regression Imported successfully
2022-10-01 18:13:31,914:INFO:Cross validation set to False
2022-10-01 18:13:31,914:INFO:Fitting Model
2022-10-01 18:13:31,927:INFO:Lasso(random_state=123)
2022-10-01 18:13:31,927:INFO:create_model() successfully completed......................................
2022-10-01 18:13:32,018:INFO:master_model_container: 18
2022-10-01 18:13:32,019:INFO:display_container: 2
2022-10-01 18:13:32,019:INFO:Lasso(random_state=123)
2022-10-01 18:13:32,019:INFO:compare_models() successfully completed......................................
2022-10-01 18:13:32,019:INFO:Initializing create_model()
2022-10-01 18:13:32,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:13:32,019:INFO:Checking exceptions
2022-10-01 18:13:32,022:INFO:Importing libraries
2022-10-01 18:13:32,022:INFO:Copying training dataset
2022-10-01 18:13:32,025:INFO:Defining folds
2022-10-01 18:13:32,026:INFO:Declaring metric variables
2022-10-01 18:13:32,026:INFO:Importing untrained model
2022-10-01 18:13:32,026:INFO:Declaring custom model
2022-10-01 18:13:32,026:INFO:Lasso Regression Imported successfully
2022-10-01 18:13:32,026:INFO:Starting cross validation
2022-10-01 18:13:32,027:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:13:32,172:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:13:32,275:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:13:32,293:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:13:32,301:INFO:Calculating mean and std
2022-10-01 18:13:32,302:INFO:Creating metrics dataframe
2022-10-01 18:13:32,303:INFO:Finalizing model
2022-10-01 18:13:32,314:INFO:Uploading results into container
2022-10-01 18:13:32,314:INFO:Uploading model into container now
2022-10-01 18:13:32,323:INFO:master_model_container: 19
2022-10-01 18:13:32,323:INFO:display_container: 3
2022-10-01 18:13:32,323:INFO:Lasso(random_state=123)
2022-10-01 18:13:32,323:INFO:create_model() successfully completed......................................
2022-10-01 18:13:32,418:INFO:Initializing predict_model()
2022-10-01 18:13:32,418:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A0F524EB0>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021A0FABB640>)
2022-10-01 18:13:32,418:INFO:Checking exceptions
2022-10-01 18:13:32,418:INFO:Preloading libraries
2022-10-01 18:13:32,418:INFO:Set up data.
2022-10-01 18:13:32,421:INFO:Set up index.
2022-10-01 18:13:32,655:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:42: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 18:18:13,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:13,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:13,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:13,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:32,856:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 18:18:41,631:INFO:PyCaret RegressionExperiment
2022-10-01 18:18:41,632:INFO:Logging name: reg-default-name
2022-10-01 18:18:41,632:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 18:18:41,632:INFO:version 3.0.0.rc4
2022-10-01 18:18:41,632:INFO:Initializing setup()
2022-10-01 18:18:41,632:INFO:self.USI: d4d1
2022-10-01 18:18:41,632:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'logging_param', 'fold_generator', 'fold_shuffle_param', '_available_plots', 'log_plots_param', 'idx', 'transform_target_param', 'transform_target_method_param', '_all_models_internal', 'target_param', 'n_jobs_param', 'display_container', '_ml_usecase', 'X', 'X_train', 'USI', 'variable_keys', '_all_metrics', 'X_test', 'data', 'y', 'pipeline', 'exp_name_log', 'master_model_container', 'exp_id', 'gpu_param', 'y_train', 'html_param', '_all_models', 'y_test', 'fold_groups_param', 'seed', 'memory'}
2022-10-01 18:18:41,632:INFO:Checking environment
2022-10-01 18:18:41,632:INFO:python_version: 3.10.7
2022-10-01 18:18:41,632:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 18:18:41,632:INFO:machine: AMD64
2022-10-01 18:18:41,645:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 18:18:41,646:INFO:Memory: svmem(total=8497213440, available=1911873536, percent=77.5, used=6585339904, free=1911873536)
2022-10-01 18:18:41,646:INFO:Physical Core: 6
2022-10-01 18:18:41,646:INFO:Logical Core: 12
2022-10-01 18:18:41,646:INFO:Checking libraries
2022-10-01 18:18:41,646:INFO:System:
2022-10-01 18:18:41,646:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 18:18:41,646:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 18:18:41,646:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 18:18:41,646:INFO:PyCaret required dependencies:
2022-10-01 18:18:41,646:INFO:                 pip: 22.2.2
2022-10-01 18:18:41,646:INFO:          setuptools: 63.2.0
2022-10-01 18:18:41,646:INFO:             pycaret: 3.0.0rc4
2022-10-01 18:18:41,646:INFO:             IPython: 8.5.0
2022-10-01 18:18:41,646:INFO:          ipywidgets: 8.0.2
2022-10-01 18:18:41,646:INFO:                tqdm: 4.64.1
2022-10-01 18:18:41,647:INFO:               numpy: 1.22.4
2022-10-01 18:18:41,647:INFO:              pandas: 1.4.4
2022-10-01 18:18:41,647:INFO:              jinja2: 3.1.2
2022-10-01 18:18:41,647:INFO:               scipy: 1.8.1
2022-10-01 18:18:41,647:INFO:              joblib: 1.2.0
2022-10-01 18:18:41,647:INFO:             sklearn: 1.1.2
2022-10-01 18:18:41,647:INFO:                pyod: 1.0.5
2022-10-01 18:18:41,647:INFO:            imblearn: 0.9.1
2022-10-01 18:18:41,647:INFO:   category_encoders: 2.5.0
2022-10-01 18:18:41,647:INFO:            lightgbm: 3.3.2
2022-10-01 18:18:41,647:INFO:               numba: 0.55.2
2022-10-01 18:18:41,647:INFO:            requests: 2.28.1
2022-10-01 18:18:41,647:INFO:          matplotlib: 3.6.0
2022-10-01 18:18:41,647:INFO:          scikitplot: 0.3.7
2022-10-01 18:18:41,647:INFO:         yellowbrick: 1.5
2022-10-01 18:18:41,647:INFO:              plotly: 5.10.0
2022-10-01 18:18:41,647:INFO:             kaleido: 0.2.1
2022-10-01 18:18:41,647:INFO:         statsmodels: 0.13.2
2022-10-01 18:18:41,647:INFO:              sktime: 0.13.4
2022-10-01 18:18:41,647:INFO:               tbats: 1.1.0
2022-10-01 18:18:41,647:INFO:            pmdarima: 1.8.5
2022-10-01 18:18:41,648:INFO:              psutil: 5.9.2
2022-10-01 18:18:41,648:INFO:PyCaret optional dependencies:
2022-10-01 18:18:41,667:INFO:                shap: Not installed
2022-10-01 18:18:41,668:INFO:           interpret: Not installed
2022-10-01 18:18:41,668:INFO:                umap: Not installed
2022-10-01 18:18:41,668:INFO:    pandas_profiling: Not installed
2022-10-01 18:18:41,668:INFO:  explainerdashboard: Not installed
2022-10-01 18:18:41,668:INFO:             autoviz: Not installed
2022-10-01 18:18:41,668:INFO:           fairlearn: Not installed
2022-10-01 18:18:41,668:INFO:             xgboost: Not installed
2022-10-01 18:18:41,668:INFO:            catboost: Not installed
2022-10-01 18:18:41,668:INFO:              kmodes: Not installed
2022-10-01 18:18:41,668:INFO:             mlxtend: Not installed
2022-10-01 18:18:41,668:INFO:       statsforecast: Not installed
2022-10-01 18:18:41,668:INFO:        tune_sklearn: Not installed
2022-10-01 18:18:41,668:INFO:                 ray: Not installed
2022-10-01 18:18:41,668:INFO:            hyperopt: Not installed
2022-10-01 18:18:41,668:INFO:              optuna: Not installed
2022-10-01 18:18:41,668:INFO:               skopt: Not installed
2022-10-01 18:18:41,668:INFO:              mlflow: Not installed
2022-10-01 18:18:41,668:INFO:              gradio: Not installed
2022-10-01 18:18:41,668:INFO:             fastapi: Not installed
2022-10-01 18:18:41,669:INFO:             uvicorn: Not installed
2022-10-01 18:18:41,669:INFO:              m2cgen: Not installed
2022-10-01 18:18:41,669:INFO:           evidently: Not installed
2022-10-01 18:18:41,669:INFO:                nltk: Not installed
2022-10-01 18:18:41,669:INFO:            pyLDAvis: Not installed
2022-10-01 18:18:41,669:INFO:              gensim: Not installed
2022-10-01 18:18:41,669:INFO:               spacy: Not installed
2022-10-01 18:18:41,669:INFO:           wordcloud: Not installed
2022-10-01 18:18:41,669:INFO:            textblob: Not installed
2022-10-01 18:18:41,669:INFO:               fugue: Not installed
2022-10-01 18:18:41,669:INFO:           streamlit: Not installed
2022-10-01 18:18:41,669:INFO:             prophet: Not installed
2022-10-01 18:18:41,669:INFO:None
2022-10-01 18:18:41,669:INFO:Set up GPU usage.
2022-10-01 18:18:41,669:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,669:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 18:18:41,669:INFO:Set up data.
2022-10-01 18:18:41,672:INFO:Set up train/test split.
2022-10-01 18:18:41,674:INFO:Set up index.
2022-10-01 18:18:41,675:INFO:Set up folding strategy.
2022-10-01 18:18:41,675:INFO:Assigning column types.
2022-10-01 18:18:41,677:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 18:18:41,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,677:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:18:41,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,682:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:18:41,682:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,687:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:18:41,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,742:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:41,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,785:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:41,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:41,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:42,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:42,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,598:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:18:42,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:18:42,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,612:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:18:42,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,701:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:42,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:42,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:42,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:43,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:43,043:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 18:18:43,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,052:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,059:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,160:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:43,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:43,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,512:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,519:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:43,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:43,949:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 18:18:43,949:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,949:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:43,965:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:18:43,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:44,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:44,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,397:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,482:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:44,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:44,821:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 18:18:44,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,917:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:44,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:44,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:45,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:45,252:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,252:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,259:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,348:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:45,348:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:18:45,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:45,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:45,632:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 18:18:45,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:45,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:45,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:46,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:46,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,167:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:18:46,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:46,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:46,598:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 18:18:46,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:46,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:47,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:47,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,190:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:47,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:47,477:INFO:Preparing preprocessing pipeline...
2022-10-01 18:18:47,478:INFO:Set up simple imputation.
2022-10-01 18:18:47,478:INFO:Set up variance threshold.
2022-10-01 18:18:47,502:INFO:Finished creating preprocessing pipeline.
2022-10-01 18:18:47,564:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 18:18:47,564:INFO:Creating final display dataframe.
2022-10-01 18:18:47,633:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              d4d1
2022-10-01 18:18:47,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:47,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:47,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:47,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:48,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:48,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:48,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:48,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:48,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:18:48,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:48,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:18:48,446:INFO:setup() successfully completed in 6.82s...............
2022-10-01 18:18:48,446:INFO:Initializing compare_models()
2022-10-01 18:18:48,446:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 18:18:48,446:INFO:Checking exceptions
2022-10-01 18:18:48,447:INFO:Preparing display monitor
2022-10-01 18:18:48,451:INFO:Initializing Linear Regression
2022-10-01 18:18:48,451:INFO:Total runtime is 0.0 minutes
2022-10-01 18:18:48,451:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:48,451:INFO:Initializing create_model()
2022-10-01 18:18:48,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:48,452:INFO:Checking exceptions
2022-10-01 18:18:48,453:INFO:Importing libraries
2022-10-01 18:18:48,453:INFO:Copying training dataset
2022-10-01 18:18:48,455:INFO:Defining folds
2022-10-01 18:18:48,455:INFO:Declaring metric variables
2022-10-01 18:18:48,456:INFO:Importing untrained model
2022-10-01 18:18:48,456:INFO:Linear Regression Imported successfully
2022-10-01 18:18:48,456:INFO:Starting cross validation
2022-10-01 18:18:48,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:48,880:INFO:Calculating mean and std
2022-10-01 18:18:48,881:INFO:Creating metrics dataframe
2022-10-01 18:18:48,884:INFO:Uploading results into container
2022-10-01 18:18:48,884:INFO:Uploading model into container now
2022-10-01 18:18:48,884:INFO:master_model_container: 1
2022-10-01 18:18:48,884:INFO:display_container: 2
2022-10-01 18:18:48,885:INFO:LinearRegression(n_jobs=-1)
2022-10-01 18:18:48,885:INFO:create_model() successfully completed......................................
2022-10-01 18:18:48,964:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:48,964:INFO:Creating metrics dataframe
2022-10-01 18:18:48,967:INFO:Initializing Lasso Regression
2022-10-01 18:18:48,967:INFO:Total runtime is 0.008604093392690023 minutes
2022-10-01 18:18:48,968:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:48,968:INFO:Initializing create_model()
2022-10-01 18:18:48,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:48,968:INFO:Checking exceptions
2022-10-01 18:18:48,969:INFO:Importing libraries
2022-10-01 18:18:48,969:INFO:Copying training dataset
2022-10-01 18:18:48,971:INFO:Defining folds
2022-10-01 18:18:48,971:INFO:Declaring metric variables
2022-10-01 18:18:48,971:INFO:Importing untrained model
2022-10-01 18:18:48,971:INFO:Lasso Regression Imported successfully
2022-10-01 18:18:48,971:INFO:Starting cross validation
2022-10-01 18:18:48,972:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:49,350:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:18:49,398:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:18:49,416:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:18:49,424:INFO:Calculating mean and std
2022-10-01 18:18:49,425:INFO:Creating metrics dataframe
2022-10-01 18:18:49,427:INFO:Uploading results into container
2022-10-01 18:18:49,428:INFO:Uploading model into container now
2022-10-01 18:18:49,428:INFO:master_model_container: 2
2022-10-01 18:18:49,428:INFO:display_container: 2
2022-10-01 18:18:49,428:INFO:Lasso(random_state=123)
2022-10-01 18:18:49,428:INFO:create_model() successfully completed......................................
2022-10-01 18:18:49,504:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:49,505:INFO:Creating metrics dataframe
2022-10-01 18:18:49,508:INFO:Initializing Ridge Regression
2022-10-01 18:18:49,508:INFO:Total runtime is 0.017622164885203045 minutes
2022-10-01 18:18:49,509:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:49,509:INFO:Initializing create_model()
2022-10-01 18:18:49,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:49,509:INFO:Checking exceptions
2022-10-01 18:18:49,510:INFO:Importing libraries
2022-10-01 18:18:49,510:INFO:Copying training dataset
2022-10-01 18:18:49,512:INFO:Defining folds
2022-10-01 18:18:49,512:INFO:Declaring metric variables
2022-10-01 18:18:49,512:INFO:Importing untrained model
2022-10-01 18:18:49,512:INFO:Ridge Regression Imported successfully
2022-10-01 18:18:49,512:INFO:Starting cross validation
2022-10-01 18:18:49,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:49,607:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,627:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,644:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,664:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,682:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,701:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,719:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,737:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,756:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,775:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:18:49,784:INFO:Calculating mean and std
2022-10-01 18:18:49,785:INFO:Creating metrics dataframe
2022-10-01 18:18:49,788:INFO:Uploading results into container
2022-10-01 18:18:49,788:INFO:Uploading model into container now
2022-10-01 18:18:49,788:INFO:master_model_container: 3
2022-10-01 18:18:49,788:INFO:display_container: 2
2022-10-01 18:18:49,789:INFO:Ridge(random_state=123)
2022-10-01 18:18:49,789:INFO:create_model() successfully completed......................................
2022-10-01 18:18:49,871:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:49,871:INFO:Creating metrics dataframe
2022-10-01 18:18:49,875:INFO:Initializing Elastic Net
2022-10-01 18:18:49,875:INFO:Total runtime is 0.02373911539713542 minutes
2022-10-01 18:18:49,875:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:49,875:INFO:Initializing create_model()
2022-10-01 18:18:49,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:49,876:INFO:Checking exceptions
2022-10-01 18:18:49,877:INFO:Importing libraries
2022-10-01 18:18:49,877:INFO:Copying training dataset
2022-10-01 18:18:49,878:INFO:Defining folds
2022-10-01 18:18:49,878:INFO:Declaring metric variables
2022-10-01 18:18:49,878:INFO:Importing untrained model
2022-10-01 18:18:49,879:INFO:Elastic Net Imported successfully
2022-10-01 18:18:49,879:INFO:Starting cross validation
2022-10-01 18:18:49,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:50,010:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:18:50,069:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:18:50,077:INFO:Calculating mean and std
2022-10-01 18:18:50,077:INFO:Creating metrics dataframe
2022-10-01 18:18:50,080:INFO:Uploading results into container
2022-10-01 18:18:50,080:INFO:Uploading model into container now
2022-10-01 18:18:50,081:INFO:master_model_container: 4
2022-10-01 18:18:50,081:INFO:display_container: 2
2022-10-01 18:18:50,081:INFO:ElasticNet(random_state=123)
2022-10-01 18:18:50,081:INFO:create_model() successfully completed......................................
2022-10-01 18:18:50,165:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:50,165:INFO:Creating metrics dataframe
2022-10-01 18:18:50,169:INFO:Initializing Least Angle Regression
2022-10-01 18:18:50,169:INFO:Total runtime is 0.02863975763320923 minutes
2022-10-01 18:18:50,169:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:50,170:INFO:Initializing create_model()
2022-10-01 18:18:50,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:50,170:INFO:Checking exceptions
2022-10-01 18:18:50,171:INFO:Importing libraries
2022-10-01 18:18:50,171:INFO:Copying training dataset
2022-10-01 18:18:50,172:INFO:Defining folds
2022-10-01 18:18:50,172:INFO:Declaring metric variables
2022-10-01 18:18:50,172:INFO:Importing untrained model
2022-10-01 18:18:50,172:INFO:Least Angle Regression Imported successfully
2022-10-01 18:18:50,174:INFO:Starting cross validation
2022-10-01 18:18:50,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:50,225:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,263:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,281:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,300:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,320:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,339:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,359:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,380:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,399:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,418:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,427:INFO:Calculating mean and std
2022-10-01 18:18:50,428:INFO:Creating metrics dataframe
2022-10-01 18:18:50,430:INFO:Uploading results into container
2022-10-01 18:18:50,431:INFO:Uploading model into container now
2022-10-01 18:18:50,431:INFO:master_model_container: 5
2022-10-01 18:18:50,431:INFO:display_container: 2
2022-10-01 18:18:50,431:INFO:Lars(random_state=123)
2022-10-01 18:18:50,431:INFO:create_model() successfully completed......................................
2022-10-01 18:18:50,515:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:50,515:INFO:Creating metrics dataframe
2022-10-01 18:18:50,519:INFO:Initializing Lasso Least Angle Regression
2022-10-01 18:18:50,519:INFO:Total runtime is 0.034467879931132 minutes
2022-10-01 18:18:50,519:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:50,519:INFO:Initializing create_model()
2022-10-01 18:18:50,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:50,520:INFO:Checking exceptions
2022-10-01 18:18:50,520:INFO:Importing libraries
2022-10-01 18:18:50,521:INFO:Copying training dataset
2022-10-01 18:18:50,522:INFO:Defining folds
2022-10-01 18:18:50,522:INFO:Declaring metric variables
2022-10-01 18:18:50,522:INFO:Importing untrained model
2022-10-01 18:18:50,523:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 18:18:50,523:INFO:Starting cross validation
2022-10-01 18:18:50,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:50,534:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,553:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,592:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,610:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,628:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,646:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,666:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,686:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,708:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:18:50,716:INFO:Calculating mean and std
2022-10-01 18:18:50,717:INFO:Creating metrics dataframe
2022-10-01 18:18:50,720:INFO:Uploading results into container
2022-10-01 18:18:50,720:INFO:Uploading model into container now
2022-10-01 18:18:50,721:INFO:master_model_container: 6
2022-10-01 18:18:50,721:INFO:display_container: 2
2022-10-01 18:18:50,721:INFO:LassoLars(random_state=123)
2022-10-01 18:18:50,721:INFO:create_model() successfully completed......................................
2022-10-01 18:18:50,807:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:50,807:INFO:Creating metrics dataframe
2022-10-01 18:18:50,811:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 18:18:50,811:INFO:Total runtime is 0.03934313058853149 minutes
2022-10-01 18:18:50,811:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:50,812:INFO:Initializing create_model()
2022-10-01 18:18:50,812:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:50,812:INFO:Checking exceptions
2022-10-01 18:18:50,813:INFO:Importing libraries
2022-10-01 18:18:50,813:INFO:Copying training dataset
2022-10-01 18:18:50,815:INFO:Defining folds
2022-10-01 18:18:50,815:INFO:Declaring metric variables
2022-10-01 18:18:50,815:INFO:Importing untrained model
2022-10-01 18:18:50,816:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 18:18:50,816:INFO:Starting cross validation
2022-10-01 18:18:50,817:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:50,827:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,846:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,865:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,884:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,903:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,922:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,940:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,958:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,977:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:50,996:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:18:51,006:INFO:Calculating mean and std
2022-10-01 18:18:51,006:INFO:Creating metrics dataframe
2022-10-01 18:18:51,009:INFO:Uploading results into container
2022-10-01 18:18:51,009:INFO:Uploading model into container now
2022-10-01 18:18:51,009:INFO:master_model_container: 7
2022-10-01 18:18:51,010:INFO:display_container: 2
2022-10-01 18:18:51,010:INFO:OrthogonalMatchingPursuit()
2022-10-01 18:18:51,010:INFO:create_model() successfully completed......................................
2022-10-01 18:18:51,097:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:51,097:INFO:Creating metrics dataframe
2022-10-01 18:18:51,102:INFO:Initializing Bayesian Ridge
2022-10-01 18:18:51,102:INFO:Total runtime is 0.0441868782043457 minutes
2022-10-01 18:18:51,102:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:51,102:INFO:Initializing create_model()
2022-10-01 18:18:51,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:51,102:INFO:Checking exceptions
2022-10-01 18:18:51,104:INFO:Importing libraries
2022-10-01 18:18:51,104:INFO:Copying training dataset
2022-10-01 18:18:51,105:INFO:Defining folds
2022-10-01 18:18:51,105:INFO:Declaring metric variables
2022-10-01 18:18:51,105:INFO:Importing untrained model
2022-10-01 18:18:51,106:INFO:Bayesian Ridge Imported successfully
2022-10-01 18:18:51,106:INFO:Starting cross validation
2022-10-01 18:18:51,107:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:51,295:INFO:Calculating mean and std
2022-10-01 18:18:51,295:INFO:Creating metrics dataframe
2022-10-01 18:18:51,298:INFO:Uploading results into container
2022-10-01 18:18:51,299:INFO:Uploading model into container now
2022-10-01 18:18:51,299:INFO:master_model_container: 8
2022-10-01 18:18:51,299:INFO:display_container: 2
2022-10-01 18:18:51,299:INFO:BayesianRidge()
2022-10-01 18:18:51,299:INFO:create_model() successfully completed......................................
2022-10-01 18:18:51,385:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:51,385:INFO:Creating metrics dataframe
2022-10-01 18:18:51,389:INFO:Initializing Passive Aggressive Regressor
2022-10-01 18:18:51,389:INFO:Total runtime is 0.04896310965220133 minutes
2022-10-01 18:18:51,389:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:51,389:INFO:Initializing create_model()
2022-10-01 18:18:51,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:51,390:INFO:Checking exceptions
2022-10-01 18:18:51,391:INFO:Importing libraries
2022-10-01 18:18:51,391:INFO:Copying training dataset
2022-10-01 18:18:51,393:INFO:Defining folds
2022-10-01 18:18:51,393:INFO:Declaring metric variables
2022-10-01 18:18:51,393:INFO:Importing untrained model
2022-10-01 18:18:51,393:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 18:18:51,394:INFO:Starting cross validation
2022-10-01 18:18:51,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:51,588:INFO:Calculating mean and std
2022-10-01 18:18:51,589:INFO:Creating metrics dataframe
2022-10-01 18:18:51,592:INFO:Uploading results into container
2022-10-01 18:18:51,592:INFO:Uploading model into container now
2022-10-01 18:18:51,593:INFO:master_model_container: 9
2022-10-01 18:18:51,593:INFO:display_container: 2
2022-10-01 18:18:51,593:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 18:18:51,593:INFO:create_model() successfully completed......................................
2022-10-01 18:18:51,677:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:51,677:INFO:Creating metrics dataframe
2022-10-01 18:18:51,681:INFO:Initializing Huber Regressor
2022-10-01 18:18:51,681:INFO:Total runtime is 0.053838845094045004 minutes
2022-10-01 18:18:51,681:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:51,681:INFO:Initializing create_model()
2022-10-01 18:18:51,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:51,681:INFO:Checking exceptions
2022-10-01 18:18:51,682:INFO:Importing libraries
2022-10-01 18:18:51,682:INFO:Copying training dataset
2022-10-01 18:18:51,684:INFO:Defining folds
2022-10-01 18:18:51,684:INFO:Declaring metric variables
2022-10-01 18:18:51,684:INFO:Importing untrained model
2022-10-01 18:18:51,684:INFO:Huber Regressor Imported successfully
2022-10-01 18:18:51,685:INFO:Starting cross validation
2022-10-01 18:18:51,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:51,946:INFO:Calculating mean and std
2022-10-01 18:18:51,947:INFO:Creating metrics dataframe
2022-10-01 18:18:51,949:INFO:Uploading results into container
2022-10-01 18:18:51,949:INFO:Uploading model into container now
2022-10-01 18:18:51,950:INFO:master_model_container: 10
2022-10-01 18:18:51,950:INFO:display_container: 2
2022-10-01 18:18:51,950:INFO:HuberRegressor()
2022-10-01 18:18:51,950:INFO:create_model() successfully completed......................................
2022-10-01 18:18:52,033:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:52,033:INFO:Creating metrics dataframe
2022-10-01 18:18:52,037:INFO:Initializing K Neighbors Regressor
2022-10-01 18:18:52,037:INFO:Total runtime is 0.059771005312601724 minutes
2022-10-01 18:18:52,037:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:52,037:INFO:Initializing create_model()
2022-10-01 18:18:52,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:52,037:INFO:Checking exceptions
2022-10-01 18:18:52,038:INFO:Importing libraries
2022-10-01 18:18:52,038:INFO:Copying training dataset
2022-10-01 18:18:52,040:INFO:Defining folds
2022-10-01 18:18:52,040:INFO:Declaring metric variables
2022-10-01 18:18:52,040:INFO:Importing untrained model
2022-10-01 18:18:52,040:INFO:K Neighbors Regressor Imported successfully
2022-10-01 18:18:52,041:INFO:Starting cross validation
2022-10-01 18:18:52,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:54,696:INFO:Calculating mean and std
2022-10-01 18:18:54,697:INFO:Creating metrics dataframe
2022-10-01 18:18:54,700:INFO:Uploading results into container
2022-10-01 18:18:54,700:INFO:Uploading model into container now
2022-10-01 18:18:54,700:INFO:master_model_container: 11
2022-10-01 18:18:54,700:INFO:display_container: 2
2022-10-01 18:18:54,701:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 18:18:54,701:INFO:create_model() successfully completed......................................
2022-10-01 18:18:54,779:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:54,779:INFO:Creating metrics dataframe
2022-10-01 18:18:54,783:INFO:Initializing Decision Tree Regressor
2022-10-01 18:18:54,783:INFO:Total runtime is 0.10554137229919433 minutes
2022-10-01 18:18:54,783:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:54,783:INFO:Initializing create_model()
2022-10-01 18:18:54,783:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:54,784:INFO:Checking exceptions
2022-10-01 18:18:54,785:INFO:Importing libraries
2022-10-01 18:18:54,785:INFO:Copying training dataset
2022-10-01 18:18:54,786:INFO:Defining folds
2022-10-01 18:18:54,786:INFO:Declaring metric variables
2022-10-01 18:18:54,786:INFO:Importing untrained model
2022-10-01 18:18:54,787:INFO:Decision Tree Regressor Imported successfully
2022-10-01 18:18:54,787:INFO:Starting cross validation
2022-10-01 18:18:54,788:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:54,973:INFO:Calculating mean and std
2022-10-01 18:18:54,974:INFO:Creating metrics dataframe
2022-10-01 18:18:54,976:INFO:Uploading results into container
2022-10-01 18:18:54,977:INFO:Uploading model into container now
2022-10-01 18:18:54,977:INFO:master_model_container: 12
2022-10-01 18:18:54,977:INFO:display_container: 2
2022-10-01 18:18:54,977:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 18:18:54,977:INFO:create_model() successfully completed......................................
2022-10-01 18:18:55,052:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:55,052:INFO:Creating metrics dataframe
2022-10-01 18:18:55,056:INFO:Initializing Random Forest Regressor
2022-10-01 18:18:55,056:INFO:Total runtime is 0.1100932200749715 minutes
2022-10-01 18:18:55,056:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:55,057:INFO:Initializing create_model()
2022-10-01 18:18:55,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:55,057:INFO:Checking exceptions
2022-10-01 18:18:55,058:INFO:Importing libraries
2022-10-01 18:18:55,058:INFO:Copying training dataset
2022-10-01 18:18:55,059:INFO:Defining folds
2022-10-01 18:18:55,059:INFO:Declaring metric variables
2022-10-01 18:18:55,060:INFO:Importing untrained model
2022-10-01 18:18:55,060:INFO:Random Forest Regressor Imported successfully
2022-10-01 18:18:55,060:INFO:Starting cross validation
2022-10-01 18:18:55,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:56,312:INFO:Calculating mean and std
2022-10-01 18:18:56,312:INFO:Creating metrics dataframe
2022-10-01 18:18:56,317:INFO:Uploading results into container
2022-10-01 18:18:56,317:INFO:Uploading model into container now
2022-10-01 18:18:56,318:INFO:master_model_container: 13
2022-10-01 18:18:56,318:INFO:display_container: 2
2022-10-01 18:18:56,319:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:18:56,319:INFO:create_model() successfully completed......................................
2022-10-01 18:18:56,415:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:56,415:INFO:Creating metrics dataframe
2022-10-01 18:18:56,419:INFO:Initializing Extra Trees Regressor
2022-10-01 18:18:56,419:INFO:Total runtime is 0.13280771573384603 minutes
2022-10-01 18:18:56,419:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:56,419:INFO:Initializing create_model()
2022-10-01 18:18:56,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:56,419:INFO:Checking exceptions
2022-10-01 18:18:56,420:INFO:Importing libraries
2022-10-01 18:18:56,421:INFO:Copying training dataset
2022-10-01 18:18:56,422:INFO:Defining folds
2022-10-01 18:18:56,422:INFO:Declaring metric variables
2022-10-01 18:18:56,423:INFO:Importing untrained model
2022-10-01 18:18:56,423:INFO:Extra Trees Regressor Imported successfully
2022-10-01 18:18:56,423:INFO:Starting cross validation
2022-10-01 18:18:56,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:58,227:INFO:Calculating mean and std
2022-10-01 18:18:58,228:INFO:Creating metrics dataframe
2022-10-01 18:18:58,233:INFO:Uploading results into container
2022-10-01 18:18:58,235:INFO:Uploading model into container now
2022-10-01 18:18:58,236:INFO:master_model_container: 14
2022-10-01 18:18:58,237:INFO:display_container: 2
2022-10-01 18:18:58,237:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:18:58,237:INFO:create_model() successfully completed......................................
2022-10-01 18:18:58,439:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:58,439:INFO:Creating metrics dataframe
2022-10-01 18:18:58,446:INFO:Initializing AdaBoost Regressor
2022-10-01 18:18:58,447:INFO:Total runtime is 0.16660221020380656 minutes
2022-10-01 18:18:58,447:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:58,447:INFO:Initializing create_model()
2022-10-01 18:18:58,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:58,448:INFO:Checking exceptions
2022-10-01 18:18:58,450:INFO:Importing libraries
2022-10-01 18:18:58,450:INFO:Copying training dataset
2022-10-01 18:18:58,453:INFO:Defining folds
2022-10-01 18:18:58,453:INFO:Declaring metric variables
2022-10-01 18:18:58,454:INFO:Importing untrained model
2022-10-01 18:18:58,454:INFO:AdaBoost Regressor Imported successfully
2022-10-01 18:18:58,454:INFO:Starting cross validation
2022-10-01 18:18:58,455:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:18:59,412:INFO:Calculating mean and std
2022-10-01 18:18:59,412:INFO:Creating metrics dataframe
2022-10-01 18:18:59,415:INFO:Uploading results into container
2022-10-01 18:18:59,415:INFO:Uploading model into container now
2022-10-01 18:18:59,416:INFO:master_model_container: 15
2022-10-01 18:18:59,416:INFO:display_container: 2
2022-10-01 18:18:59,416:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 18:18:59,416:INFO:create_model() successfully completed......................................
2022-10-01 18:18:59,502:INFO:SubProcess create_model() end ==================================
2022-10-01 18:18:59,503:INFO:Creating metrics dataframe
2022-10-01 18:18:59,507:INFO:Initializing Gradient Boosting Regressor
2022-10-01 18:18:59,507:INFO:Total runtime is 0.18426562945048014 minutes
2022-10-01 18:18:59,507:INFO:SubProcess create_model() called ==================================
2022-10-01 18:18:59,507:INFO:Initializing create_model()
2022-10-01 18:18:59,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:18:59,507:INFO:Checking exceptions
2022-10-01 18:18:59,508:INFO:Importing libraries
2022-10-01 18:18:59,508:INFO:Copying training dataset
2022-10-01 18:18:59,510:INFO:Defining folds
2022-10-01 18:18:59,510:INFO:Declaring metric variables
2022-10-01 18:18:59,510:INFO:Importing untrained model
2022-10-01 18:18:59,511:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 18:18:59,511:INFO:Starting cross validation
2022-10-01 18:18:59,511:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:19:00,125:INFO:Calculating mean and std
2022-10-01 18:19:00,125:INFO:Creating metrics dataframe
2022-10-01 18:19:00,128:INFO:Uploading results into container
2022-10-01 18:19:00,129:INFO:Uploading model into container now
2022-10-01 18:19:00,129:INFO:master_model_container: 16
2022-10-01 18:19:00,129:INFO:display_container: 2
2022-10-01 18:19:00,130:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 18:19:00,130:INFO:create_model() successfully completed......................................
2022-10-01 18:19:00,216:INFO:SubProcess create_model() end ==================================
2022-10-01 18:19:00,216:INFO:Creating metrics dataframe
2022-10-01 18:19:00,220:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 18:19:00,220:INFO:Total runtime is 0.1961488366127014 minutes
2022-10-01 18:19:00,220:INFO:SubProcess create_model() called ==================================
2022-10-01 18:19:00,220:INFO:Initializing create_model()
2022-10-01 18:19:00,220:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:19:00,220:INFO:Checking exceptions
2022-10-01 18:19:00,221:INFO:Importing libraries
2022-10-01 18:19:00,221:INFO:Copying training dataset
2022-10-01 18:19:00,223:INFO:Defining folds
2022-10-01 18:19:00,223:INFO:Declaring metric variables
2022-10-01 18:19:00,223:INFO:Importing untrained model
2022-10-01 18:19:00,224:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 18:19:00,224:INFO:Starting cross validation
2022-10-01 18:19:00,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:19:05,608:INFO:Calculating mean and std
2022-10-01 18:19:05,609:INFO:Creating metrics dataframe
2022-10-01 18:19:05,613:INFO:Uploading results into container
2022-10-01 18:19:05,613:INFO:Uploading model into container now
2022-10-01 18:19:05,614:INFO:master_model_container: 17
2022-10-01 18:19:05,614:INFO:display_container: 2
2022-10-01 18:19:05,614:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 18:19:05,614:INFO:create_model() successfully completed......................................
2022-10-01 18:19:05,706:INFO:SubProcess create_model() end ==================================
2022-10-01 18:19:05,706:INFO:Creating metrics dataframe
2022-10-01 18:19:05,710:INFO:Initializing Dummy Regressor
2022-10-01 18:19:05,711:INFO:Total runtime is 0.28766738176345824 minutes
2022-10-01 18:19:05,711:INFO:SubProcess create_model() called ==================================
2022-10-01 18:19:05,711:INFO:Initializing create_model()
2022-10-01 18:19:05,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A61C1B4490>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:19:05,711:INFO:Checking exceptions
2022-10-01 18:19:05,712:INFO:Importing libraries
2022-10-01 18:19:05,712:INFO:Copying training dataset
2022-10-01 18:19:05,714:INFO:Defining folds
2022-10-01 18:19:05,714:INFO:Declaring metric variables
2022-10-01 18:19:05,714:INFO:Importing untrained model
2022-10-01 18:19:05,714:INFO:Dummy Regressor Imported successfully
2022-10-01 18:19:05,715:INFO:Starting cross validation
2022-10-01 18:19:05,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:19:05,877:INFO:Calculating mean and std
2022-10-01 18:19:05,878:INFO:Creating metrics dataframe
2022-10-01 18:19:05,881:INFO:Uploading results into container
2022-10-01 18:19:05,881:INFO:Uploading model into container now
2022-10-01 18:19:05,881:INFO:master_model_container: 18
2022-10-01 18:19:05,882:INFO:display_container: 2
2022-10-01 18:19:05,882:INFO:DummyRegressor()
2022-10-01 18:19:05,882:INFO:create_model() successfully completed......................................
2022-10-01 18:19:05,961:INFO:SubProcess create_model() end ==================================
2022-10-01 18:19:05,961:INFO:Creating metrics dataframe
2022-10-01 18:19:05,966:INFO:Initializing create_model()
2022-10-01 18:19:05,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:19:05,967:INFO:Checking exceptions
2022-10-01 18:19:05,968:INFO:Importing libraries
2022-10-01 18:19:05,968:INFO:Copying training dataset
2022-10-01 18:19:05,970:INFO:Defining folds
2022-10-01 18:19:05,970:INFO:Declaring metric variables
2022-10-01 18:19:05,970:INFO:Importing untrained model
2022-10-01 18:19:05,970:INFO:Declaring custom model
2022-10-01 18:19:05,971:INFO:Lasso Regression Imported successfully
2022-10-01 18:19:05,971:INFO:Cross validation set to False
2022-10-01 18:19:05,971:INFO:Fitting Model
2022-10-01 18:19:05,980:INFO:Lasso(random_state=123)
2022-10-01 18:19:05,980:INFO:create_model() successfully completed......................................
2022-10-01 18:19:06,071:INFO:master_model_container: 18
2022-10-01 18:19:06,071:INFO:display_container: 2
2022-10-01 18:19:06,072:INFO:Lasso(random_state=123)
2022-10-01 18:19:06,072:INFO:compare_models() successfully completed......................................
2022-10-01 18:19:06,072:INFO:Initializing create_model()
2022-10-01 18:19:06,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:19:06,073:INFO:Checking exceptions
2022-10-01 18:19:06,075:INFO:Importing libraries
2022-10-01 18:19:06,075:INFO:Copying training dataset
2022-10-01 18:19:06,077:INFO:Defining folds
2022-10-01 18:19:06,077:INFO:Declaring metric variables
2022-10-01 18:19:06,077:INFO:Importing untrained model
2022-10-01 18:19:06,077:INFO:Declaring custom model
2022-10-01 18:19:06,078:INFO:Lasso Regression Imported successfully
2022-10-01 18:19:06,078:INFO:Starting cross validation
2022-10-01 18:19:06,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:19:06,244:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:19:06,282:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:19:06,301:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:19:06,309:INFO:Calculating mean and std
2022-10-01 18:19:06,309:INFO:Creating metrics dataframe
2022-10-01 18:19:06,311:INFO:Finalizing model
2022-10-01 18:19:06,322:INFO:Uploading results into container
2022-10-01 18:19:06,322:INFO:Uploading model into container now
2022-10-01 18:19:06,331:INFO:master_model_container: 19
2022-10-01 18:19:06,331:INFO:display_container: 3
2022-10-01 18:19:06,332:INFO:Lasso(random_state=123)
2022-10-01 18:19:06,332:INFO:create_model() successfully completed......................................
2022-10-01 18:19:06,446:INFO:Initializing predict_model()
2022-10-01 18:19:06,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A6134C9E70>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001A6138FACB0>)
2022-10-01 18:19:06,446:INFO:Checking exceptions
2022-10-01 18:19:06,446:INFO:Preloading libraries
2022-10-01 18:19:06,446:INFO:Set up data.
2022-10-01 18:19:06,450:INFO:Set up index.
2022-10-01 18:19:06,601:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:44: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 18:42:44,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:44,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:44,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:44,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:45,415:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 18:42:46,256:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 18:42:47,289:INFO:PyCaret RegressionExperiment
2022-10-01 18:42:47,289:INFO:Logging name: reg-default-name
2022-10-01 18:42:47,289:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 18:42:47,289:INFO:version 3.0.0.rc4
2022-10-01 18:42:47,289:INFO:Initializing setup()
2022-10-01 18:42:47,289:INFO:self.USI: f528
2022-10-01 18:42:47,290:INFO:self.variable_keys: {'exp_name_log', 'master_model_container', 'log_plots_param', 'variable_keys', 'X_train', 'fold_shuffle_param', 'pipeline', 'X_test', 'memory', '_all_models_internal', 'exp_id', 'fold_generator', 'data', 'logging_param', 'y_test', 'gpu_param', 'display_container', 'seed', '_all_metrics', 'X', 'target_param', '_gpu_n_jobs_param', 'transform_target_method_param', 'y', 'y_train', '_available_plots', 'fold_groups_param', 'n_jobs_param', 'USI', 'html_param', '_ml_usecase', '_all_models', 'idx', 'transform_target_param'}
2022-10-01 18:42:47,290:INFO:Checking environment
2022-10-01 18:42:47,290:INFO:python_version: 3.10.7
2022-10-01 18:42:47,290:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 18:42:47,290:INFO:machine: AMD64
2022-10-01 18:42:47,303:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 18:42:47,303:INFO:Memory: svmem(total=8497213440, available=1650712576, percent=80.6, used=6846500864, free=1650712576)
2022-10-01 18:42:47,303:INFO:Physical Core: 6
2022-10-01 18:42:47,303:INFO:Logical Core: 12
2022-10-01 18:42:47,303:INFO:Checking libraries
2022-10-01 18:42:47,304:INFO:System:
2022-10-01 18:42:47,304:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 18:42:47,304:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 18:42:47,304:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 18:42:47,304:INFO:PyCaret required dependencies:
2022-10-01 18:42:47,304:INFO:                 pip: 22.2.2
2022-10-01 18:42:47,304:INFO:          setuptools: 63.2.0
2022-10-01 18:42:47,304:INFO:             pycaret: 3.0.0rc4
2022-10-01 18:42:47,304:INFO:             IPython: 8.5.0
2022-10-01 18:42:47,304:INFO:          ipywidgets: 8.0.2
2022-10-01 18:42:47,304:INFO:                tqdm: 4.64.1
2022-10-01 18:42:47,304:INFO:               numpy: 1.22.4
2022-10-01 18:42:47,304:INFO:              pandas: 1.4.4
2022-10-01 18:42:47,304:INFO:              jinja2: 3.1.2
2022-10-01 18:42:47,304:INFO:               scipy: 1.8.1
2022-10-01 18:42:47,304:INFO:              joblib: 1.2.0
2022-10-01 18:42:47,304:INFO:             sklearn: 1.1.2
2022-10-01 18:42:47,304:INFO:                pyod: 1.0.5
2022-10-01 18:42:47,304:INFO:            imblearn: 0.9.1
2022-10-01 18:42:47,305:INFO:   category_encoders: 2.5.0
2022-10-01 18:42:47,305:INFO:            lightgbm: 3.3.2
2022-10-01 18:42:47,305:INFO:               numba: 0.55.2
2022-10-01 18:42:47,305:INFO:            requests: 2.28.1
2022-10-01 18:42:47,305:INFO:          matplotlib: 3.6.0
2022-10-01 18:42:47,305:INFO:          scikitplot: 0.3.7
2022-10-01 18:42:47,305:INFO:         yellowbrick: 1.5
2022-10-01 18:42:47,305:INFO:              plotly: 5.10.0
2022-10-01 18:42:47,305:INFO:             kaleido: 0.2.1
2022-10-01 18:42:47,305:INFO:         statsmodels: 0.13.2
2022-10-01 18:42:47,305:INFO:              sktime: 0.13.4
2022-10-01 18:42:47,305:INFO:               tbats: 1.1.0
2022-10-01 18:42:47,305:INFO:            pmdarima: 1.8.5
2022-10-01 18:42:47,305:INFO:              psutil: 5.9.2
2022-10-01 18:42:47,305:INFO:PyCaret optional dependencies:
2022-10-01 18:42:47,318:INFO:                shap: Not installed
2022-10-01 18:42:47,318:INFO:           interpret: Not installed
2022-10-01 18:42:47,318:INFO:                umap: Not installed
2022-10-01 18:42:47,318:INFO:    pandas_profiling: Not installed
2022-10-01 18:42:47,318:INFO:  explainerdashboard: Not installed
2022-10-01 18:42:47,319:INFO:             autoviz: Not installed
2022-10-01 18:42:47,319:INFO:           fairlearn: Not installed
2022-10-01 18:42:47,319:INFO:             xgboost: Not installed
2022-10-01 18:42:47,319:INFO:            catboost: Not installed
2022-10-01 18:42:47,319:INFO:              kmodes: Not installed
2022-10-01 18:42:47,319:INFO:             mlxtend: Not installed
2022-10-01 18:42:47,319:INFO:       statsforecast: Not installed
2022-10-01 18:42:47,319:INFO:        tune_sklearn: Not installed
2022-10-01 18:42:47,319:INFO:                 ray: Not installed
2022-10-01 18:42:47,319:INFO:            hyperopt: Not installed
2022-10-01 18:42:47,319:INFO:              optuna: Not installed
2022-10-01 18:42:47,319:INFO:               skopt: Not installed
2022-10-01 18:42:47,319:INFO:              mlflow: Not installed
2022-10-01 18:42:47,319:INFO:              gradio: Not installed
2022-10-01 18:42:47,319:INFO:             fastapi: Not installed
2022-10-01 18:42:47,319:INFO:             uvicorn: Not installed
2022-10-01 18:42:47,319:INFO:              m2cgen: Not installed
2022-10-01 18:42:47,319:INFO:           evidently: Not installed
2022-10-01 18:42:47,319:INFO:                nltk: Not installed
2022-10-01 18:42:47,319:INFO:            pyLDAvis: Not installed
2022-10-01 18:42:47,319:INFO:              gensim: Not installed
2022-10-01 18:42:47,319:INFO:               spacy: Not installed
2022-10-01 18:42:47,319:INFO:           wordcloud: Not installed
2022-10-01 18:42:47,319:INFO:            textblob: Not installed
2022-10-01 18:42:47,320:INFO:               fugue: Not installed
2022-10-01 18:42:47,320:INFO:           streamlit: Not installed
2022-10-01 18:42:47,320:INFO:             prophet: Not installed
2022-10-01 18:42:47,320:INFO:None
2022-10-01 18:42:47,320:INFO:Set up GPU usage.
2022-10-01 18:42:47,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,320:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 18:42:47,320:INFO:Set up data.
2022-10-01 18:42:47,323:INFO:Set up train/test split.
2022-10-01 18:42:47,325:INFO:Set up index.
2022-10-01 18:42:47,325:INFO:Set up folding strategy.
2022-10-01 18:42:47,325:INFO:Assigning column types.
2022-10-01 18:42:47,328:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 18:42:47,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,328:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,333:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,337:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,389:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:47,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:47,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,973:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,980:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:47,987:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:42:47,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,070:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:48,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:48,380:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 18:42:48,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,386:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,394:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,476:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:48,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:48,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,811:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,811:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,819:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:48,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:48,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:49,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:49,202:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 18:42:49,203:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,203:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,216:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:42:49,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:49,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,342:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:49,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:49,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:49,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,592:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:42:49,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:49,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:49,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:49,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:49,950:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 18:42:49,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:49,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,050:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:50,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:50,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:50,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:50,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,431:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:50,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:42:50,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:50,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:50,715:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 18:42:50,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,810:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:50,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:50,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:51,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:51,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,177:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:42:51,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:51,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:51,466:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 18:42:51,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:51,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:51,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,856:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:51,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:52,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:52,211:INFO:Preparing preprocessing pipeline...
2022-10-01 18:42:52,212:INFO:Set up simple imputation.
2022-10-01 18:42:52,212:INFO:Set up variance threshold.
2022-10-01 18:42:52,229:INFO:Finished creating preprocessing pipeline.
2022-10-01 18:42:52,236:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 18:42:52,236:INFO:Creating final display dataframe.
2022-10-01 18:42:52,316:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              f528
2022-10-01 18:42:52,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,439:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,439:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:52,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:52,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,669:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,682:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:42:52,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:53,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:42:53,032:INFO:setup() successfully completed in 5.75s...............
2022-10-01 18:42:53,032:INFO:Initializing compare_models()
2022-10-01 18:42:53,033:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 18:42:53,033:INFO:Checking exceptions
2022-10-01 18:42:53,034:INFO:Preparing display monitor
2022-10-01 18:42:53,037:INFO:Initializing Linear Regression
2022-10-01 18:42:53,037:INFO:Total runtime is 0.0 minutes
2022-10-01 18:42:53,038:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:53,038:INFO:Initializing create_model()
2022-10-01 18:42:53,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:53,038:INFO:Checking exceptions
2022-10-01 18:42:53,039:INFO:Importing libraries
2022-10-01 18:42:53,039:INFO:Copying training dataset
2022-10-01 18:42:53,041:INFO:Defining folds
2022-10-01 18:42:53,041:INFO:Declaring metric variables
2022-10-01 18:42:53,042:INFO:Importing untrained model
2022-10-01 18:42:53,042:INFO:Linear Regression Imported successfully
2022-10-01 18:42:53,042:INFO:Starting cross validation
2022-10-01 18:42:53,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:53,244:INFO:Calculating mean and std
2022-10-01 18:42:53,245:INFO:Creating metrics dataframe
2022-10-01 18:42:53,247:INFO:Uploading results into container
2022-10-01 18:42:53,247:INFO:Uploading model into container now
2022-10-01 18:42:53,248:INFO:master_model_container: 1
2022-10-01 18:42:53,248:INFO:display_container: 2
2022-10-01 18:42:53,248:INFO:LinearRegression(n_jobs=-1)
2022-10-01 18:42:53,248:INFO:create_model() successfully completed......................................
2022-10-01 18:42:53,329:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:53,330:INFO:Creating metrics dataframe
2022-10-01 18:42:53,333:INFO:Initializing Lasso Regression
2022-10-01 18:42:53,333:INFO:Total runtime is 0.004929840564727783 minutes
2022-10-01 18:42:53,333:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:53,334:INFO:Initializing create_model()
2022-10-01 18:42:53,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:53,334:INFO:Checking exceptions
2022-10-01 18:42:53,335:INFO:Importing libraries
2022-10-01 18:42:53,335:INFO:Copying training dataset
2022-10-01 18:42:53,336:INFO:Defining folds
2022-10-01 18:42:53,336:INFO:Declaring metric variables
2022-10-01 18:42:53,336:INFO:Importing untrained model
2022-10-01 18:42:53,337:INFO:Lasso Regression Imported successfully
2022-10-01 18:42:53,337:INFO:Starting cross validation
2022-10-01 18:42:53,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:53,456:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:42:53,491:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:42:53,509:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:42:53,516:INFO:Calculating mean and std
2022-10-01 18:42:53,517:INFO:Creating metrics dataframe
2022-10-01 18:42:53,519:INFO:Uploading results into container
2022-10-01 18:42:53,520:INFO:Uploading model into container now
2022-10-01 18:42:53,520:INFO:master_model_container: 2
2022-10-01 18:42:53,520:INFO:display_container: 2
2022-10-01 18:42:53,520:INFO:Lasso(random_state=123)
2022-10-01 18:42:53,520:INFO:create_model() successfully completed......................................
2022-10-01 18:42:53,600:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:53,600:INFO:Creating metrics dataframe
2022-10-01 18:42:53,604:INFO:Initializing Ridge Regression
2022-10-01 18:42:53,604:INFO:Total runtime is 0.009450697898864746 minutes
2022-10-01 18:42:53,604:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:53,604:INFO:Initializing create_model()
2022-10-01 18:42:53,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:53,604:INFO:Checking exceptions
2022-10-01 18:42:53,605:INFO:Importing libraries
2022-10-01 18:42:53,605:INFO:Copying training dataset
2022-10-01 18:42:53,607:INFO:Defining folds
2022-10-01 18:42:53,607:INFO:Declaring metric variables
2022-10-01 18:42:53,607:INFO:Importing untrained model
2022-10-01 18:42:53,607:INFO:Ridge Regression Imported successfully
2022-10-01 18:42:53,608:INFO:Starting cross validation
2022-10-01 18:42:53,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:53,619:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,637:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,654:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,672:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,689:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,706:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,722:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,738:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,755:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,771:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:42:53,778:INFO:Calculating mean and std
2022-10-01 18:42:53,779:INFO:Creating metrics dataframe
2022-10-01 18:42:53,782:INFO:Uploading results into container
2022-10-01 18:42:53,782:INFO:Uploading model into container now
2022-10-01 18:42:53,782:INFO:master_model_container: 3
2022-10-01 18:42:53,782:INFO:display_container: 2
2022-10-01 18:42:53,783:INFO:Ridge(random_state=123)
2022-10-01 18:42:53,783:INFO:create_model() successfully completed......................................
2022-10-01 18:42:53,862:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:53,862:INFO:Creating metrics dataframe
2022-10-01 18:42:53,866:INFO:Initializing Elastic Net
2022-10-01 18:42:53,866:INFO:Total runtime is 0.013808321952819825 minutes
2022-10-01 18:42:53,866:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:53,866:INFO:Initializing create_model()
2022-10-01 18:42:53,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:53,866:INFO:Checking exceptions
2022-10-01 18:42:53,867:INFO:Importing libraries
2022-10-01 18:42:53,867:INFO:Copying training dataset
2022-10-01 18:42:53,869:INFO:Defining folds
2022-10-01 18:42:53,869:INFO:Declaring metric variables
2022-10-01 18:42:53,869:INFO:Importing untrained model
2022-10-01 18:42:53,869:INFO:Elastic Net Imported successfully
2022-10-01 18:42:53,869:INFO:Starting cross validation
2022-10-01 18:42:53,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:53,988:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:42:54,042:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:42:54,050:INFO:Calculating mean and std
2022-10-01 18:42:54,051:INFO:Creating metrics dataframe
2022-10-01 18:42:54,053:INFO:Uploading results into container
2022-10-01 18:42:54,054:INFO:Uploading model into container now
2022-10-01 18:42:54,054:INFO:master_model_container: 4
2022-10-01 18:42:54,054:INFO:display_container: 2
2022-10-01 18:42:54,054:INFO:ElasticNet(random_state=123)
2022-10-01 18:42:54,054:INFO:create_model() successfully completed......................................
2022-10-01 18:42:54,134:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:54,134:INFO:Creating metrics dataframe
2022-10-01 18:42:54,138:INFO:Initializing Least Angle Regression
2022-10-01 18:42:54,138:INFO:Total runtime is 0.018356406688690187 minutes
2022-10-01 18:42:54,138:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:54,138:INFO:Initializing create_model()
2022-10-01 18:42:54,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:54,138:INFO:Checking exceptions
2022-10-01 18:42:54,139:INFO:Importing libraries
2022-10-01 18:42:54,139:INFO:Copying training dataset
2022-10-01 18:42:54,141:INFO:Defining folds
2022-10-01 18:42:54,141:INFO:Declaring metric variables
2022-10-01 18:42:54,141:INFO:Importing untrained model
2022-10-01 18:42:54,141:INFO:Least Angle Regression Imported successfully
2022-10-01 18:42:54,142:INFO:Starting cross validation
2022-10-01 18:42:54,142:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:54,153:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,171:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,189:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,207:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,224:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,241:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,259:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,276:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,294:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,312:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,320:INFO:Calculating mean and std
2022-10-01 18:42:54,321:INFO:Creating metrics dataframe
2022-10-01 18:42:54,323:INFO:Uploading results into container
2022-10-01 18:42:54,324:INFO:Uploading model into container now
2022-10-01 18:42:54,324:INFO:master_model_container: 5
2022-10-01 18:42:54,324:INFO:display_container: 2
2022-10-01 18:42:54,324:INFO:Lars(random_state=123)
2022-10-01 18:42:54,324:INFO:create_model() successfully completed......................................
2022-10-01 18:42:54,403:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:54,403:INFO:Creating metrics dataframe
2022-10-01 18:42:54,407:INFO:Initializing Lasso Least Angle Regression
2022-10-01 18:42:54,407:INFO:Total runtime is 0.022827307383219402 minutes
2022-10-01 18:42:54,407:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:54,408:INFO:Initializing create_model()
2022-10-01 18:42:54,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:54,408:INFO:Checking exceptions
2022-10-01 18:42:54,409:INFO:Importing libraries
2022-10-01 18:42:54,409:INFO:Copying training dataset
2022-10-01 18:42:54,410:INFO:Defining folds
2022-10-01 18:42:54,411:INFO:Declaring metric variables
2022-10-01 18:42:54,411:INFO:Importing untrained model
2022-10-01 18:42:54,411:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 18:42:54,411:INFO:Starting cross validation
2022-10-01 18:42:54,412:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:54,422:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,441:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,459:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,476:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,494:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,510:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,528:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,545:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,562:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,586:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:42:54,595:INFO:Calculating mean and std
2022-10-01 18:42:54,596:INFO:Creating metrics dataframe
2022-10-01 18:42:54,598:INFO:Uploading results into container
2022-10-01 18:42:54,599:INFO:Uploading model into container now
2022-10-01 18:42:54,599:INFO:master_model_container: 6
2022-10-01 18:42:54,599:INFO:display_container: 2
2022-10-01 18:42:54,599:INFO:LassoLars(random_state=123)
2022-10-01 18:42:54,599:INFO:create_model() successfully completed......................................
2022-10-01 18:42:54,678:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:54,678:INFO:Creating metrics dataframe
2022-10-01 18:42:54,682:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 18:42:54,682:INFO:Total runtime is 0.027415104707082114 minutes
2022-10-01 18:42:54,682:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:54,682:INFO:Initializing create_model()
2022-10-01 18:42:54,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:54,682:INFO:Checking exceptions
2022-10-01 18:42:54,683:INFO:Importing libraries
2022-10-01 18:42:54,683:INFO:Copying training dataset
2022-10-01 18:42:54,685:INFO:Defining folds
2022-10-01 18:42:54,685:INFO:Declaring metric variables
2022-10-01 18:42:54,685:INFO:Importing untrained model
2022-10-01 18:42:54,685:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 18:42:54,686:INFO:Starting cross validation
2022-10-01 18:42:54,686:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:54,696:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,713:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,731:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,748:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,765:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,782:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,799:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,816:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,832:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,849:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:42:54,857:INFO:Calculating mean and std
2022-10-01 18:42:54,858:INFO:Creating metrics dataframe
2022-10-01 18:42:54,860:INFO:Uploading results into container
2022-10-01 18:42:54,861:INFO:Uploading model into container now
2022-10-01 18:42:54,861:INFO:master_model_container: 7
2022-10-01 18:42:54,861:INFO:display_container: 2
2022-10-01 18:42:54,861:INFO:OrthogonalMatchingPursuit()
2022-10-01 18:42:54,861:INFO:create_model() successfully completed......................................
2022-10-01 18:42:54,942:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:54,942:INFO:Creating metrics dataframe
2022-10-01 18:42:54,946:INFO:Initializing Bayesian Ridge
2022-10-01 18:42:54,946:INFO:Total runtime is 0.031811428070068364 minutes
2022-10-01 18:42:54,946:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:54,946:INFO:Initializing create_model()
2022-10-01 18:42:54,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:54,946:INFO:Checking exceptions
2022-10-01 18:42:54,947:INFO:Importing libraries
2022-10-01 18:42:54,947:INFO:Copying training dataset
2022-10-01 18:42:54,949:INFO:Defining folds
2022-10-01 18:42:54,949:INFO:Declaring metric variables
2022-10-01 18:42:54,949:INFO:Importing untrained model
2022-10-01 18:42:54,949:INFO:Bayesian Ridge Imported successfully
2022-10-01 18:42:54,949:INFO:Starting cross validation
2022-10-01 18:42:54,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:55,124:INFO:Calculating mean and std
2022-10-01 18:42:55,125:INFO:Creating metrics dataframe
2022-10-01 18:42:55,127:INFO:Uploading results into container
2022-10-01 18:42:55,127:INFO:Uploading model into container now
2022-10-01 18:42:55,128:INFO:master_model_container: 8
2022-10-01 18:42:55,128:INFO:display_container: 2
2022-10-01 18:42:55,128:INFO:BayesianRidge()
2022-10-01 18:42:55,128:INFO:create_model() successfully completed......................................
2022-10-01 18:42:55,207:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:55,207:INFO:Creating metrics dataframe
2022-10-01 18:42:55,212:INFO:Initializing Passive Aggressive Regressor
2022-10-01 18:42:55,212:INFO:Total runtime is 0.036245799064636236 minutes
2022-10-01 18:42:55,212:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:55,212:INFO:Initializing create_model()
2022-10-01 18:42:55,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:55,212:INFO:Checking exceptions
2022-10-01 18:42:55,213:INFO:Importing libraries
2022-10-01 18:42:55,213:INFO:Copying training dataset
2022-10-01 18:42:55,215:INFO:Defining folds
2022-10-01 18:42:55,215:INFO:Declaring metric variables
2022-10-01 18:42:55,215:INFO:Importing untrained model
2022-10-01 18:42:55,216:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 18:42:55,216:INFO:Starting cross validation
2022-10-01 18:42:55,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:55,387:INFO:Calculating mean and std
2022-10-01 18:42:55,388:INFO:Creating metrics dataframe
2022-10-01 18:42:55,390:INFO:Uploading results into container
2022-10-01 18:42:55,391:INFO:Uploading model into container now
2022-10-01 18:42:55,391:INFO:master_model_container: 9
2022-10-01 18:42:55,391:INFO:display_container: 2
2022-10-01 18:42:55,391:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 18:42:55,391:INFO:create_model() successfully completed......................................
2022-10-01 18:42:55,475:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:55,475:INFO:Creating metrics dataframe
2022-10-01 18:42:55,479:INFO:Initializing Huber Regressor
2022-10-01 18:42:55,479:INFO:Total runtime is 0.04069131612777711 minutes
2022-10-01 18:42:55,479:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:55,479:INFO:Initializing create_model()
2022-10-01 18:42:55,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:55,479:INFO:Checking exceptions
2022-10-01 18:42:55,480:INFO:Importing libraries
2022-10-01 18:42:55,480:INFO:Copying training dataset
2022-10-01 18:42:55,482:INFO:Defining folds
2022-10-01 18:42:55,482:INFO:Declaring metric variables
2022-10-01 18:42:55,482:INFO:Importing untrained model
2022-10-01 18:42:55,482:INFO:Huber Regressor Imported successfully
2022-10-01 18:42:55,482:INFO:Starting cross validation
2022-10-01 18:42:55,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:55,729:INFO:Calculating mean and std
2022-10-01 18:42:55,730:INFO:Creating metrics dataframe
2022-10-01 18:42:55,732:INFO:Uploading results into container
2022-10-01 18:42:55,732:INFO:Uploading model into container now
2022-10-01 18:42:55,733:INFO:master_model_container: 10
2022-10-01 18:42:55,733:INFO:display_container: 2
2022-10-01 18:42:55,733:INFO:HuberRegressor()
2022-10-01 18:42:55,733:INFO:create_model() successfully completed......................................
2022-10-01 18:42:55,813:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:55,813:INFO:Creating metrics dataframe
2022-10-01 18:42:55,818:INFO:Initializing K Neighbors Regressor
2022-10-01 18:42:55,818:INFO:Total runtime is 0.04634844859441122 minutes
2022-10-01 18:42:55,818:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:55,818:INFO:Initializing create_model()
2022-10-01 18:42:55,818:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:55,818:INFO:Checking exceptions
2022-10-01 18:42:55,819:INFO:Importing libraries
2022-10-01 18:42:55,819:INFO:Copying training dataset
2022-10-01 18:42:55,821:INFO:Defining folds
2022-10-01 18:42:55,821:INFO:Declaring metric variables
2022-10-01 18:42:55,821:INFO:Importing untrained model
2022-10-01 18:42:55,821:INFO:K Neighbors Regressor Imported successfully
2022-10-01 18:42:55,821:INFO:Starting cross validation
2022-10-01 18:42:55,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:58,492:INFO:Calculating mean and std
2022-10-01 18:42:58,493:INFO:Creating metrics dataframe
2022-10-01 18:42:58,495:INFO:Uploading results into container
2022-10-01 18:42:58,495:INFO:Uploading model into container now
2022-10-01 18:42:58,496:INFO:master_model_container: 11
2022-10-01 18:42:58,496:INFO:display_container: 2
2022-10-01 18:42:58,496:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 18:42:58,496:INFO:create_model() successfully completed......................................
2022-10-01 18:42:58,588:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:58,588:INFO:Creating metrics dataframe
2022-10-01 18:42:58,592:INFO:Initializing Decision Tree Regressor
2022-10-01 18:42:58,592:INFO:Total runtime is 0.09258488814036052 minutes
2022-10-01 18:42:58,592:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:58,592:INFO:Initializing create_model()
2022-10-01 18:42:58,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:58,592:INFO:Checking exceptions
2022-10-01 18:42:58,593:INFO:Importing libraries
2022-10-01 18:42:58,593:INFO:Copying training dataset
2022-10-01 18:42:58,595:INFO:Defining folds
2022-10-01 18:42:58,595:INFO:Declaring metric variables
2022-10-01 18:42:58,595:INFO:Importing untrained model
2022-10-01 18:42:58,596:INFO:Decision Tree Regressor Imported successfully
2022-10-01 18:42:58,596:INFO:Starting cross validation
2022-10-01 18:42:58,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:42:58,802:INFO:Calculating mean and std
2022-10-01 18:42:58,802:INFO:Creating metrics dataframe
2022-10-01 18:42:58,806:INFO:Uploading results into container
2022-10-01 18:42:58,807:INFO:Uploading model into container now
2022-10-01 18:42:58,807:INFO:master_model_container: 12
2022-10-01 18:42:58,807:INFO:display_container: 2
2022-10-01 18:42:58,808:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 18:42:58,808:INFO:create_model() successfully completed......................................
2022-10-01 18:42:58,897:INFO:SubProcess create_model() end ==================================
2022-10-01 18:42:58,897:INFO:Creating metrics dataframe
2022-10-01 18:42:58,902:INFO:Initializing Random Forest Regressor
2022-10-01 18:42:58,902:INFO:Total runtime is 0.09774744908014933 minutes
2022-10-01 18:42:58,902:INFO:SubProcess create_model() called ==================================
2022-10-01 18:42:58,902:INFO:Initializing create_model()
2022-10-01 18:42:58,902:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:42:58,902:INFO:Checking exceptions
2022-10-01 18:42:58,903:INFO:Importing libraries
2022-10-01 18:42:58,903:INFO:Copying training dataset
2022-10-01 18:42:58,905:INFO:Defining folds
2022-10-01 18:42:58,905:INFO:Declaring metric variables
2022-10-01 18:42:58,905:INFO:Importing untrained model
2022-10-01 18:42:58,906:INFO:Random Forest Regressor Imported successfully
2022-10-01 18:42:58,906:INFO:Starting cross validation
2022-10-01 18:42:58,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:00,435:INFO:Calculating mean and std
2022-10-01 18:43:00,436:INFO:Creating metrics dataframe
2022-10-01 18:43:00,440:INFO:Uploading results into container
2022-10-01 18:43:00,440:INFO:Uploading model into container now
2022-10-01 18:43:00,441:INFO:master_model_container: 13
2022-10-01 18:43:00,441:INFO:display_container: 2
2022-10-01 18:43:00,441:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:43:00,441:INFO:create_model() successfully completed......................................
2022-10-01 18:43:00,530:INFO:SubProcess create_model() end ==================================
2022-10-01 18:43:00,530:INFO:Creating metrics dataframe
2022-10-01 18:43:00,534:INFO:Initializing Extra Trees Regressor
2022-10-01 18:43:00,534:INFO:Total runtime is 0.12495363553365071 minutes
2022-10-01 18:43:00,534:INFO:SubProcess create_model() called ==================================
2022-10-01 18:43:00,534:INFO:Initializing create_model()
2022-10-01 18:43:00,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:00,535:INFO:Checking exceptions
2022-10-01 18:43:00,536:INFO:Importing libraries
2022-10-01 18:43:00,536:INFO:Copying training dataset
2022-10-01 18:43:00,537:INFO:Defining folds
2022-10-01 18:43:00,538:INFO:Declaring metric variables
2022-10-01 18:43:00,538:INFO:Importing untrained model
2022-10-01 18:43:00,538:INFO:Extra Trees Regressor Imported successfully
2022-10-01 18:43:00,538:INFO:Starting cross validation
2022-10-01 18:43:00,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:01,883:INFO:Calculating mean and std
2022-10-01 18:43:01,884:INFO:Creating metrics dataframe
2022-10-01 18:43:01,887:INFO:Uploading results into container
2022-10-01 18:43:01,887:INFO:Uploading model into container now
2022-10-01 18:43:01,887:INFO:master_model_container: 14
2022-10-01 18:43:01,887:INFO:display_container: 2
2022-10-01 18:43:01,888:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:43:01,888:INFO:create_model() successfully completed......................................
2022-10-01 18:43:01,974:INFO:SubProcess create_model() end ==================================
2022-10-01 18:43:01,974:INFO:Creating metrics dataframe
2022-10-01 18:43:01,978:INFO:Initializing AdaBoost Regressor
2022-10-01 18:43:01,978:INFO:Total runtime is 0.14901509682337444 minutes
2022-10-01 18:43:01,978:INFO:SubProcess create_model() called ==================================
2022-10-01 18:43:01,979:INFO:Initializing create_model()
2022-10-01 18:43:01,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:01,979:INFO:Checking exceptions
2022-10-01 18:43:01,980:INFO:Importing libraries
2022-10-01 18:43:01,980:INFO:Copying training dataset
2022-10-01 18:43:01,981:INFO:Defining folds
2022-10-01 18:43:01,981:INFO:Declaring metric variables
2022-10-01 18:43:01,981:INFO:Importing untrained model
2022-10-01 18:43:01,982:INFO:AdaBoost Regressor Imported successfully
2022-10-01 18:43:01,982:INFO:Starting cross validation
2022-10-01 18:43:01,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:02,686:INFO:Calculating mean and std
2022-10-01 18:43:02,687:INFO:Creating metrics dataframe
2022-10-01 18:43:02,689:INFO:Uploading results into container
2022-10-01 18:43:02,690:INFO:Uploading model into container now
2022-10-01 18:43:02,690:INFO:master_model_container: 15
2022-10-01 18:43:02,690:INFO:display_container: 2
2022-10-01 18:43:02,690:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 18:43:02,690:INFO:create_model() successfully completed......................................
2022-10-01 18:43:02,776:INFO:SubProcess create_model() end ==================================
2022-10-01 18:43:02,776:INFO:Creating metrics dataframe
2022-10-01 18:43:02,780:INFO:Initializing Gradient Boosting Regressor
2022-10-01 18:43:02,780:INFO:Total runtime is 0.1623824914296468 minutes
2022-10-01 18:43:02,780:INFO:SubProcess create_model() called ==================================
2022-10-01 18:43:02,781:INFO:Initializing create_model()
2022-10-01 18:43:02,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:02,781:INFO:Checking exceptions
2022-10-01 18:43:02,782:INFO:Importing libraries
2022-10-01 18:43:02,782:INFO:Copying training dataset
2022-10-01 18:43:02,783:INFO:Defining folds
2022-10-01 18:43:02,783:INFO:Declaring metric variables
2022-10-01 18:43:02,784:INFO:Importing untrained model
2022-10-01 18:43:02,784:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 18:43:02,784:INFO:Starting cross validation
2022-10-01 18:43:02,785:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:03,392:INFO:Calculating mean and std
2022-10-01 18:43:03,393:INFO:Creating metrics dataframe
2022-10-01 18:43:03,395:INFO:Uploading results into container
2022-10-01 18:43:03,396:INFO:Uploading model into container now
2022-10-01 18:43:03,396:INFO:master_model_container: 16
2022-10-01 18:43:03,396:INFO:display_container: 2
2022-10-01 18:43:03,396:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 18:43:03,396:INFO:create_model() successfully completed......................................
2022-10-01 18:43:03,476:INFO:SubProcess create_model() end ==================================
2022-10-01 18:43:03,476:INFO:Creating metrics dataframe
2022-10-01 18:43:03,480:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 18:43:03,480:INFO:Total runtime is 0.1740488290786743 minutes
2022-10-01 18:43:03,480:INFO:SubProcess create_model() called ==================================
2022-10-01 18:43:03,481:INFO:Initializing create_model()
2022-10-01 18:43:03,481:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:03,481:INFO:Checking exceptions
2022-10-01 18:43:03,482:INFO:Importing libraries
2022-10-01 18:43:03,482:INFO:Copying training dataset
2022-10-01 18:43:03,483:INFO:Defining folds
2022-10-01 18:43:03,483:INFO:Declaring metric variables
2022-10-01 18:43:03,483:INFO:Importing untrained model
2022-10-01 18:43:03,484:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 18:43:03,484:INFO:Starting cross validation
2022-10-01 18:43:03,484:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:08,564:INFO:Calculating mean and std
2022-10-01 18:43:08,565:INFO:Creating metrics dataframe
2022-10-01 18:43:08,569:INFO:Uploading results into container
2022-10-01 18:43:08,569:INFO:Uploading model into container now
2022-10-01 18:43:08,569:INFO:master_model_container: 17
2022-10-01 18:43:08,570:INFO:display_container: 2
2022-10-01 18:43:08,570:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 18:43:08,570:INFO:create_model() successfully completed......................................
2022-10-01 18:43:08,666:INFO:SubProcess create_model() end ==================================
2022-10-01 18:43:08,667:INFO:Creating metrics dataframe
2022-10-01 18:43:08,671:INFO:Initializing Dummy Regressor
2022-10-01 18:43:08,671:INFO:Total runtime is 0.2605586767196655 minutes
2022-10-01 18:43:08,671:INFO:SubProcess create_model() called ==================================
2022-10-01 18:43:08,671:INFO:Initializing create_model()
2022-10-01 18:43:08,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013AF140F970>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:08,671:INFO:Checking exceptions
2022-10-01 18:43:08,672:INFO:Importing libraries
2022-10-01 18:43:08,672:INFO:Copying training dataset
2022-10-01 18:43:08,674:INFO:Defining folds
2022-10-01 18:43:08,674:INFO:Declaring metric variables
2022-10-01 18:43:08,674:INFO:Importing untrained model
2022-10-01 18:43:08,675:INFO:Dummy Regressor Imported successfully
2022-10-01 18:43:08,675:INFO:Starting cross validation
2022-10-01 18:43:08,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:08,850:INFO:Calculating mean and std
2022-10-01 18:43:08,850:INFO:Creating metrics dataframe
2022-10-01 18:43:08,853:INFO:Uploading results into container
2022-10-01 18:43:08,853:INFO:Uploading model into container now
2022-10-01 18:43:08,853:INFO:master_model_container: 18
2022-10-01 18:43:08,853:INFO:display_container: 2
2022-10-01 18:43:08,854:INFO:DummyRegressor()
2022-10-01 18:43:08,854:INFO:create_model() successfully completed......................................
2022-10-01 18:43:08,935:INFO:SubProcess create_model() end ==================================
2022-10-01 18:43:08,935:INFO:Creating metrics dataframe
2022-10-01 18:43:08,940:INFO:Initializing create_model()
2022-10-01 18:43:08,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:08,940:INFO:Checking exceptions
2022-10-01 18:43:08,942:INFO:Importing libraries
2022-10-01 18:43:08,942:INFO:Copying training dataset
2022-10-01 18:43:08,944:INFO:Defining folds
2022-10-01 18:43:08,944:INFO:Declaring metric variables
2022-10-01 18:43:08,944:INFO:Importing untrained model
2022-10-01 18:43:08,944:INFO:Declaring custom model
2022-10-01 18:43:08,944:INFO:Lasso Regression Imported successfully
2022-10-01 18:43:08,945:INFO:Cross validation set to False
2022-10-01 18:43:08,945:INFO:Fitting Model
2022-10-01 18:43:08,955:INFO:Lasso(random_state=123)
2022-10-01 18:43:08,955:INFO:create_model() successfully completed......................................
2022-10-01 18:43:09,049:INFO:master_model_container: 18
2022-10-01 18:43:09,049:INFO:display_container: 2
2022-10-01 18:43:09,049:INFO:Lasso(random_state=123)
2022-10-01 18:43:09,049:INFO:compare_models() successfully completed......................................
2022-10-01 18:43:09,050:INFO:Initializing create_model()
2022-10-01 18:43:09,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:43:09,050:INFO:Checking exceptions
2022-10-01 18:43:09,052:INFO:Importing libraries
2022-10-01 18:43:09,052:INFO:Copying training dataset
2022-10-01 18:43:09,054:INFO:Defining folds
2022-10-01 18:43:09,054:INFO:Declaring metric variables
2022-10-01 18:43:09,054:INFO:Importing untrained model
2022-10-01 18:43:09,054:INFO:Declaring custom model
2022-10-01 18:43:09,054:INFO:Lasso Regression Imported successfully
2022-10-01 18:43:09,055:INFO:Starting cross validation
2022-10-01 18:43:09,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:43:09,193:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:43:09,229:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:43:09,248:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:43:09,256:INFO:Calculating mean and std
2022-10-01 18:43:09,257:INFO:Creating metrics dataframe
2022-10-01 18:43:09,258:INFO:Finalizing model
2022-10-01 18:43:09,269:INFO:Uploading results into container
2022-10-01 18:43:09,269:INFO:Uploading model into container now
2022-10-01 18:43:09,279:INFO:master_model_container: 19
2022-10-01 18:43:09,279:INFO:display_container: 3
2022-10-01 18:43:09,279:INFO:Lasso(random_state=123)
2022-10-01 18:43:09,279:INFO:create_model() successfully completed......................................
2022-10-01 18:43:09,385:INFO:Initializing predict_model()
2022-10-01 18:43:09,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013AE8C91C00>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013AE8E61630>)
2022-10-01 18:43:09,385:INFO:Checking exceptions
2022-10-01 18:43:09,385:INFO:Preloading libraries
2022-10-01 18:43:09,385:INFO:Set up data.
2022-10-01 18:43:09,388:INFO:Set up index.
2022-10-01 18:43:09,510:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:54: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 18:46:57,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:46:57,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:46:57,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:46:57,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:46:58,437:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 18:46:59,222:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 18:47:00,375:INFO:PyCaret RegressionExperiment
2022-10-01 18:47:00,375:INFO:Logging name: reg-default-name
2022-10-01 18:47:00,375:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 18:47:00,375:INFO:version 3.0.0.rc4
2022-10-01 18:47:00,376:INFO:Initializing setup()
2022-10-01 18:47:00,376:INFO:self.USI: a6bb
2022-10-01 18:47:00,376:INFO:self.variable_keys: {'logging_param', 'memory', 'log_plots_param', 'fold_groups_param', 'USI', 'exp_id', '_available_plots', 'data', 'display_container', '_all_models_internal', 'idx', 'master_model_container', 'exp_name_log', '_all_metrics', 'gpu_param', 'seed', 'transform_target_method_param', 'fold_shuffle_param', 'variable_keys', 'X', 'y_test', 'pipeline', 'X_test', '_all_models', 'html_param', 'fold_generator', 'X_train', 'n_jobs_param', 'target_param', 'y', '_gpu_n_jobs_param', 'transform_target_param', 'y_train', '_ml_usecase'}
2022-10-01 18:47:00,376:INFO:Checking environment
2022-10-01 18:47:00,376:INFO:python_version: 3.10.7
2022-10-01 18:47:00,376:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 18:47:00,376:INFO:machine: AMD64
2022-10-01 18:47:00,391:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 18:47:00,392:INFO:Memory: svmem(total=8497213440, available=1890574336, percent=77.8, used=6606639104, free=1890574336)
2022-10-01 18:47:00,392:INFO:Physical Core: 6
2022-10-01 18:47:00,392:INFO:Logical Core: 12
2022-10-01 18:47:00,392:INFO:Checking libraries
2022-10-01 18:47:00,392:INFO:System:
2022-10-01 18:47:00,392:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 18:47:00,392:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 18:47:00,392:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 18:47:00,392:INFO:PyCaret required dependencies:
2022-10-01 18:47:00,392:INFO:                 pip: 22.2.2
2022-10-01 18:47:00,392:INFO:          setuptools: 63.2.0
2022-10-01 18:47:00,392:INFO:             pycaret: 3.0.0rc4
2022-10-01 18:47:00,392:INFO:             IPython: 8.5.0
2022-10-01 18:47:00,392:INFO:          ipywidgets: 8.0.2
2022-10-01 18:47:00,393:INFO:                tqdm: 4.64.1
2022-10-01 18:47:00,393:INFO:               numpy: 1.22.4
2022-10-01 18:47:00,393:INFO:              pandas: 1.4.4
2022-10-01 18:47:00,393:INFO:              jinja2: 3.1.2
2022-10-01 18:47:00,393:INFO:               scipy: 1.8.1
2022-10-01 18:47:00,393:INFO:              joblib: 1.2.0
2022-10-01 18:47:00,393:INFO:             sklearn: 1.1.2
2022-10-01 18:47:00,393:INFO:                pyod: 1.0.5
2022-10-01 18:47:00,393:INFO:            imblearn: 0.9.1
2022-10-01 18:47:00,393:INFO:   category_encoders: 2.5.0
2022-10-01 18:47:00,393:INFO:            lightgbm: 3.3.2
2022-10-01 18:47:00,393:INFO:               numba: 0.55.2
2022-10-01 18:47:00,393:INFO:            requests: 2.28.1
2022-10-01 18:47:00,393:INFO:          matplotlib: 3.6.0
2022-10-01 18:47:00,393:INFO:          scikitplot: 0.3.7
2022-10-01 18:47:00,393:INFO:         yellowbrick: 1.5
2022-10-01 18:47:00,393:INFO:              plotly: 5.10.0
2022-10-01 18:47:00,393:INFO:             kaleido: 0.2.1
2022-10-01 18:47:00,393:INFO:         statsmodels: 0.13.2
2022-10-01 18:47:00,394:INFO:              sktime: 0.13.4
2022-10-01 18:47:00,394:INFO:               tbats: 1.1.0
2022-10-01 18:47:00,394:INFO:            pmdarima: 1.8.5
2022-10-01 18:47:00,394:INFO:              psutil: 5.9.2
2022-10-01 18:47:00,394:INFO:PyCaret optional dependencies:
2022-10-01 18:47:00,407:INFO:                shap: Not installed
2022-10-01 18:47:00,408:INFO:           interpret: Not installed
2022-10-01 18:47:00,408:INFO:                umap: Not installed
2022-10-01 18:47:00,408:INFO:    pandas_profiling: Not installed
2022-10-01 18:47:00,408:INFO:  explainerdashboard: Not installed
2022-10-01 18:47:00,408:INFO:             autoviz: Not installed
2022-10-01 18:47:00,408:INFO:           fairlearn: Not installed
2022-10-01 18:47:00,408:INFO:             xgboost: Not installed
2022-10-01 18:47:00,408:INFO:            catboost: Not installed
2022-10-01 18:47:00,408:INFO:              kmodes: Not installed
2022-10-01 18:47:00,408:INFO:             mlxtend: Not installed
2022-10-01 18:47:00,408:INFO:       statsforecast: Not installed
2022-10-01 18:47:00,408:INFO:        tune_sklearn: Not installed
2022-10-01 18:47:00,408:INFO:                 ray: Not installed
2022-10-01 18:47:00,408:INFO:            hyperopt: Not installed
2022-10-01 18:47:00,408:INFO:              optuna: Not installed
2022-10-01 18:47:00,408:INFO:               skopt: Not installed
2022-10-01 18:47:00,408:INFO:              mlflow: Not installed
2022-10-01 18:47:00,408:INFO:              gradio: Not installed
2022-10-01 18:47:00,408:INFO:             fastapi: Not installed
2022-10-01 18:47:00,408:INFO:             uvicorn: Not installed
2022-10-01 18:47:00,408:INFO:              m2cgen: Not installed
2022-10-01 18:47:00,408:INFO:           evidently: Not installed
2022-10-01 18:47:00,409:INFO:                nltk: Not installed
2022-10-01 18:47:00,409:INFO:            pyLDAvis: Not installed
2022-10-01 18:47:00,409:INFO:              gensim: Not installed
2022-10-01 18:47:00,409:INFO:               spacy: Not installed
2022-10-01 18:47:00,409:INFO:           wordcloud: Not installed
2022-10-01 18:47:00,409:INFO:            textblob: Not installed
2022-10-01 18:47:00,409:INFO:               fugue: Not installed
2022-10-01 18:47:00,409:INFO:           streamlit: Not installed
2022-10-01 18:47:00,409:INFO:             prophet: Not installed
2022-10-01 18:47:00,409:INFO:None
2022-10-01 18:47:00,409:INFO:Set up GPU usage.
2022-10-01 18:47:00,409:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,409:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 18:47:00,409:INFO:Set up data.
2022-10-01 18:47:00,413:INFO:Set up train/test split.
2022-10-01 18:47:00,415:INFO:Set up index.
2022-10-01 18:47:00,415:INFO:Set up folding strategy.
2022-10-01 18:47:00,415:INFO:Assigning column types.
2022-10-01 18:47:00,417:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 18:47:00,417:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,417:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,417:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,422:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,426:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,478:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:00,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:00,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,933:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,939:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:00,946:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:47:00,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,031:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:01,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:01,310:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 18:47:01,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,317:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,324:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,407:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,451:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:01,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:01,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,691:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,698:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,698:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,781:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,781:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,825:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:01,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:01,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:02,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:02,060:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 18:47:02,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,157:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:02,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:02,429:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,429:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,443:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,526:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:02,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:02,793:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 18:47:02,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,800:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,894:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,938:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:02,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:02,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:03,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:03,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,269:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:03,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:47:03,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:03,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:03,563:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 18:47:03,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:03,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:03,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:03,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:03,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:47:04,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:04,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:04,309:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 18:47:04,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:04,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:04,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:04,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:05,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:05,102:INFO:Preparing preprocessing pipeline...
2022-10-01 18:47:05,103:INFO:Set up simple imputation.
2022-10-01 18:47:05,104:INFO:Set up variance threshold.
2022-10-01 18:47:05,119:INFO:Finished creating preprocessing pipeline.
2022-10-01 18:47:05,126:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 18:47:05,126:INFO:Creating final display dataframe.
2022-10-01 18:47:05,207:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              a6bb
2022-10-01 18:47:05,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:05,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:05,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,681:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:47:05,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:05,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:47:05,949:INFO:setup() successfully completed in 5.57s...............
2022-10-01 18:47:05,949:INFO:Initializing compare_models()
2022-10-01 18:47:05,949:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 18:47:05,949:INFO:Checking exceptions
2022-10-01 18:47:05,950:INFO:Preparing display monitor
2022-10-01 18:47:05,954:INFO:Initializing Linear Regression
2022-10-01 18:47:05,954:INFO:Total runtime is 0.0 minutes
2022-10-01 18:47:05,954:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:05,954:INFO:Initializing create_model()
2022-10-01 18:47:05,954:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:05,954:INFO:Checking exceptions
2022-10-01 18:47:05,956:INFO:Importing libraries
2022-10-01 18:47:05,956:INFO:Copying training dataset
2022-10-01 18:47:05,958:INFO:Defining folds
2022-10-01 18:47:05,958:INFO:Declaring metric variables
2022-10-01 18:47:05,958:INFO:Importing untrained model
2022-10-01 18:47:05,958:INFO:Linear Regression Imported successfully
2022-10-01 18:47:05,959:INFO:Starting cross validation
2022-10-01 18:47:05,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:06,163:INFO:Calculating mean and std
2022-10-01 18:47:06,164:INFO:Creating metrics dataframe
2022-10-01 18:47:06,166:INFO:Uploading results into container
2022-10-01 18:47:06,167:INFO:Uploading model into container now
2022-10-01 18:47:06,167:INFO:master_model_container: 1
2022-10-01 18:47:06,167:INFO:display_container: 2
2022-10-01 18:47:06,167:INFO:LinearRegression(n_jobs=-1)
2022-10-01 18:47:06,167:INFO:create_model() successfully completed......................................
2022-10-01 18:47:06,249:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:06,249:INFO:Creating metrics dataframe
2022-10-01 18:47:06,252:INFO:Initializing Lasso Regression
2022-10-01 18:47:06,252:INFO:Total runtime is 0.004976411660512288 minutes
2022-10-01 18:47:06,253:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:06,253:INFO:Initializing create_model()
2022-10-01 18:47:06,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:06,253:INFO:Checking exceptions
2022-10-01 18:47:06,254:INFO:Importing libraries
2022-10-01 18:47:06,254:INFO:Copying training dataset
2022-10-01 18:47:06,256:INFO:Defining folds
2022-10-01 18:47:06,256:INFO:Declaring metric variables
2022-10-01 18:47:06,256:INFO:Importing untrained model
2022-10-01 18:47:06,256:INFO:Lasso Regression Imported successfully
2022-10-01 18:47:06,256:INFO:Starting cross validation
2022-10-01 18:47:06,257:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:06,377:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:06,412:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:06,430:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:06,438:INFO:Calculating mean and std
2022-10-01 18:47:06,439:INFO:Creating metrics dataframe
2022-10-01 18:47:06,441:INFO:Uploading results into container
2022-10-01 18:47:06,441:INFO:Uploading model into container now
2022-10-01 18:47:06,442:INFO:master_model_container: 2
2022-10-01 18:47:06,442:INFO:display_container: 2
2022-10-01 18:47:06,442:INFO:Lasso(random_state=123)
2022-10-01 18:47:06,442:INFO:create_model() successfully completed......................................
2022-10-01 18:47:06,520:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:06,520:INFO:Creating metrics dataframe
2022-10-01 18:47:06,524:INFO:Initializing Ridge Regression
2022-10-01 18:47:06,524:INFO:Total runtime is 0.009500845273335775 minutes
2022-10-01 18:47:06,524:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:06,524:INFO:Initializing create_model()
2022-10-01 18:47:06,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:06,525:INFO:Checking exceptions
2022-10-01 18:47:06,525:INFO:Importing libraries
2022-10-01 18:47:06,526:INFO:Copying training dataset
2022-10-01 18:47:06,527:INFO:Defining folds
2022-10-01 18:47:06,527:INFO:Declaring metric variables
2022-10-01 18:47:06,527:INFO:Importing untrained model
2022-10-01 18:47:06,528:INFO:Ridge Regression Imported successfully
2022-10-01 18:47:06,528:INFO:Starting cross validation
2022-10-01 18:47:06,528:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:06,539:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,556:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,590:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,606:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,623:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,639:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,656:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,672:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,689:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:47:06,696:INFO:Calculating mean and std
2022-10-01 18:47:06,697:INFO:Creating metrics dataframe
2022-10-01 18:47:06,700:INFO:Uploading results into container
2022-10-01 18:47:06,700:INFO:Uploading model into container now
2022-10-01 18:47:06,701:INFO:master_model_container: 3
2022-10-01 18:47:06,701:INFO:display_container: 2
2022-10-01 18:47:06,701:INFO:Ridge(random_state=123)
2022-10-01 18:47:06,701:INFO:create_model() successfully completed......................................
2022-10-01 18:47:06,780:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:06,780:INFO:Creating metrics dataframe
2022-10-01 18:47:06,784:INFO:Initializing Elastic Net
2022-10-01 18:47:06,784:INFO:Total runtime is 0.013839276631673177 minutes
2022-10-01 18:47:06,784:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:06,784:INFO:Initializing create_model()
2022-10-01 18:47:06,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:06,784:INFO:Checking exceptions
2022-10-01 18:47:06,785:INFO:Importing libraries
2022-10-01 18:47:06,785:INFO:Copying training dataset
2022-10-01 18:47:06,786:INFO:Defining folds
2022-10-01 18:47:06,786:INFO:Declaring metric variables
2022-10-01 18:47:06,786:INFO:Importing untrained model
2022-10-01 18:47:06,787:INFO:Elastic Net Imported successfully
2022-10-01 18:47:06,787:INFO:Starting cross validation
2022-10-01 18:47:06,788:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:06,907:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:06,960:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:06,968:INFO:Calculating mean and std
2022-10-01 18:47:06,968:INFO:Creating metrics dataframe
2022-10-01 18:47:06,971:INFO:Uploading results into container
2022-10-01 18:47:06,971:INFO:Uploading model into container now
2022-10-01 18:47:06,971:INFO:master_model_container: 4
2022-10-01 18:47:06,971:INFO:display_container: 2
2022-10-01 18:47:06,972:INFO:ElasticNet(random_state=123)
2022-10-01 18:47:06,972:INFO:create_model() successfully completed......................................
2022-10-01 18:47:07,049:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:07,049:INFO:Creating metrics dataframe
2022-10-01 18:47:07,053:INFO:Initializing Least Angle Regression
2022-10-01 18:47:07,053:INFO:Total runtime is 0.018332449595133464 minutes
2022-10-01 18:47:07,053:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:07,053:INFO:Initializing create_model()
2022-10-01 18:47:07,053:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:07,053:INFO:Checking exceptions
2022-10-01 18:47:07,054:INFO:Importing libraries
2022-10-01 18:47:07,054:INFO:Copying training dataset
2022-10-01 18:47:07,056:INFO:Defining folds
2022-10-01 18:47:07,056:INFO:Declaring metric variables
2022-10-01 18:47:07,056:INFO:Importing untrained model
2022-10-01 18:47:07,056:INFO:Least Angle Regression Imported successfully
2022-10-01 18:47:07,056:INFO:Starting cross validation
2022-10-01 18:47:07,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:07,068:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,086:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,102:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,119:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,136:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,153:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,171:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,188:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,206:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,223:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,231:INFO:Calculating mean and std
2022-10-01 18:47:07,232:INFO:Creating metrics dataframe
2022-10-01 18:47:07,234:INFO:Uploading results into container
2022-10-01 18:47:07,235:INFO:Uploading model into container now
2022-10-01 18:47:07,235:INFO:master_model_container: 5
2022-10-01 18:47:07,235:INFO:display_container: 2
2022-10-01 18:47:07,235:INFO:Lars(random_state=123)
2022-10-01 18:47:07,235:INFO:create_model() successfully completed......................................
2022-10-01 18:47:07,315:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:07,316:INFO:Creating metrics dataframe
2022-10-01 18:47:07,319:INFO:Initializing Lasso Least Angle Regression
2022-10-01 18:47:07,320:INFO:Total runtime is 0.022778332233428955 minutes
2022-10-01 18:47:07,320:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:07,320:INFO:Initializing create_model()
2022-10-01 18:47:07,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:07,320:INFO:Checking exceptions
2022-10-01 18:47:07,321:INFO:Importing libraries
2022-10-01 18:47:07,321:INFO:Copying training dataset
2022-10-01 18:47:07,323:INFO:Defining folds
2022-10-01 18:47:07,323:INFO:Declaring metric variables
2022-10-01 18:47:07,323:INFO:Importing untrained model
2022-10-01 18:47:07,323:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 18:47:07,323:INFO:Starting cross validation
2022-10-01 18:47:07,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:07,334:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,352:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,369:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,388:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,405:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,423:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,440:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,457:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,474:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,491:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:47:07,499:INFO:Calculating mean and std
2022-10-01 18:47:07,500:INFO:Creating metrics dataframe
2022-10-01 18:47:07,502:INFO:Uploading results into container
2022-10-01 18:47:07,503:INFO:Uploading model into container now
2022-10-01 18:47:07,503:INFO:master_model_container: 6
2022-10-01 18:47:07,503:INFO:display_container: 2
2022-10-01 18:47:07,503:INFO:LassoLars(random_state=123)
2022-10-01 18:47:07,503:INFO:create_model() successfully completed......................................
2022-10-01 18:47:07,583:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:07,583:INFO:Creating metrics dataframe
2022-10-01 18:47:07,588:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 18:47:07,588:INFO:Total runtime is 0.027241845925649006 minutes
2022-10-01 18:47:07,588:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:07,588:INFO:Initializing create_model()
2022-10-01 18:47:07,588:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:07,588:INFO:Checking exceptions
2022-10-01 18:47:07,589:INFO:Importing libraries
2022-10-01 18:47:07,590:INFO:Copying training dataset
2022-10-01 18:47:07,591:INFO:Defining folds
2022-10-01 18:47:07,591:INFO:Declaring metric variables
2022-10-01 18:47:07,591:INFO:Importing untrained model
2022-10-01 18:47:07,592:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 18:47:07,592:INFO:Starting cross validation
2022-10-01 18:47:07,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:07,602:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,619:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,636:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,653:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,671:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,688:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,705:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,722:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,738:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,755:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:47:07,763:INFO:Calculating mean and std
2022-10-01 18:47:07,764:INFO:Creating metrics dataframe
2022-10-01 18:47:07,766:INFO:Uploading results into container
2022-10-01 18:47:07,767:INFO:Uploading model into container now
2022-10-01 18:47:07,767:INFO:master_model_container: 7
2022-10-01 18:47:07,767:INFO:display_container: 2
2022-10-01 18:47:07,767:INFO:OrthogonalMatchingPursuit()
2022-10-01 18:47:07,767:INFO:create_model() successfully completed......................................
2022-10-01 18:47:07,846:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:07,846:INFO:Creating metrics dataframe
2022-10-01 18:47:07,850:INFO:Initializing Bayesian Ridge
2022-10-01 18:47:07,850:INFO:Total runtime is 0.03161100149154663 minutes
2022-10-01 18:47:07,850:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:07,850:INFO:Initializing create_model()
2022-10-01 18:47:07,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:07,851:INFO:Checking exceptions
2022-10-01 18:47:07,852:INFO:Importing libraries
2022-10-01 18:47:07,852:INFO:Copying training dataset
2022-10-01 18:47:07,853:INFO:Defining folds
2022-10-01 18:47:07,853:INFO:Declaring metric variables
2022-10-01 18:47:07,853:INFO:Importing untrained model
2022-10-01 18:47:07,854:INFO:Bayesian Ridge Imported successfully
2022-10-01 18:47:07,854:INFO:Starting cross validation
2022-10-01 18:47:07,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:08,024:INFO:Calculating mean and std
2022-10-01 18:47:08,025:INFO:Creating metrics dataframe
2022-10-01 18:47:08,027:INFO:Uploading results into container
2022-10-01 18:47:08,027:INFO:Uploading model into container now
2022-10-01 18:47:08,028:INFO:master_model_container: 8
2022-10-01 18:47:08,028:INFO:display_container: 2
2022-10-01 18:47:08,028:INFO:BayesianRidge()
2022-10-01 18:47:08,028:INFO:create_model() successfully completed......................................
2022-10-01 18:47:08,106:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:08,106:INFO:Creating metrics dataframe
2022-10-01 18:47:08,110:INFO:Initializing Passive Aggressive Regressor
2022-10-01 18:47:08,110:INFO:Total runtime is 0.035940897464752194 minutes
2022-10-01 18:47:08,110:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:08,110:INFO:Initializing create_model()
2022-10-01 18:47:08,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:08,110:INFO:Checking exceptions
2022-10-01 18:47:08,111:INFO:Importing libraries
2022-10-01 18:47:08,111:INFO:Copying training dataset
2022-10-01 18:47:08,113:INFO:Defining folds
2022-10-01 18:47:08,113:INFO:Declaring metric variables
2022-10-01 18:47:08,113:INFO:Importing untrained model
2022-10-01 18:47:08,113:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 18:47:08,114:INFO:Starting cross validation
2022-10-01 18:47:08,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:08,283:INFO:Calculating mean and std
2022-10-01 18:47:08,284:INFO:Creating metrics dataframe
2022-10-01 18:47:08,287:INFO:Uploading results into container
2022-10-01 18:47:08,287:INFO:Uploading model into container now
2022-10-01 18:47:08,287:INFO:master_model_container: 9
2022-10-01 18:47:08,287:INFO:display_container: 2
2022-10-01 18:47:08,288:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 18:47:08,288:INFO:create_model() successfully completed......................................
2022-10-01 18:47:08,367:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:08,368:INFO:Creating metrics dataframe
2022-10-01 18:47:08,371:INFO:Initializing Huber Regressor
2022-10-01 18:47:08,371:INFO:Total runtime is 0.040292322635650635 minutes
2022-10-01 18:47:08,372:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:08,372:INFO:Initializing create_model()
2022-10-01 18:47:08,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:08,372:INFO:Checking exceptions
2022-10-01 18:47:08,373:INFO:Importing libraries
2022-10-01 18:47:08,373:INFO:Copying training dataset
2022-10-01 18:47:08,374:INFO:Defining folds
2022-10-01 18:47:08,374:INFO:Declaring metric variables
2022-10-01 18:47:08,375:INFO:Importing untrained model
2022-10-01 18:47:08,375:INFO:Huber Regressor Imported successfully
2022-10-01 18:47:08,375:INFO:Starting cross validation
2022-10-01 18:47:08,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:08,626:INFO:Calculating mean and std
2022-10-01 18:47:08,627:INFO:Creating metrics dataframe
2022-10-01 18:47:08,629:INFO:Uploading results into container
2022-10-01 18:47:08,630:INFO:Uploading model into container now
2022-10-01 18:47:08,630:INFO:master_model_container: 10
2022-10-01 18:47:08,630:INFO:display_container: 2
2022-10-01 18:47:08,630:INFO:HuberRegressor()
2022-10-01 18:47:08,630:INFO:create_model() successfully completed......................................
2022-10-01 18:47:08,710:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:08,711:INFO:Creating metrics dataframe
2022-10-01 18:47:08,715:INFO:Initializing K Neighbors Regressor
2022-10-01 18:47:08,715:INFO:Total runtime is 0.04602931340535482 minutes
2022-10-01 18:47:08,715:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:08,716:INFO:Initializing create_model()
2022-10-01 18:47:08,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:08,716:INFO:Checking exceptions
2022-10-01 18:47:08,717:INFO:Importing libraries
2022-10-01 18:47:08,717:INFO:Copying training dataset
2022-10-01 18:47:08,719:INFO:Defining folds
2022-10-01 18:47:08,719:INFO:Declaring metric variables
2022-10-01 18:47:08,719:INFO:Importing untrained model
2022-10-01 18:47:08,720:INFO:K Neighbors Regressor Imported successfully
2022-10-01 18:47:08,720:INFO:Starting cross validation
2022-10-01 18:47:08,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:11,542:INFO:Calculating mean and std
2022-10-01 18:47:11,544:INFO:Creating metrics dataframe
2022-10-01 18:47:11,549:INFO:Uploading results into container
2022-10-01 18:47:11,550:INFO:Uploading model into container now
2022-10-01 18:47:11,551:INFO:master_model_container: 11
2022-10-01 18:47:11,551:INFO:display_container: 2
2022-10-01 18:47:11,552:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 18:47:11,552:INFO:create_model() successfully completed......................................
2022-10-01 18:47:11,638:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:11,638:INFO:Creating metrics dataframe
2022-10-01 18:47:11,643:INFO:Initializing Decision Tree Regressor
2022-10-01 18:47:11,643:INFO:Total runtime is 0.09483205477396647 minutes
2022-10-01 18:47:11,643:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:11,643:INFO:Initializing create_model()
2022-10-01 18:47:11,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:11,643:INFO:Checking exceptions
2022-10-01 18:47:11,644:INFO:Importing libraries
2022-10-01 18:47:11,644:INFO:Copying training dataset
2022-10-01 18:47:11,646:INFO:Defining folds
2022-10-01 18:47:11,646:INFO:Declaring metric variables
2022-10-01 18:47:11,646:INFO:Importing untrained model
2022-10-01 18:47:11,647:INFO:Decision Tree Regressor Imported successfully
2022-10-01 18:47:11,647:INFO:Starting cross validation
2022-10-01 18:47:11,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:11,854:INFO:Calculating mean and std
2022-10-01 18:47:11,855:INFO:Creating metrics dataframe
2022-10-01 18:47:11,857:INFO:Uploading results into container
2022-10-01 18:47:11,857:INFO:Uploading model into container now
2022-10-01 18:47:11,858:INFO:master_model_container: 12
2022-10-01 18:47:11,858:INFO:display_container: 2
2022-10-01 18:47:11,858:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 18:47:11,858:INFO:create_model() successfully completed......................................
2022-10-01 18:47:11,953:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:11,953:INFO:Creating metrics dataframe
2022-10-01 18:47:11,957:INFO:Initializing Random Forest Regressor
2022-10-01 18:47:11,957:INFO:Total runtime is 0.10005038579305013 minutes
2022-10-01 18:47:11,957:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:11,957:INFO:Initializing create_model()
2022-10-01 18:47:11,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:11,957:INFO:Checking exceptions
2022-10-01 18:47:11,958:INFO:Importing libraries
2022-10-01 18:47:11,958:INFO:Copying training dataset
2022-10-01 18:47:11,960:INFO:Defining folds
2022-10-01 18:47:11,961:INFO:Declaring metric variables
2022-10-01 18:47:11,961:INFO:Importing untrained model
2022-10-01 18:47:11,962:INFO:Random Forest Regressor Imported successfully
2022-10-01 18:47:11,962:INFO:Starting cross validation
2022-10-01 18:47:11,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:13,428:INFO:Calculating mean and std
2022-10-01 18:47:13,428:INFO:Creating metrics dataframe
2022-10-01 18:47:13,431:INFO:Uploading results into container
2022-10-01 18:47:13,432:INFO:Uploading model into container now
2022-10-01 18:47:13,432:INFO:master_model_container: 13
2022-10-01 18:47:13,432:INFO:display_container: 2
2022-10-01 18:47:13,432:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:47:13,432:INFO:create_model() successfully completed......................................
2022-10-01 18:47:13,523:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:13,525:INFO:Creating metrics dataframe
2022-10-01 18:47:13,529:INFO:Initializing Extra Trees Regressor
2022-10-01 18:47:13,529:INFO:Total runtime is 0.12625398635864257 minutes
2022-10-01 18:47:13,529:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:13,529:INFO:Initializing create_model()
2022-10-01 18:47:13,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:13,529:INFO:Checking exceptions
2022-10-01 18:47:13,530:INFO:Importing libraries
2022-10-01 18:47:13,530:INFO:Copying training dataset
2022-10-01 18:47:13,532:INFO:Defining folds
2022-10-01 18:47:13,532:INFO:Declaring metric variables
2022-10-01 18:47:13,532:INFO:Importing untrained model
2022-10-01 18:47:13,533:INFO:Extra Trees Regressor Imported successfully
2022-10-01 18:47:13,533:INFO:Starting cross validation
2022-10-01 18:47:13,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:14,818:INFO:Calculating mean and std
2022-10-01 18:47:14,819:INFO:Creating metrics dataframe
2022-10-01 18:47:14,822:INFO:Uploading results into container
2022-10-01 18:47:14,822:INFO:Uploading model into container now
2022-10-01 18:47:14,823:INFO:master_model_container: 14
2022-10-01 18:47:14,823:INFO:display_container: 2
2022-10-01 18:47:14,823:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:47:14,823:INFO:create_model() successfully completed......................................
2022-10-01 18:47:14,915:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:14,915:INFO:Creating metrics dataframe
2022-10-01 18:47:14,919:INFO:Initializing AdaBoost Regressor
2022-10-01 18:47:14,920:INFO:Total runtime is 0.14944343169530233 minutes
2022-10-01 18:47:14,920:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:14,920:INFO:Initializing create_model()
2022-10-01 18:47:14,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:14,920:INFO:Checking exceptions
2022-10-01 18:47:14,921:INFO:Importing libraries
2022-10-01 18:47:14,921:INFO:Copying training dataset
2022-10-01 18:47:14,923:INFO:Defining folds
2022-10-01 18:47:14,924:INFO:Declaring metric variables
2022-10-01 18:47:14,924:INFO:Importing untrained model
2022-10-01 18:47:14,924:INFO:AdaBoost Regressor Imported successfully
2022-10-01 18:47:14,925:INFO:Starting cross validation
2022-10-01 18:47:14,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:15,705:INFO:Calculating mean and std
2022-10-01 18:47:15,706:INFO:Creating metrics dataframe
2022-10-01 18:47:15,710:INFO:Uploading results into container
2022-10-01 18:47:15,711:INFO:Uploading model into container now
2022-10-01 18:47:15,711:INFO:master_model_container: 15
2022-10-01 18:47:15,712:INFO:display_container: 2
2022-10-01 18:47:15,712:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 18:47:15,712:INFO:create_model() successfully completed......................................
2022-10-01 18:47:15,808:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:15,808:INFO:Creating metrics dataframe
2022-10-01 18:47:15,814:INFO:Initializing Gradient Boosting Regressor
2022-10-01 18:47:15,815:INFO:Total runtime is 0.16435515880584717 minutes
2022-10-01 18:47:15,815:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:15,815:INFO:Initializing create_model()
2022-10-01 18:47:15,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:15,815:INFO:Checking exceptions
2022-10-01 18:47:15,817:INFO:Importing libraries
2022-10-01 18:47:15,817:INFO:Copying training dataset
2022-10-01 18:47:15,820:INFO:Defining folds
2022-10-01 18:47:15,820:INFO:Declaring metric variables
2022-10-01 18:47:15,820:INFO:Importing untrained model
2022-10-01 18:47:15,821:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 18:47:15,821:INFO:Starting cross validation
2022-10-01 18:47:15,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:16,462:INFO:Calculating mean and std
2022-10-01 18:47:16,463:INFO:Creating metrics dataframe
2022-10-01 18:47:16,465:INFO:Uploading results into container
2022-10-01 18:47:16,466:INFO:Uploading model into container now
2022-10-01 18:47:16,466:INFO:master_model_container: 16
2022-10-01 18:47:16,466:INFO:display_container: 2
2022-10-01 18:47:16,466:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 18:47:16,467:INFO:create_model() successfully completed......................................
2022-10-01 18:47:16,545:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:16,545:INFO:Creating metrics dataframe
2022-10-01 18:47:16,549:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 18:47:16,549:INFO:Total runtime is 0.17659497261047363 minutes
2022-10-01 18:47:16,549:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:16,549:INFO:Initializing create_model()
2022-10-01 18:47:16,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:16,549:INFO:Checking exceptions
2022-10-01 18:47:16,550:INFO:Importing libraries
2022-10-01 18:47:16,550:INFO:Copying training dataset
2022-10-01 18:47:16,552:INFO:Defining folds
2022-10-01 18:47:16,552:INFO:Declaring metric variables
2022-10-01 18:47:16,552:INFO:Importing untrained model
2022-10-01 18:47:16,552:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 18:47:16,553:INFO:Starting cross validation
2022-10-01 18:47:16,553:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:21,125:INFO:Calculating mean and std
2022-10-01 18:47:21,126:INFO:Creating metrics dataframe
2022-10-01 18:47:21,129:INFO:Uploading results into container
2022-10-01 18:47:21,129:INFO:Uploading model into container now
2022-10-01 18:47:21,130:INFO:master_model_container: 17
2022-10-01 18:47:21,130:INFO:display_container: 2
2022-10-01 18:47:21,130:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 18:47:21,130:INFO:create_model() successfully completed......................................
2022-10-01 18:47:21,226:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:21,226:INFO:Creating metrics dataframe
2022-10-01 18:47:21,230:INFO:Initializing Dummy Regressor
2022-10-01 18:47:21,230:INFO:Total runtime is 0.25460429588953654 minutes
2022-10-01 18:47:21,231:INFO:SubProcess create_model() called ==================================
2022-10-01 18:47:21,231:INFO:Initializing create_model()
2022-10-01 18:47:21,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5694CF1C0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:21,231:INFO:Checking exceptions
2022-10-01 18:47:21,232:INFO:Importing libraries
2022-10-01 18:47:21,232:INFO:Copying training dataset
2022-10-01 18:47:21,234:INFO:Defining folds
2022-10-01 18:47:21,234:INFO:Declaring metric variables
2022-10-01 18:47:21,234:INFO:Importing untrained model
2022-10-01 18:47:21,234:INFO:Dummy Regressor Imported successfully
2022-10-01 18:47:21,234:INFO:Starting cross validation
2022-10-01 18:47:21,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:21,395:INFO:Calculating mean and std
2022-10-01 18:47:21,396:INFO:Creating metrics dataframe
2022-10-01 18:47:21,398:INFO:Uploading results into container
2022-10-01 18:47:21,398:INFO:Uploading model into container now
2022-10-01 18:47:21,399:INFO:master_model_container: 18
2022-10-01 18:47:21,399:INFO:display_container: 2
2022-10-01 18:47:21,399:INFO:DummyRegressor()
2022-10-01 18:47:21,399:INFO:create_model() successfully completed......................................
2022-10-01 18:47:21,478:INFO:SubProcess create_model() end ==================================
2022-10-01 18:47:21,478:INFO:Creating metrics dataframe
2022-10-01 18:47:21,483:INFO:Initializing create_model()
2022-10-01 18:47:21,483:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:21,483:INFO:Checking exceptions
2022-10-01 18:47:21,485:INFO:Importing libraries
2022-10-01 18:47:21,485:INFO:Copying training dataset
2022-10-01 18:47:21,486:INFO:Defining folds
2022-10-01 18:47:21,486:INFO:Declaring metric variables
2022-10-01 18:47:21,487:INFO:Importing untrained model
2022-10-01 18:47:21,487:INFO:Declaring custom model
2022-10-01 18:47:21,487:INFO:Lasso Regression Imported successfully
2022-10-01 18:47:21,488:INFO:Cross validation set to False
2022-10-01 18:47:21,488:INFO:Fitting Model
2022-10-01 18:47:21,496:INFO:Lasso(random_state=123)
2022-10-01 18:47:21,496:INFO:create_model() successfully completed......................................
2022-10-01 18:47:21,591:INFO:master_model_container: 18
2022-10-01 18:47:21,591:INFO:display_container: 2
2022-10-01 18:47:21,591:INFO:Lasso(random_state=123)
2022-10-01 18:47:21,591:INFO:compare_models() successfully completed......................................
2022-10-01 18:47:21,591:INFO:Initializing create_model()
2022-10-01 18:47:21,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:47:21,592:INFO:Checking exceptions
2022-10-01 18:47:21,594:INFO:Importing libraries
2022-10-01 18:47:21,595:INFO:Copying training dataset
2022-10-01 18:47:21,597:INFO:Defining folds
2022-10-01 18:47:21,597:INFO:Declaring metric variables
2022-10-01 18:47:21,598:INFO:Importing untrained model
2022-10-01 18:47:21,598:INFO:Declaring custom model
2022-10-01 18:47:21,598:INFO:Lasso Regression Imported successfully
2022-10-01 18:47:21,598:INFO:Starting cross validation
2022-10-01 18:47:21,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:47:21,758:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:21,795:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:21,813:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:47:21,820:INFO:Calculating mean and std
2022-10-01 18:47:21,821:INFO:Creating metrics dataframe
2022-10-01 18:47:21,823:INFO:Finalizing model
2022-10-01 18:47:21,833:INFO:Uploading results into container
2022-10-01 18:47:21,833:INFO:Uploading model into container now
2022-10-01 18:47:21,842:INFO:master_model_container: 19
2022-10-01 18:47:21,842:INFO:display_container: 3
2022-10-01 18:47:21,842:INFO:Lasso(random_state=123)
2022-10-01 18:47:21,842:INFO:create_model() successfully completed......................................
2022-10-01 18:47:21,978:INFO:Initializing predict_model()
2022-10-01 18:47:21,978:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F562D82B00>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F563161630>)
2022-10-01 18:47:21,978:INFO:Checking exceptions
2022-10-01 18:47:21,978:INFO:Preloading libraries
2022-10-01 18:47:21,978:INFO:Set up data.
2022-10-01 18:47:21,981:INFO:Set up index.
2022-10-01 18:47:22,129:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:54: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 18:49:00,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:00,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:00,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:00,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:00,786:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 18:49:01,624:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 18:49:03,166:INFO:PyCaret RegressionExperiment
2022-10-01 18:49:03,166:INFO:Logging name: reg-default-name
2022-10-01 18:49:03,166:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 18:49:03,166:INFO:version 3.0.0.rc4
2022-10-01 18:49:03,166:INFO:Initializing setup()
2022-10-01 18:49:03,166:INFO:self.USI: a65c
2022-10-01 18:49:03,166:INFO:self.variable_keys: {'fold_shuffle_param', 'n_jobs_param', 'pipeline', 'seed', '_gpu_n_jobs_param', 'exp_id', 'X_train', '_available_plots', '_ml_usecase', 'exp_name_log', 'transform_target_param', 'fold_groups_param', 'target_param', 'html_param', 'variable_keys', 'USI', 'data', 'logging_param', 'y_test', 'fold_generator', 'log_plots_param', '_all_models_internal', 'memory', 'display_container', 'y_train', 'idx', 'X_test', 'X', '_all_metrics', 'gpu_param', '_all_models', 'master_model_container', 'y', 'transform_target_method_param'}
2022-10-01 18:49:03,166:INFO:Checking environment
2022-10-01 18:49:03,166:INFO:python_version: 3.10.7
2022-10-01 18:49:03,166:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 18:49:03,166:INFO:machine: AMD64
2022-10-01 18:49:03,178:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 18:49:03,178:INFO:Memory: svmem(total=8497213440, available=1354809344, percent=84.1, used=7142404096, free=1354809344)
2022-10-01 18:49:03,178:INFO:Physical Core: 6
2022-10-01 18:49:03,178:INFO:Logical Core: 12
2022-10-01 18:49:03,178:INFO:Checking libraries
2022-10-01 18:49:03,179:INFO:System:
2022-10-01 18:49:03,179:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 18:49:03,179:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 18:49:03,179:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 18:49:03,179:INFO:PyCaret required dependencies:
2022-10-01 18:49:03,179:INFO:                 pip: 22.2.2
2022-10-01 18:49:03,179:INFO:          setuptools: 63.2.0
2022-10-01 18:49:03,179:INFO:             pycaret: 3.0.0rc4
2022-10-01 18:49:03,179:INFO:             IPython: 8.5.0
2022-10-01 18:49:03,179:INFO:          ipywidgets: 8.0.2
2022-10-01 18:49:03,179:INFO:                tqdm: 4.64.1
2022-10-01 18:49:03,179:INFO:               numpy: 1.22.4
2022-10-01 18:49:03,179:INFO:              pandas: 1.4.4
2022-10-01 18:49:03,179:INFO:              jinja2: 3.1.2
2022-10-01 18:49:03,179:INFO:               scipy: 1.8.1
2022-10-01 18:49:03,179:INFO:              joblib: 1.2.0
2022-10-01 18:49:03,179:INFO:             sklearn: 1.1.2
2022-10-01 18:49:03,179:INFO:                pyod: 1.0.5
2022-10-01 18:49:03,179:INFO:            imblearn: 0.9.1
2022-10-01 18:49:03,179:INFO:   category_encoders: 2.5.0
2022-10-01 18:49:03,179:INFO:            lightgbm: 3.3.2
2022-10-01 18:49:03,179:INFO:               numba: 0.55.2
2022-10-01 18:49:03,179:INFO:            requests: 2.28.1
2022-10-01 18:49:03,180:INFO:          matplotlib: 3.6.0
2022-10-01 18:49:03,180:INFO:          scikitplot: 0.3.7
2022-10-01 18:49:03,180:INFO:         yellowbrick: 1.5
2022-10-01 18:49:03,180:INFO:              plotly: 5.10.0
2022-10-01 18:49:03,180:INFO:             kaleido: 0.2.1
2022-10-01 18:49:03,180:INFO:         statsmodels: 0.13.2
2022-10-01 18:49:03,180:INFO:              sktime: 0.13.4
2022-10-01 18:49:03,180:INFO:               tbats: 1.1.0
2022-10-01 18:49:03,180:INFO:            pmdarima: 1.8.5
2022-10-01 18:49:03,180:INFO:              psutil: 5.9.2
2022-10-01 18:49:03,180:INFO:PyCaret optional dependencies:
2022-10-01 18:49:03,193:INFO:                shap: Not installed
2022-10-01 18:49:03,194:INFO:           interpret: Not installed
2022-10-01 18:49:03,194:INFO:                umap: Not installed
2022-10-01 18:49:03,194:INFO:    pandas_profiling: Not installed
2022-10-01 18:49:03,194:INFO:  explainerdashboard: Not installed
2022-10-01 18:49:03,194:INFO:             autoviz: Not installed
2022-10-01 18:49:03,194:INFO:           fairlearn: Not installed
2022-10-01 18:49:03,194:INFO:             xgboost: Not installed
2022-10-01 18:49:03,194:INFO:            catboost: Not installed
2022-10-01 18:49:03,194:INFO:              kmodes: Not installed
2022-10-01 18:49:03,194:INFO:             mlxtend: Not installed
2022-10-01 18:49:03,194:INFO:       statsforecast: Not installed
2022-10-01 18:49:03,194:INFO:        tune_sklearn: Not installed
2022-10-01 18:49:03,194:INFO:                 ray: Not installed
2022-10-01 18:49:03,194:INFO:            hyperopt: Not installed
2022-10-01 18:49:03,194:INFO:              optuna: Not installed
2022-10-01 18:49:03,194:INFO:               skopt: Not installed
2022-10-01 18:49:03,194:INFO:              mlflow: Not installed
2022-10-01 18:49:03,194:INFO:              gradio: Not installed
2022-10-01 18:49:03,194:INFO:             fastapi: Not installed
2022-10-01 18:49:03,194:INFO:             uvicorn: Not installed
2022-10-01 18:49:03,194:INFO:              m2cgen: Not installed
2022-10-01 18:49:03,194:INFO:           evidently: Not installed
2022-10-01 18:49:03,194:INFO:                nltk: Not installed
2022-10-01 18:49:03,195:INFO:            pyLDAvis: Not installed
2022-10-01 18:49:03,195:INFO:              gensim: Not installed
2022-10-01 18:49:03,195:INFO:               spacy: Not installed
2022-10-01 18:49:03,195:INFO:           wordcloud: Not installed
2022-10-01 18:49:03,195:INFO:            textblob: Not installed
2022-10-01 18:49:03,195:INFO:               fugue: Not installed
2022-10-01 18:49:03,195:INFO:           streamlit: Not installed
2022-10-01 18:49:03,195:INFO:             prophet: Not installed
2022-10-01 18:49:03,195:INFO:None
2022-10-01 18:49:03,195:INFO:Set up GPU usage.
2022-10-01 18:49:03,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,195:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 18:49:03,195:INFO:Set up data.
2022-10-01 18:49:03,199:INFO:Set up train/test split.
2022-10-01 18:49:03,201:INFO:Set up index.
2022-10-01 18:49:03,201:INFO:Set up folding strategy.
2022-10-01 18:49:03,201:INFO:Assigning column types.
2022-10-01 18:49:03,203:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 18:49:03,203:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,203:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,208:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,213:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:03,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:03,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,724:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,731:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,738:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,823:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,868:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:03,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:03,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:04,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:04,119:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 18:49:04,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,127:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,134:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,218:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:04,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:04,502:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,502:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,509:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,516:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:04,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:04,881:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 18:49:04,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,895:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:04,979:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:04,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:05,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:05,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:05,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,279:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 18:49:05,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:05,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:05,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:05,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:05,645:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 18:49:05,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,745:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:05,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:05,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:05,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:06,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:06,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:06,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,172:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 18:49:06,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:06,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:06,409:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 18:49:06,409:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,409:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,507:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:06,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:06,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:06,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,889:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 18:49:06,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:06,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:07,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:07,161:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 18:49:07,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:07,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:07,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:07,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:07,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:07,941:INFO:Preparing preprocessing pipeline...
2022-10-01 18:49:07,942:INFO:Set up simple imputation.
2022-10-01 18:49:07,942:INFO:Set up variance threshold.
2022-10-01 18:49:07,958:INFO:Finished creating preprocessing pipeline.
2022-10-01 18:49:07,965:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 18:49:07,965:INFO:Creating final display dataframe.
2022-10-01 18:49:08,048:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              a65c
2022-10-01 18:49:08,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:08,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:08,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 18:49:08,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:08,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 18:49:08,789:INFO:setup() successfully completed in 5.62s...............
2022-10-01 18:49:08,789:INFO:Initializing compare_models()
2022-10-01 18:49:08,789:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 18:49:08,789:INFO:Checking exceptions
2022-10-01 18:49:08,791:INFO:Preparing display monitor
2022-10-01 18:49:08,794:INFO:Initializing Linear Regression
2022-10-01 18:49:08,794:INFO:Total runtime is 0.0 minutes
2022-10-01 18:49:08,795:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:08,795:INFO:Initializing create_model()
2022-10-01 18:49:08,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:08,795:INFO:Checking exceptions
2022-10-01 18:49:08,796:INFO:Importing libraries
2022-10-01 18:49:08,796:INFO:Copying training dataset
2022-10-01 18:49:08,798:INFO:Defining folds
2022-10-01 18:49:08,799:INFO:Declaring metric variables
2022-10-01 18:49:08,799:INFO:Importing untrained model
2022-10-01 18:49:08,799:INFO:Linear Regression Imported successfully
2022-10-01 18:49:08,799:INFO:Starting cross validation
2022-10-01 18:49:08,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:09,018:INFO:Calculating mean and std
2022-10-01 18:49:09,019:INFO:Creating metrics dataframe
2022-10-01 18:49:09,022:INFO:Uploading results into container
2022-10-01 18:49:09,022:INFO:Uploading model into container now
2022-10-01 18:49:09,022:INFO:master_model_container: 1
2022-10-01 18:49:09,022:INFO:display_container: 2
2022-10-01 18:49:09,022:INFO:LinearRegression(n_jobs=-1)
2022-10-01 18:49:09,023:INFO:create_model() successfully completed......................................
2022-10-01 18:49:09,112:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:09,112:INFO:Creating metrics dataframe
2022-10-01 18:49:09,115:INFO:Initializing Lasso Regression
2022-10-01 18:49:09,115:INFO:Total runtime is 0.005346111456553141 minutes
2022-10-01 18:49:09,116:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:09,116:INFO:Initializing create_model()
2022-10-01 18:49:09,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:09,116:INFO:Checking exceptions
2022-10-01 18:49:09,117:INFO:Importing libraries
2022-10-01 18:49:09,117:INFO:Copying training dataset
2022-10-01 18:49:09,119:INFO:Defining folds
2022-10-01 18:49:09,119:INFO:Declaring metric variables
2022-10-01 18:49:09,119:INFO:Importing untrained model
2022-10-01 18:49:09,119:INFO:Lasso Regression Imported successfully
2022-10-01 18:49:09,120:INFO:Starting cross validation
2022-10-01 18:49:09,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:09,247:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:09,285:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:09,304:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:09,312:INFO:Calculating mean and std
2022-10-01 18:49:09,313:INFO:Creating metrics dataframe
2022-10-01 18:49:09,315:INFO:Uploading results into container
2022-10-01 18:49:09,316:INFO:Uploading model into container now
2022-10-01 18:49:09,316:INFO:master_model_container: 2
2022-10-01 18:49:09,316:INFO:display_container: 2
2022-10-01 18:49:09,316:INFO:Lasso(random_state=123)
2022-10-01 18:49:09,316:INFO:create_model() successfully completed......................................
2022-10-01 18:49:09,399:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:09,399:INFO:Creating metrics dataframe
2022-10-01 18:49:09,403:INFO:Initializing Ridge Regression
2022-10-01 18:49:09,403:INFO:Total runtime is 0.010150472323099773 minutes
2022-10-01 18:49:09,403:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:09,404:INFO:Initializing create_model()
2022-10-01 18:49:09,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:09,404:INFO:Checking exceptions
2022-10-01 18:49:09,405:INFO:Importing libraries
2022-10-01 18:49:09,405:INFO:Copying training dataset
2022-10-01 18:49:09,406:INFO:Defining folds
2022-10-01 18:49:09,406:INFO:Declaring metric variables
2022-10-01 18:49:09,406:INFO:Importing untrained model
2022-10-01 18:49:09,407:INFO:Ridge Regression Imported successfully
2022-10-01 18:49:09,407:INFO:Starting cross validation
2022-10-01 18:49:09,407:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:09,419:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,440:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,459:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,477:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,495:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,513:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,531:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,549:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,567:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,585:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 18:49:09,593:INFO:Calculating mean and std
2022-10-01 18:49:09,594:INFO:Creating metrics dataframe
2022-10-01 18:49:09,596:INFO:Uploading results into container
2022-10-01 18:49:09,596:INFO:Uploading model into container now
2022-10-01 18:49:09,597:INFO:master_model_container: 3
2022-10-01 18:49:09,597:INFO:display_container: 2
2022-10-01 18:49:09,597:INFO:Ridge(random_state=123)
2022-10-01 18:49:09,597:INFO:create_model() successfully completed......................................
2022-10-01 18:49:09,686:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:09,687:INFO:Creating metrics dataframe
2022-10-01 18:49:09,692:INFO:Initializing Elastic Net
2022-10-01 18:49:09,692:INFO:Total runtime is 0.014964564641316732 minutes
2022-10-01 18:49:09,692:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:09,693:INFO:Initializing create_model()
2022-10-01 18:49:09,693:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:09,693:INFO:Checking exceptions
2022-10-01 18:49:09,694:INFO:Importing libraries
2022-10-01 18:49:09,694:INFO:Copying training dataset
2022-10-01 18:49:09,697:INFO:Defining folds
2022-10-01 18:49:09,697:INFO:Declaring metric variables
2022-10-01 18:49:09,697:INFO:Importing untrained model
2022-10-01 18:49:09,698:INFO:Elastic Net Imported successfully
2022-10-01 18:49:09,698:INFO:Starting cross validation
2022-10-01 18:49:09,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:09,824:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:09,882:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:09,890:INFO:Calculating mean and std
2022-10-01 18:49:09,890:INFO:Creating metrics dataframe
2022-10-01 18:49:09,893:INFO:Uploading results into container
2022-10-01 18:49:09,893:INFO:Uploading model into container now
2022-10-01 18:49:09,893:INFO:master_model_container: 4
2022-10-01 18:49:09,894:INFO:display_container: 2
2022-10-01 18:49:09,894:INFO:ElasticNet(random_state=123)
2022-10-01 18:49:09,894:INFO:create_model() successfully completed......................................
2022-10-01 18:49:09,979:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:09,979:INFO:Creating metrics dataframe
2022-10-01 18:49:09,983:INFO:Initializing Least Angle Regression
2022-10-01 18:49:09,983:INFO:Total runtime is 0.019823733965555826 minutes
2022-10-01 18:49:09,983:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:09,983:INFO:Initializing create_model()
2022-10-01 18:49:09,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:09,984:INFO:Checking exceptions
2022-10-01 18:49:09,985:INFO:Importing libraries
2022-10-01 18:49:09,985:INFO:Copying training dataset
2022-10-01 18:49:09,986:INFO:Defining folds
2022-10-01 18:49:09,986:INFO:Declaring metric variables
2022-10-01 18:49:09,986:INFO:Importing untrained model
2022-10-01 18:49:09,987:INFO:Least Angle Regression Imported successfully
2022-10-01 18:49:09,987:INFO:Starting cross validation
2022-10-01 18:49:09,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:09,998:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,017:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,035:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,053:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,072:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,090:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,109:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,132:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,150:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,168:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,177:INFO:Calculating mean and std
2022-10-01 18:49:10,177:INFO:Creating metrics dataframe
2022-10-01 18:49:10,180:INFO:Uploading results into container
2022-10-01 18:49:10,180:INFO:Uploading model into container now
2022-10-01 18:49:10,181:INFO:master_model_container: 5
2022-10-01 18:49:10,181:INFO:display_container: 2
2022-10-01 18:49:10,181:INFO:Lars(random_state=123)
2022-10-01 18:49:10,181:INFO:create_model() successfully completed......................................
2022-10-01 18:49:10,266:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:10,266:INFO:Creating metrics dataframe
2022-10-01 18:49:10,270:INFO:Initializing Lasso Least Angle Regression
2022-10-01 18:49:10,270:INFO:Total runtime is 0.024602882067362466 minutes
2022-10-01 18:49:10,270:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:10,271:INFO:Initializing create_model()
2022-10-01 18:49:10,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:10,271:INFO:Checking exceptions
2022-10-01 18:49:10,272:INFO:Importing libraries
2022-10-01 18:49:10,272:INFO:Copying training dataset
2022-10-01 18:49:10,273:INFO:Defining folds
2022-10-01 18:49:10,273:INFO:Declaring metric variables
2022-10-01 18:49:10,274:INFO:Importing untrained model
2022-10-01 18:49:10,274:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 18:49:10,274:INFO:Starting cross validation
2022-10-01 18:49:10,275:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:10,285:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,321:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,339:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,357:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,376:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,394:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,412:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,430:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,447:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 18:49:10,456:INFO:Calculating mean and std
2022-10-01 18:49:10,457:INFO:Creating metrics dataframe
2022-10-01 18:49:10,459:INFO:Uploading results into container
2022-10-01 18:49:10,459:INFO:Uploading model into container now
2022-10-01 18:49:10,460:INFO:master_model_container: 6
2022-10-01 18:49:10,460:INFO:display_container: 2
2022-10-01 18:49:10,460:INFO:LassoLars(random_state=123)
2022-10-01 18:49:10,460:INFO:create_model() successfully completed......................................
2022-10-01 18:49:10,545:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:10,546:INFO:Creating metrics dataframe
2022-10-01 18:49:10,550:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 18:49:10,550:INFO:Total runtime is 0.029275508721669515 minutes
2022-10-01 18:49:10,550:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:10,550:INFO:Initializing create_model()
2022-10-01 18:49:10,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:10,550:INFO:Checking exceptions
2022-10-01 18:49:10,551:INFO:Importing libraries
2022-10-01 18:49:10,551:INFO:Copying training dataset
2022-10-01 18:49:10,553:INFO:Defining folds
2022-10-01 18:49:10,553:INFO:Declaring metric variables
2022-10-01 18:49:10,553:INFO:Importing untrained model
2022-10-01 18:49:10,553:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 18:49:10,554:INFO:Starting cross validation
2022-10-01 18:49:10,554:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:10,564:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,582:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,599:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,621:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,641:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,666:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,683:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,708:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,726:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,744:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 18:49:10,753:INFO:Calculating mean and std
2022-10-01 18:49:10,754:INFO:Creating metrics dataframe
2022-10-01 18:49:10,757:INFO:Uploading results into container
2022-10-01 18:49:10,757:INFO:Uploading model into container now
2022-10-01 18:49:10,757:INFO:master_model_container: 7
2022-10-01 18:49:10,757:INFO:display_container: 2
2022-10-01 18:49:10,758:INFO:OrthogonalMatchingPursuit()
2022-10-01 18:49:10,758:INFO:create_model() successfully completed......................................
2022-10-01 18:49:10,850:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:10,850:INFO:Creating metrics dataframe
2022-10-01 18:49:10,854:INFO:Initializing Bayesian Ridge
2022-10-01 18:49:10,854:INFO:Total runtime is 0.03433759212493896 minutes
2022-10-01 18:49:10,855:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:10,855:INFO:Initializing create_model()
2022-10-01 18:49:10,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:10,855:INFO:Checking exceptions
2022-10-01 18:49:10,856:INFO:Importing libraries
2022-10-01 18:49:10,856:INFO:Copying training dataset
2022-10-01 18:49:10,858:INFO:Defining folds
2022-10-01 18:49:10,858:INFO:Declaring metric variables
2022-10-01 18:49:10,858:INFO:Importing untrained model
2022-10-01 18:49:10,858:INFO:Bayesian Ridge Imported successfully
2022-10-01 18:49:10,859:INFO:Starting cross validation
2022-10-01 18:49:10,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:11,052:INFO:Calculating mean and std
2022-10-01 18:49:11,054:INFO:Creating metrics dataframe
2022-10-01 18:49:11,056:INFO:Uploading results into container
2022-10-01 18:49:11,057:INFO:Uploading model into container now
2022-10-01 18:49:11,057:INFO:master_model_container: 8
2022-10-01 18:49:11,057:INFO:display_container: 2
2022-10-01 18:49:11,057:INFO:BayesianRidge()
2022-10-01 18:49:11,057:INFO:create_model() successfully completed......................................
2022-10-01 18:49:11,144:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:11,144:INFO:Creating metrics dataframe
2022-10-01 18:49:11,148:INFO:Initializing Passive Aggressive Regressor
2022-10-01 18:49:11,148:INFO:Total runtime is 0.03923315207163493 minutes
2022-10-01 18:49:11,148:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:11,148:INFO:Initializing create_model()
2022-10-01 18:49:11,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:11,149:INFO:Checking exceptions
2022-10-01 18:49:11,150:INFO:Importing libraries
2022-10-01 18:49:11,150:INFO:Copying training dataset
2022-10-01 18:49:11,151:INFO:Defining folds
2022-10-01 18:49:11,151:INFO:Declaring metric variables
2022-10-01 18:49:11,151:INFO:Importing untrained model
2022-10-01 18:49:11,152:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 18:49:11,152:INFO:Starting cross validation
2022-10-01 18:49:11,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:11,333:INFO:Calculating mean and std
2022-10-01 18:49:11,334:INFO:Creating metrics dataframe
2022-10-01 18:49:11,336:INFO:Uploading results into container
2022-10-01 18:49:11,337:INFO:Uploading model into container now
2022-10-01 18:49:11,337:INFO:master_model_container: 9
2022-10-01 18:49:11,337:INFO:display_container: 2
2022-10-01 18:49:11,338:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 18:49:11,338:INFO:create_model() successfully completed......................................
2022-10-01 18:49:11,428:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:11,428:INFO:Creating metrics dataframe
2022-10-01 18:49:11,432:INFO:Initializing Huber Regressor
2022-10-01 18:49:11,432:INFO:Total runtime is 0.04396271308263143 minutes
2022-10-01 18:49:11,432:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:11,433:INFO:Initializing create_model()
2022-10-01 18:49:11,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:11,433:INFO:Checking exceptions
2022-10-01 18:49:11,434:INFO:Importing libraries
2022-10-01 18:49:11,434:INFO:Copying training dataset
2022-10-01 18:49:11,436:INFO:Defining folds
2022-10-01 18:49:11,436:INFO:Declaring metric variables
2022-10-01 18:49:11,436:INFO:Importing untrained model
2022-10-01 18:49:11,437:INFO:Huber Regressor Imported successfully
2022-10-01 18:49:11,437:INFO:Starting cross validation
2022-10-01 18:49:11,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:11,706:INFO:Calculating mean and std
2022-10-01 18:49:11,707:INFO:Creating metrics dataframe
2022-10-01 18:49:11,709:INFO:Uploading results into container
2022-10-01 18:49:11,709:INFO:Uploading model into container now
2022-10-01 18:49:11,709:INFO:master_model_container: 10
2022-10-01 18:49:11,709:INFO:display_container: 2
2022-10-01 18:49:11,710:INFO:HuberRegressor()
2022-10-01 18:49:11,710:INFO:create_model() successfully completed......................................
2022-10-01 18:49:11,800:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:11,800:INFO:Creating metrics dataframe
2022-10-01 18:49:11,804:INFO:Initializing K Neighbors Regressor
2022-10-01 18:49:11,804:INFO:Total runtime is 0.050176727771759036 minutes
2022-10-01 18:49:11,804:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:11,805:INFO:Initializing create_model()
2022-10-01 18:49:11,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:11,805:INFO:Checking exceptions
2022-10-01 18:49:11,806:INFO:Importing libraries
2022-10-01 18:49:11,806:INFO:Copying training dataset
2022-10-01 18:49:11,808:INFO:Defining folds
2022-10-01 18:49:11,808:INFO:Declaring metric variables
2022-10-01 18:49:11,808:INFO:Importing untrained model
2022-10-01 18:49:11,808:INFO:K Neighbors Regressor Imported successfully
2022-10-01 18:49:11,808:INFO:Starting cross validation
2022-10-01 18:49:11,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:14,753:INFO:Calculating mean and std
2022-10-01 18:49:14,754:INFO:Creating metrics dataframe
2022-10-01 18:49:14,756:INFO:Uploading results into container
2022-10-01 18:49:14,757:INFO:Uploading model into container now
2022-10-01 18:49:14,757:INFO:master_model_container: 11
2022-10-01 18:49:14,757:INFO:display_container: 2
2022-10-01 18:49:14,757:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 18:49:14,758:INFO:create_model() successfully completed......................................
2022-10-01 18:49:14,858:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:14,859:INFO:Creating metrics dataframe
2022-10-01 18:49:14,863:INFO:Initializing Decision Tree Regressor
2022-10-01 18:49:14,863:INFO:Total runtime is 0.10115530093510947 minutes
2022-10-01 18:49:14,863:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:14,863:INFO:Initializing create_model()
2022-10-01 18:49:14,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:14,863:INFO:Checking exceptions
2022-10-01 18:49:14,865:INFO:Importing libraries
2022-10-01 18:49:14,865:INFO:Copying training dataset
2022-10-01 18:49:14,868:INFO:Defining folds
2022-10-01 18:49:14,868:INFO:Declaring metric variables
2022-10-01 18:49:14,868:INFO:Importing untrained model
2022-10-01 18:49:14,868:INFO:Decision Tree Regressor Imported successfully
2022-10-01 18:49:14,868:INFO:Starting cross validation
2022-10-01 18:49:14,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:15,062:INFO:Calculating mean and std
2022-10-01 18:49:15,062:INFO:Creating metrics dataframe
2022-10-01 18:49:15,065:INFO:Uploading results into container
2022-10-01 18:49:15,066:INFO:Uploading model into container now
2022-10-01 18:49:15,066:INFO:master_model_container: 12
2022-10-01 18:49:15,066:INFO:display_container: 2
2022-10-01 18:49:15,066:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 18:49:15,066:INFO:create_model() successfully completed......................................
2022-10-01 18:49:15,166:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:15,166:INFO:Creating metrics dataframe
2022-10-01 18:49:15,170:INFO:Initializing Random Forest Regressor
2022-10-01 18:49:15,170:INFO:Total runtime is 0.10626836220423382 minutes
2022-10-01 18:49:15,170:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:15,170:INFO:Initializing create_model()
2022-10-01 18:49:15,171:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:15,171:INFO:Checking exceptions
2022-10-01 18:49:15,172:INFO:Importing libraries
2022-10-01 18:49:15,172:INFO:Copying training dataset
2022-10-01 18:49:15,174:INFO:Defining folds
2022-10-01 18:49:15,174:INFO:Declaring metric variables
2022-10-01 18:49:15,174:INFO:Importing untrained model
2022-10-01 18:49:15,174:INFO:Random Forest Regressor Imported successfully
2022-10-01 18:49:15,174:INFO:Starting cross validation
2022-10-01 18:49:15,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:16,497:INFO:Calculating mean and std
2022-10-01 18:49:16,498:INFO:Creating metrics dataframe
2022-10-01 18:49:16,500:INFO:Uploading results into container
2022-10-01 18:49:16,501:INFO:Uploading model into container now
2022-10-01 18:49:16,501:INFO:master_model_container: 13
2022-10-01 18:49:16,501:INFO:display_container: 2
2022-10-01 18:49:16,502:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:49:16,502:INFO:create_model() successfully completed......................................
2022-10-01 18:49:16,601:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:16,601:INFO:Creating metrics dataframe
2022-10-01 18:49:16,605:INFO:Initializing Extra Trees Regressor
2022-10-01 18:49:16,605:INFO:Total runtime is 0.13019292354583742 minutes
2022-10-01 18:49:16,605:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:16,606:INFO:Initializing create_model()
2022-10-01 18:49:16,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:16,606:INFO:Checking exceptions
2022-10-01 18:49:16,607:INFO:Importing libraries
2022-10-01 18:49:16,607:INFO:Copying training dataset
2022-10-01 18:49:16,609:INFO:Defining folds
2022-10-01 18:49:16,609:INFO:Declaring metric variables
2022-10-01 18:49:16,609:INFO:Importing untrained model
2022-10-01 18:49:16,609:INFO:Extra Trees Regressor Imported successfully
2022-10-01 18:49:16,609:INFO:Starting cross validation
2022-10-01 18:49:16,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:18,033:INFO:Calculating mean and std
2022-10-01 18:49:18,034:INFO:Creating metrics dataframe
2022-10-01 18:49:18,039:INFO:Uploading results into container
2022-10-01 18:49:18,040:INFO:Uploading model into container now
2022-10-01 18:49:18,041:INFO:master_model_container: 14
2022-10-01 18:49:18,041:INFO:display_container: 2
2022-10-01 18:49:18,041:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 18:49:18,041:INFO:create_model() successfully completed......................................
2022-10-01 18:49:18,143:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:18,143:INFO:Creating metrics dataframe
2022-10-01 18:49:18,147:INFO:Initializing AdaBoost Regressor
2022-10-01 18:49:18,147:INFO:Total runtime is 0.15587858359018963 minutes
2022-10-01 18:49:18,147:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:18,148:INFO:Initializing create_model()
2022-10-01 18:49:18,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:18,148:INFO:Checking exceptions
2022-10-01 18:49:18,149:INFO:Importing libraries
2022-10-01 18:49:18,149:INFO:Copying training dataset
2022-10-01 18:49:18,151:INFO:Defining folds
2022-10-01 18:49:18,151:INFO:Declaring metric variables
2022-10-01 18:49:18,151:INFO:Importing untrained model
2022-10-01 18:49:18,151:INFO:AdaBoost Regressor Imported successfully
2022-10-01 18:49:18,151:INFO:Starting cross validation
2022-10-01 18:49:18,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:19,175:INFO:Calculating mean and std
2022-10-01 18:49:19,176:INFO:Creating metrics dataframe
2022-10-01 18:49:19,179:INFO:Uploading results into container
2022-10-01 18:49:19,179:INFO:Uploading model into container now
2022-10-01 18:49:19,180:INFO:master_model_container: 15
2022-10-01 18:49:19,180:INFO:display_container: 2
2022-10-01 18:49:19,180:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 18:49:19,180:INFO:create_model() successfully completed......................................
2022-10-01 18:49:19,274:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:19,274:INFO:Creating metrics dataframe
2022-10-01 18:49:19,280:INFO:Initializing Gradient Boosting Regressor
2022-10-01 18:49:19,280:INFO:Total runtime is 0.1747757434844971 minutes
2022-10-01 18:49:19,280:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:19,280:INFO:Initializing create_model()
2022-10-01 18:49:19,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:19,281:INFO:Checking exceptions
2022-10-01 18:49:19,282:INFO:Importing libraries
2022-10-01 18:49:19,282:INFO:Copying training dataset
2022-10-01 18:49:19,285:INFO:Defining folds
2022-10-01 18:49:19,285:INFO:Declaring metric variables
2022-10-01 18:49:19,285:INFO:Importing untrained model
2022-10-01 18:49:19,285:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 18:49:19,286:INFO:Starting cross validation
2022-10-01 18:49:19,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:19,917:INFO:Calculating mean and std
2022-10-01 18:49:19,918:INFO:Creating metrics dataframe
2022-10-01 18:49:19,921:INFO:Uploading results into container
2022-10-01 18:49:19,921:INFO:Uploading model into container now
2022-10-01 18:49:19,921:INFO:master_model_container: 16
2022-10-01 18:49:19,921:INFO:display_container: 2
2022-10-01 18:49:19,922:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 18:49:19,922:INFO:create_model() successfully completed......................................
2022-10-01 18:49:20,012:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:20,012:INFO:Creating metrics dataframe
2022-10-01 18:49:20,016:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 18:49:20,016:INFO:Total runtime is 0.1870365897814433 minutes
2022-10-01 18:49:20,016:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:20,017:INFO:Initializing create_model()
2022-10-01 18:49:20,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:20,017:INFO:Checking exceptions
2022-10-01 18:49:20,018:INFO:Importing libraries
2022-10-01 18:49:20,018:INFO:Copying training dataset
2022-10-01 18:49:20,020:INFO:Defining folds
2022-10-01 18:49:20,020:INFO:Declaring metric variables
2022-10-01 18:49:20,020:INFO:Importing untrained model
2022-10-01 18:49:20,020:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 18:49:20,020:INFO:Starting cross validation
2022-10-01 18:49:20,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:25,175:INFO:Calculating mean and std
2022-10-01 18:49:25,176:INFO:Creating metrics dataframe
2022-10-01 18:49:25,179:INFO:Uploading results into container
2022-10-01 18:49:25,179:INFO:Uploading model into container now
2022-10-01 18:49:25,180:INFO:master_model_container: 17
2022-10-01 18:49:25,180:INFO:display_container: 2
2022-10-01 18:49:25,180:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 18:49:25,180:INFO:create_model() successfully completed......................................
2022-10-01 18:49:25,281:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:25,281:INFO:Creating metrics dataframe
2022-10-01 18:49:25,285:INFO:Initializing Dummy Regressor
2022-10-01 18:49:25,285:INFO:Total runtime is 0.2748502373695374 minutes
2022-10-01 18:49:25,285:INFO:SubProcess create_model() called ==================================
2022-10-01 18:49:25,286:INFO:Initializing create_model()
2022-10-01 18:49:25,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AB9689BFA0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:25,286:INFO:Checking exceptions
2022-10-01 18:49:25,287:INFO:Importing libraries
2022-10-01 18:49:25,287:INFO:Copying training dataset
2022-10-01 18:49:25,289:INFO:Defining folds
2022-10-01 18:49:25,289:INFO:Declaring metric variables
2022-10-01 18:49:25,289:INFO:Importing untrained model
2022-10-01 18:49:25,289:INFO:Dummy Regressor Imported successfully
2022-10-01 18:49:25,289:INFO:Starting cross validation
2022-10-01 18:49:25,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:25,461:INFO:Calculating mean and std
2022-10-01 18:49:25,462:INFO:Creating metrics dataframe
2022-10-01 18:49:25,465:INFO:Uploading results into container
2022-10-01 18:49:25,465:INFO:Uploading model into container now
2022-10-01 18:49:25,465:INFO:master_model_container: 18
2022-10-01 18:49:25,465:INFO:display_container: 2
2022-10-01 18:49:25,466:INFO:DummyRegressor()
2022-10-01 18:49:25,466:INFO:create_model() successfully completed......................................
2022-10-01 18:49:25,553:INFO:SubProcess create_model() end ==================================
2022-10-01 18:49:25,553:INFO:Creating metrics dataframe
2022-10-01 18:49:25,558:INFO:Initializing create_model()
2022-10-01 18:49:25,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:25,558:INFO:Checking exceptions
2022-10-01 18:49:25,560:INFO:Importing libraries
2022-10-01 18:49:25,560:INFO:Copying training dataset
2022-10-01 18:49:25,562:INFO:Defining folds
2022-10-01 18:49:25,562:INFO:Declaring metric variables
2022-10-01 18:49:25,562:INFO:Importing untrained model
2022-10-01 18:49:25,562:INFO:Declaring custom model
2022-10-01 18:49:25,562:INFO:Lasso Regression Imported successfully
2022-10-01 18:49:25,563:INFO:Cross validation set to False
2022-10-01 18:49:25,563:INFO:Fitting Model
2022-10-01 18:49:25,573:INFO:Lasso(random_state=123)
2022-10-01 18:49:25,573:INFO:create_model() successfully completed......................................
2022-10-01 18:49:25,672:INFO:master_model_container: 18
2022-10-01 18:49:25,672:INFO:display_container: 2
2022-10-01 18:49:25,672:INFO:Lasso(random_state=123)
2022-10-01 18:49:25,672:INFO:compare_models() successfully completed......................................
2022-10-01 18:49:25,673:INFO:Initializing create_model()
2022-10-01 18:49:25,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 18:49:25,673:INFO:Checking exceptions
2022-10-01 18:49:25,675:INFO:Importing libraries
2022-10-01 18:49:25,676:INFO:Copying training dataset
2022-10-01 18:49:25,677:INFO:Defining folds
2022-10-01 18:49:25,677:INFO:Declaring metric variables
2022-10-01 18:49:25,678:INFO:Importing untrained model
2022-10-01 18:49:25,678:INFO:Declaring custom model
2022-10-01 18:49:25,678:INFO:Lasso Regression Imported successfully
2022-10-01 18:49:25,678:INFO:Starting cross validation
2022-10-01 18:49:25,679:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 18:49:25,844:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:25,882:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:25,901:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 18:49:25,908:INFO:Calculating mean and std
2022-10-01 18:49:25,909:INFO:Creating metrics dataframe
2022-10-01 18:49:25,911:INFO:Finalizing model
2022-10-01 18:49:25,922:INFO:Uploading results into container
2022-10-01 18:49:25,922:INFO:Uploading model into container now
2022-10-01 18:49:25,931:INFO:master_model_container: 19
2022-10-01 18:49:25,931:INFO:display_container: 3
2022-10-01 18:49:25,932:INFO:Lasso(random_state=123)
2022-10-01 18:49:25,932:INFO:create_model() successfully completed......................................
2022-10-01 18:49:26,064:INFO:Initializing predict_model()
2022-10-01 18:49:26,064:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AB8D982FE0>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001AB8DD61630>)
2022-10-01 18:49:26,064:INFO:Checking exceptions
2022-10-01 18:49:26,064:INFO:Preloading libraries
2022-10-01 18:49:26,065:INFO:Set up data.
2022-10-01 18:49:26,069:INFO:Set up index.
2022-10-01 18:49:26,234:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:54: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 23:29:45,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:29:45,233:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:29:45,233:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:29:45,233:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:29:53,982:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 23:30:03,695:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 23:30:05,022:INFO:PyCaret RegressionExperiment
2022-10-01 23:30:05,022:INFO:Logging name: reg-default-name
2022-10-01 23:30:05,022:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 23:30:05,022:INFO:version 3.0.0.rc4
2022-10-01 23:30:05,022:INFO:Initializing setup()
2022-10-01 23:30:05,022:INFO:self.USI: 7539
2022-10-01 23:30:05,022:INFO:self.variable_keys: {'transform_target_param', 'fold_groups_param', 'logging_param', 'display_container', 'y', 'idx', '_available_plots', 'X_test', 'exp_name_log', 'memory', 'X', '_all_metrics', '_all_models', 'variable_keys', 'n_jobs_param', 'y_train', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'X_train', 'y_test', 'html_param', 'master_model_container', 'seed', 'transform_target_method_param', 'fold_generator', 'gpu_param', 'target_param', '_ml_usecase', 'exp_id', 'USI', '_all_models_internal', '_gpu_n_jobs_param'}
2022-10-01 23:30:05,022:INFO:Checking environment
2022-10-01 23:30:05,023:INFO:python_version: 3.10.7
2022-10-01 23:30:05,023:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 23:30:05,023:INFO:machine: AMD64
2022-10-01 23:30:05,043:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 23:30:05,062:INFO:Memory: svmem(total=8497213440, available=1458741248, percent=82.8, used=7038472192, free=1458741248)
2022-10-01 23:30:05,062:INFO:Physical Core: 6
2022-10-01 23:30:05,062:INFO:Logical Core: 12
2022-10-01 23:30:05,062:INFO:Checking libraries
2022-10-01 23:30:05,062:INFO:System:
2022-10-01 23:30:05,062:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 23:30:05,062:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 23:30:05,062:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 23:30:05,062:INFO:PyCaret required dependencies:
2022-10-01 23:30:05,062:INFO:                 pip: 22.2.2
2022-10-01 23:30:05,062:INFO:          setuptools: 63.2.0
2022-10-01 23:30:05,062:INFO:             pycaret: 3.0.0rc4
2022-10-01 23:30:05,063:INFO:             IPython: 8.5.0
2022-10-01 23:30:05,063:INFO:          ipywidgets: 8.0.2
2022-10-01 23:30:05,063:INFO:                tqdm: 4.64.1
2022-10-01 23:30:05,063:INFO:               numpy: 1.22.4
2022-10-01 23:30:05,063:INFO:              pandas: 1.4.4
2022-10-01 23:30:05,063:INFO:              jinja2: 3.1.2
2022-10-01 23:30:05,063:INFO:               scipy: 1.8.1
2022-10-01 23:30:05,063:INFO:              joblib: 1.2.0
2022-10-01 23:30:05,063:INFO:             sklearn: 1.1.2
2022-10-01 23:30:05,063:INFO:                pyod: 1.0.5
2022-10-01 23:30:05,063:INFO:            imblearn: 0.9.1
2022-10-01 23:30:05,063:INFO:   category_encoders: 2.5.0
2022-10-01 23:30:05,063:INFO:            lightgbm: 3.3.2
2022-10-01 23:30:05,063:INFO:               numba: 0.55.2
2022-10-01 23:30:05,063:INFO:            requests: 2.28.1
2022-10-01 23:30:05,063:INFO:          matplotlib: 3.6.0
2022-10-01 23:30:05,063:INFO:          scikitplot: 0.3.7
2022-10-01 23:30:05,063:INFO:         yellowbrick: 1.5
2022-10-01 23:30:05,063:INFO:              plotly: 5.10.0
2022-10-01 23:30:05,063:INFO:             kaleido: 0.2.1
2022-10-01 23:30:05,063:INFO:         statsmodels: 0.13.2
2022-10-01 23:30:05,063:INFO:              sktime: 0.13.4
2022-10-01 23:30:05,063:INFO:               tbats: 1.1.0
2022-10-01 23:30:05,063:INFO:            pmdarima: 1.8.5
2022-10-01 23:30:05,063:INFO:              psutil: 5.9.2
2022-10-01 23:30:05,063:INFO:PyCaret optional dependencies:
2022-10-01 23:30:05,077:INFO:                shap: Not installed
2022-10-01 23:30:05,077:INFO:           interpret: Not installed
2022-10-01 23:30:05,077:INFO:                umap: Not installed
2022-10-01 23:30:05,077:INFO:    pandas_profiling: Not installed
2022-10-01 23:30:05,077:INFO:  explainerdashboard: Not installed
2022-10-01 23:30:05,077:INFO:             autoviz: Not installed
2022-10-01 23:30:05,077:INFO:           fairlearn: Not installed
2022-10-01 23:30:05,077:INFO:             xgboost: Not installed
2022-10-01 23:30:05,077:INFO:            catboost: Not installed
2022-10-01 23:30:05,077:INFO:              kmodes: Not installed
2022-10-01 23:30:05,077:INFO:             mlxtend: Not installed
2022-10-01 23:30:05,077:INFO:       statsforecast: Not installed
2022-10-01 23:30:05,077:INFO:        tune_sklearn: Not installed
2022-10-01 23:30:05,077:INFO:                 ray: Not installed
2022-10-01 23:30:05,077:INFO:            hyperopt: Not installed
2022-10-01 23:30:05,077:INFO:              optuna: Not installed
2022-10-01 23:30:05,077:INFO:               skopt: Not installed
2022-10-01 23:30:05,077:INFO:              mlflow: Not installed
2022-10-01 23:30:05,077:INFO:              gradio: Not installed
2022-10-01 23:30:05,077:INFO:             fastapi: Not installed
2022-10-01 23:30:05,077:INFO:             uvicorn: Not installed
2022-10-01 23:30:05,078:INFO:              m2cgen: Not installed
2022-10-01 23:30:05,078:INFO:           evidently: Not installed
2022-10-01 23:30:05,078:INFO:                nltk: Not installed
2022-10-01 23:30:05,078:INFO:            pyLDAvis: Not installed
2022-10-01 23:30:05,078:INFO:              gensim: Not installed
2022-10-01 23:30:05,078:INFO:               spacy: Not installed
2022-10-01 23:30:05,078:INFO:           wordcloud: Not installed
2022-10-01 23:30:05,078:INFO:            textblob: Not installed
2022-10-01 23:30:05,078:INFO:               fugue: Not installed
2022-10-01 23:30:05,078:INFO:           streamlit: Not installed
2022-10-01 23:30:05,078:INFO:             prophet: Not installed
2022-10-01 23:30:05,078:INFO:None
2022-10-01 23:30:05,078:INFO:Set up GPU usage.
2022-10-01 23:30:05,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,078:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 23:30:05,078:INFO:Set up data.
2022-10-01 23:30:05,104:INFO:Set up train/test split.
2022-10-01 23:30:05,108:INFO:Set up index.
2022-10-01 23:30:05,109:INFO:Set up folding strategy.
2022-10-01 23:30:05,109:INFO:Assigning column types.
2022-10-01 23:30:05,111:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 23:30:05,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,111:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:30:05,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,115:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:30:05,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,120:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:30:05,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,171:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:05,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:05,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:05,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:06,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:06,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,214:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,220:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,220:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,314:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:06,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:06,710:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 23:30:06,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,719:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,727:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,820:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:06,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:06,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:07,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:07,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,146:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,153:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,282:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:07,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:07,532:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 23:30:07,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,551:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,634:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:07,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:07,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:08,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:08,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,017:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:30:08,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,102:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:08,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:08,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:08,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:08,442:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 23:30:08,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,542:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:08,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:08,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:08,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:08,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:08,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:09,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:30:09,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:09,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:09,296:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 23:30:09,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:09,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:09,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:09,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,768:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:30:09,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,811:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,811:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:09,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:10,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:10,058:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 23:30:10,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:10,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:10,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:10,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:10,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:10,819:INFO:Preparing preprocessing pipeline...
2022-10-01 23:30:10,820:INFO:Set up simple imputation.
2022-10-01 23:30:10,820:INFO:Set up variance threshold.
2022-10-01 23:30:10,914:INFO:Finished creating preprocessing pipeline.
2022-10-01 23:30:10,933:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 23:30:10,933:INFO:Creating final display dataframe.
2022-10-01 23:30:11,076:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              7539
2022-10-01 23:30:11,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,203:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:11,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:11,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,574:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,574:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:30:11,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:11,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:30:11,839:INFO:setup() successfully completed in 6.83s...............
2022-10-01 23:30:11,839:INFO:Initializing compare_models()
2022-10-01 23:30:11,839:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 23:30:11,839:INFO:Checking exceptions
2022-10-01 23:30:11,841:INFO:Preparing display monitor
2022-10-01 23:30:11,851:INFO:Initializing Linear Regression
2022-10-01 23:30:11,851:INFO:Total runtime is 0.0 minutes
2022-10-01 23:30:11,851:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:11,852:INFO:Initializing create_model()
2022-10-01 23:30:11,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:11,852:INFO:Checking exceptions
2022-10-01 23:30:11,853:INFO:Importing libraries
2022-10-01 23:30:11,853:INFO:Copying training dataset
2022-10-01 23:30:11,855:INFO:Defining folds
2022-10-01 23:30:11,855:INFO:Declaring metric variables
2022-10-01 23:30:11,855:INFO:Importing untrained model
2022-10-01 23:30:11,856:INFO:Linear Regression Imported successfully
2022-10-01 23:30:11,856:INFO:Starting cross validation
2022-10-01 23:30:11,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:12,553:INFO:Calculating mean and std
2022-10-01 23:30:12,554:INFO:Creating metrics dataframe
2022-10-01 23:30:12,556:INFO:Uploading results into container
2022-10-01 23:30:12,557:INFO:Uploading model into container now
2022-10-01 23:30:12,557:INFO:master_model_container: 1
2022-10-01 23:30:12,557:INFO:display_container: 2
2022-10-01 23:30:12,557:INFO:LinearRegression(n_jobs=-1)
2022-10-01 23:30:12,557:INFO:create_model() successfully completed......................................
2022-10-01 23:30:12,641:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:12,641:INFO:Creating metrics dataframe
2022-10-01 23:30:12,656:INFO:Initializing Lasso Regression
2022-10-01 23:30:12,656:INFO:Total runtime is 0.013413079579671224 minutes
2022-10-01 23:30:12,657:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:12,657:INFO:Initializing create_model()
2022-10-01 23:30:12,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:12,657:INFO:Checking exceptions
2022-10-01 23:30:12,658:INFO:Importing libraries
2022-10-01 23:30:12,658:INFO:Copying training dataset
2022-10-01 23:30:12,660:INFO:Defining folds
2022-10-01 23:30:12,660:INFO:Declaring metric variables
2022-10-01 23:30:12,660:INFO:Importing untrained model
2022-10-01 23:30:12,660:INFO:Lasso Regression Imported successfully
2022-10-01 23:30:12,660:INFO:Starting cross validation
2022-10-01 23:30:12,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:12,932:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:12,967:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:12,985:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:12,993:INFO:Calculating mean and std
2022-10-01 23:30:12,994:INFO:Creating metrics dataframe
2022-10-01 23:30:12,996:INFO:Uploading results into container
2022-10-01 23:30:12,996:INFO:Uploading model into container now
2022-10-01 23:30:12,997:INFO:master_model_container: 2
2022-10-01 23:30:12,997:INFO:display_container: 2
2022-10-01 23:30:12,997:INFO:Lasso(random_state=123)
2022-10-01 23:30:12,997:INFO:create_model() successfully completed......................................
2022-10-01 23:30:13,081:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:13,081:INFO:Creating metrics dataframe
2022-10-01 23:30:13,084:INFO:Initializing Ridge Regression
2022-10-01 23:30:13,084:INFO:Total runtime is 0.02055655320485433 minutes
2022-10-01 23:30:13,085:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:13,085:INFO:Initializing create_model()
2022-10-01 23:30:13,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:13,085:INFO:Checking exceptions
2022-10-01 23:30:13,086:INFO:Importing libraries
2022-10-01 23:30:13,086:INFO:Copying training dataset
2022-10-01 23:30:13,087:INFO:Defining folds
2022-10-01 23:30:13,088:INFO:Declaring metric variables
2022-10-01 23:30:13,088:INFO:Importing untrained model
2022-10-01 23:30:13,088:INFO:Ridge Regression Imported successfully
2022-10-01 23:30:13,088:INFO:Starting cross validation
2022-10-01 23:30:13,089:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:13,187:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,205:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,222:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,239:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,255:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,272:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,289:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,305:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,322:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,339:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:30:13,346:INFO:Calculating mean and std
2022-10-01 23:30:13,347:INFO:Creating metrics dataframe
2022-10-01 23:30:13,349:INFO:Uploading results into container
2022-10-01 23:30:13,350:INFO:Uploading model into container now
2022-10-01 23:30:13,350:INFO:master_model_container: 3
2022-10-01 23:30:13,350:INFO:display_container: 2
2022-10-01 23:30:13,350:INFO:Ridge(random_state=123)
2022-10-01 23:30:13,350:INFO:create_model() successfully completed......................................
2022-10-01 23:30:13,437:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:13,437:INFO:Creating metrics dataframe
2022-10-01 23:30:13,441:INFO:Initializing Elastic Net
2022-10-01 23:30:13,441:INFO:Total runtime is 0.026497928301493327 minutes
2022-10-01 23:30:13,441:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:13,441:INFO:Initializing create_model()
2022-10-01 23:30:13,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:13,442:INFO:Checking exceptions
2022-10-01 23:30:13,443:INFO:Importing libraries
2022-10-01 23:30:13,443:INFO:Copying training dataset
2022-10-01 23:30:13,444:INFO:Defining folds
2022-10-01 23:30:13,444:INFO:Declaring metric variables
2022-10-01 23:30:13,444:INFO:Importing untrained model
2022-10-01 23:30:13,445:INFO:Elastic Net Imported successfully
2022-10-01 23:30:13,445:INFO:Starting cross validation
2022-10-01 23:30:13,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:13,563:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:13,616:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:13,624:INFO:Calculating mean and std
2022-10-01 23:30:13,624:INFO:Creating metrics dataframe
2022-10-01 23:30:13,627:INFO:Uploading results into container
2022-10-01 23:30:13,627:INFO:Uploading model into container now
2022-10-01 23:30:13,628:INFO:master_model_container: 4
2022-10-01 23:30:13,628:INFO:display_container: 2
2022-10-01 23:30:13,628:INFO:ElasticNet(random_state=123)
2022-10-01 23:30:13,628:INFO:create_model() successfully completed......................................
2022-10-01 23:30:13,709:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:13,709:INFO:Creating metrics dataframe
2022-10-01 23:30:13,713:INFO:Initializing Least Angle Regression
2022-10-01 23:30:13,713:INFO:Total runtime is 0.031033130486806233 minutes
2022-10-01 23:30:13,713:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:13,713:INFO:Initializing create_model()
2022-10-01 23:30:13,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:13,713:INFO:Checking exceptions
2022-10-01 23:30:13,714:INFO:Importing libraries
2022-10-01 23:30:13,715:INFO:Copying training dataset
2022-10-01 23:30:13,716:INFO:Defining folds
2022-10-01 23:30:13,716:INFO:Declaring metric variables
2022-10-01 23:30:13,716:INFO:Importing untrained model
2022-10-01 23:30:13,717:INFO:Least Angle Regression Imported successfully
2022-10-01 23:30:13,717:INFO:Starting cross validation
2022-10-01 23:30:13,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:13,754:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,820:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,842:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,861:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,880:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,898:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,916:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,934:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,951:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,969:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:13,977:INFO:Calculating mean and std
2022-10-01 23:30:13,978:INFO:Creating metrics dataframe
2022-10-01 23:30:13,980:INFO:Uploading results into container
2022-10-01 23:30:13,980:INFO:Uploading model into container now
2022-10-01 23:30:13,981:INFO:master_model_container: 5
2022-10-01 23:30:13,981:INFO:display_container: 2
2022-10-01 23:30:13,981:INFO:Lars(random_state=123)
2022-10-01 23:30:13,981:INFO:create_model() successfully completed......................................
2022-10-01 23:30:14,061:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:14,061:INFO:Creating metrics dataframe
2022-10-01 23:30:14,065:INFO:Initializing Lasso Least Angle Regression
2022-10-01 23:30:14,065:INFO:Total runtime is 0.0369048794110616 minutes
2022-10-01 23:30:14,065:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:14,066:INFO:Initializing create_model()
2022-10-01 23:30:14,066:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:14,066:INFO:Checking exceptions
2022-10-01 23:30:14,067:INFO:Importing libraries
2022-10-01 23:30:14,067:INFO:Copying training dataset
2022-10-01 23:30:14,068:INFO:Defining folds
2022-10-01 23:30:14,068:INFO:Declaring metric variables
2022-10-01 23:30:14,068:INFO:Importing untrained model
2022-10-01 23:30:14,069:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 23:30:14,069:INFO:Starting cross validation
2022-10-01 23:30:14,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:14,079:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,096:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,114:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,131:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,149:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,166:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,183:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,201:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,219:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,237:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:30:14,245:INFO:Calculating mean and std
2022-10-01 23:30:14,245:INFO:Creating metrics dataframe
2022-10-01 23:30:14,248:INFO:Uploading results into container
2022-10-01 23:30:14,248:INFO:Uploading model into container now
2022-10-01 23:30:14,249:INFO:master_model_container: 6
2022-10-01 23:30:14,249:INFO:display_container: 2
2022-10-01 23:30:14,249:INFO:LassoLars(random_state=123)
2022-10-01 23:30:14,249:INFO:create_model() successfully completed......................................
2022-10-01 23:30:14,328:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:14,328:INFO:Creating metrics dataframe
2022-10-01 23:30:14,332:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 23:30:14,332:INFO:Total runtime is 0.04135274092356364 minutes
2022-10-01 23:30:14,332:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:14,332:INFO:Initializing create_model()
2022-10-01 23:30:14,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:14,332:INFO:Checking exceptions
2022-10-01 23:30:14,333:INFO:Importing libraries
2022-10-01 23:30:14,333:INFO:Copying training dataset
2022-10-01 23:30:14,335:INFO:Defining folds
2022-10-01 23:30:14,335:INFO:Declaring metric variables
2022-10-01 23:30:14,335:INFO:Importing untrained model
2022-10-01 23:30:14,335:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 23:30:14,336:INFO:Starting cross validation
2022-10-01 23:30:14,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:14,346:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,363:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,380:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,397:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,414:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,431:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,447:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,464:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,481:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,498:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:30:14,506:INFO:Calculating mean and std
2022-10-01 23:30:14,507:INFO:Creating metrics dataframe
2022-10-01 23:30:14,509:INFO:Uploading results into container
2022-10-01 23:30:14,510:INFO:Uploading model into container now
2022-10-01 23:30:14,510:INFO:master_model_container: 7
2022-10-01 23:30:14,510:INFO:display_container: 2
2022-10-01 23:30:14,510:INFO:OrthogonalMatchingPursuit()
2022-10-01 23:30:14,510:INFO:create_model() successfully completed......................................
2022-10-01 23:30:14,590:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:14,590:INFO:Creating metrics dataframe
2022-10-01 23:30:14,594:INFO:Initializing Bayesian Ridge
2022-10-01 23:30:14,594:INFO:Total runtime is 0.04572256406148275 minutes
2022-10-01 23:30:14,594:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:14,595:INFO:Initializing create_model()
2022-10-01 23:30:14,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:14,595:INFO:Checking exceptions
2022-10-01 23:30:14,596:INFO:Importing libraries
2022-10-01 23:30:14,596:INFO:Copying training dataset
2022-10-01 23:30:14,597:INFO:Defining folds
2022-10-01 23:30:14,597:INFO:Declaring metric variables
2022-10-01 23:30:14,598:INFO:Importing untrained model
2022-10-01 23:30:14,598:INFO:Bayesian Ridge Imported successfully
2022-10-01 23:30:14,598:INFO:Starting cross validation
2022-10-01 23:30:14,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:14,783:INFO:Calculating mean and std
2022-10-01 23:30:14,784:INFO:Creating metrics dataframe
2022-10-01 23:30:14,786:INFO:Uploading results into container
2022-10-01 23:30:14,786:INFO:Uploading model into container now
2022-10-01 23:30:14,787:INFO:master_model_container: 8
2022-10-01 23:30:14,787:INFO:display_container: 2
2022-10-01 23:30:14,787:INFO:BayesianRidge()
2022-10-01 23:30:14,787:INFO:create_model() successfully completed......................................
2022-10-01 23:30:14,867:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:14,868:INFO:Creating metrics dataframe
2022-10-01 23:30:14,871:INFO:Initializing Passive Aggressive Regressor
2022-10-01 23:30:14,871:INFO:Total runtime is 0.050324408213297527 minutes
2022-10-01 23:30:14,872:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:14,872:INFO:Initializing create_model()
2022-10-01 23:30:14,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:14,872:INFO:Checking exceptions
2022-10-01 23:30:14,873:INFO:Importing libraries
2022-10-01 23:30:14,873:INFO:Copying training dataset
2022-10-01 23:30:14,874:INFO:Defining folds
2022-10-01 23:30:14,874:INFO:Declaring metric variables
2022-10-01 23:30:14,875:INFO:Importing untrained model
2022-10-01 23:30:14,875:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 23:30:14,875:INFO:Starting cross validation
2022-10-01 23:30:14,876:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:15,130:INFO:Calculating mean and std
2022-10-01 23:30:15,131:INFO:Creating metrics dataframe
2022-10-01 23:30:15,133:INFO:Uploading results into container
2022-10-01 23:30:15,133:INFO:Uploading model into container now
2022-10-01 23:30:15,134:INFO:master_model_container: 9
2022-10-01 23:30:15,134:INFO:display_container: 2
2022-10-01 23:30:15,134:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 23:30:15,134:INFO:create_model() successfully completed......................................
2022-10-01 23:30:15,214:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:15,214:INFO:Creating metrics dataframe
2022-10-01 23:30:15,218:INFO:Initializing Huber Regressor
2022-10-01 23:30:15,218:INFO:Total runtime is 0.056119465827941896 minutes
2022-10-01 23:30:15,218:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:15,219:INFO:Initializing create_model()
2022-10-01 23:30:15,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:15,219:INFO:Checking exceptions
2022-10-01 23:30:15,220:INFO:Importing libraries
2022-10-01 23:30:15,220:INFO:Copying training dataset
2022-10-01 23:30:15,221:INFO:Defining folds
2022-10-01 23:30:15,221:INFO:Declaring metric variables
2022-10-01 23:30:15,222:INFO:Importing untrained model
2022-10-01 23:30:15,222:INFO:Huber Regressor Imported successfully
2022-10-01 23:30:15,222:INFO:Starting cross validation
2022-10-01 23:30:15,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:15,525:INFO:Calculating mean and std
2022-10-01 23:30:15,526:INFO:Creating metrics dataframe
2022-10-01 23:30:15,529:INFO:Uploading results into container
2022-10-01 23:30:15,529:INFO:Uploading model into container now
2022-10-01 23:30:15,529:INFO:master_model_container: 10
2022-10-01 23:30:15,529:INFO:display_container: 2
2022-10-01 23:30:15,529:INFO:HuberRegressor()
2022-10-01 23:30:15,530:INFO:create_model() successfully completed......................................
2022-10-01 23:30:15,610:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:15,610:INFO:Creating metrics dataframe
2022-10-01 23:30:15,614:INFO:Initializing K Neighbors Regressor
2022-10-01 23:30:15,614:INFO:Total runtime is 0.06271642843882243 minutes
2022-10-01 23:30:15,614:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:15,614:INFO:Initializing create_model()
2022-10-01 23:30:15,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:15,614:INFO:Checking exceptions
2022-10-01 23:30:15,615:INFO:Importing libraries
2022-10-01 23:30:15,615:INFO:Copying training dataset
2022-10-01 23:30:15,617:INFO:Defining folds
2022-10-01 23:30:15,617:INFO:Declaring metric variables
2022-10-01 23:30:15,617:INFO:Importing untrained model
2022-10-01 23:30:15,617:INFO:K Neighbors Regressor Imported successfully
2022-10-01 23:30:15,617:INFO:Starting cross validation
2022-10-01 23:30:15,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:18,584:INFO:Calculating mean and std
2022-10-01 23:30:18,585:INFO:Creating metrics dataframe
2022-10-01 23:30:18,589:INFO:Uploading results into container
2022-10-01 23:30:18,590:INFO:Uploading model into container now
2022-10-01 23:30:18,590:INFO:master_model_container: 11
2022-10-01 23:30:18,590:INFO:display_container: 2
2022-10-01 23:30:18,590:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 23:30:18,590:INFO:create_model() successfully completed......................................
2022-10-01 23:30:18,691:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:18,691:INFO:Creating metrics dataframe
2022-10-01 23:30:18,697:INFO:Initializing Decision Tree Regressor
2022-10-01 23:30:18,697:INFO:Total runtime is 0.11409171422322592 minutes
2022-10-01 23:30:18,697:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:18,698:INFO:Initializing create_model()
2022-10-01 23:30:18,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:18,698:INFO:Checking exceptions
2022-10-01 23:30:18,699:INFO:Importing libraries
2022-10-01 23:30:18,699:INFO:Copying training dataset
2022-10-01 23:30:18,701:INFO:Defining folds
2022-10-01 23:30:18,701:INFO:Declaring metric variables
2022-10-01 23:30:18,701:INFO:Importing untrained model
2022-10-01 23:30:18,701:INFO:Decision Tree Regressor Imported successfully
2022-10-01 23:30:18,702:INFO:Starting cross validation
2022-10-01 23:30:18,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:19,165:INFO:Calculating mean and std
2022-10-01 23:30:19,166:INFO:Creating metrics dataframe
2022-10-01 23:30:19,169:INFO:Uploading results into container
2022-10-01 23:30:19,169:INFO:Uploading model into container now
2022-10-01 23:30:19,169:INFO:master_model_container: 12
2022-10-01 23:30:19,170:INFO:display_container: 2
2022-10-01 23:30:19,170:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 23:30:19,170:INFO:create_model() successfully completed......................................
2022-10-01 23:30:19,267:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:19,267:INFO:Creating metrics dataframe
2022-10-01 23:30:19,272:INFO:Initializing Random Forest Regressor
2022-10-01 23:30:19,272:INFO:Total runtime is 0.12368396123250326 minutes
2022-10-01 23:30:19,272:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:19,272:INFO:Initializing create_model()
2022-10-01 23:30:19,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:19,273:INFO:Checking exceptions
2022-10-01 23:30:19,274:INFO:Importing libraries
2022-10-01 23:30:19,274:INFO:Copying training dataset
2022-10-01 23:30:19,276:INFO:Defining folds
2022-10-01 23:30:19,276:INFO:Declaring metric variables
2022-10-01 23:30:19,276:INFO:Importing untrained model
2022-10-01 23:30:19,276:INFO:Random Forest Regressor Imported successfully
2022-10-01 23:30:19,276:INFO:Starting cross validation
2022-10-01 23:30:19,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:20,648:INFO:Calculating mean and std
2022-10-01 23:30:20,649:INFO:Creating metrics dataframe
2022-10-01 23:30:20,652:INFO:Uploading results into container
2022-10-01 23:30:20,652:INFO:Uploading model into container now
2022-10-01 23:30:20,653:INFO:master_model_container: 13
2022-10-01 23:30:20,653:INFO:display_container: 2
2022-10-01 23:30:20,653:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:30:20,653:INFO:create_model() successfully completed......................................
2022-10-01 23:30:20,743:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:20,743:INFO:Creating metrics dataframe
2022-10-01 23:30:20,747:INFO:Initializing Extra Trees Regressor
2022-10-01 23:30:20,747:INFO:Total runtime is 0.14827227195103965 minutes
2022-10-01 23:30:20,747:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:20,748:INFO:Initializing create_model()
2022-10-01 23:30:20,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:20,748:INFO:Checking exceptions
2022-10-01 23:30:20,749:INFO:Importing libraries
2022-10-01 23:30:20,749:INFO:Copying training dataset
2022-10-01 23:30:20,751:INFO:Defining folds
2022-10-01 23:30:20,751:INFO:Declaring metric variables
2022-10-01 23:30:20,751:INFO:Importing untrained model
2022-10-01 23:30:20,751:INFO:Extra Trees Regressor Imported successfully
2022-10-01 23:30:20,751:INFO:Starting cross validation
2022-10-01 23:30:20,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:22,009:INFO:Calculating mean and std
2022-10-01 23:30:22,009:INFO:Creating metrics dataframe
2022-10-01 23:30:22,012:INFO:Uploading results into container
2022-10-01 23:30:22,013:INFO:Uploading model into container now
2022-10-01 23:30:22,013:INFO:master_model_container: 14
2022-10-01 23:30:22,013:INFO:display_container: 2
2022-10-01 23:30:22,013:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:30:22,013:INFO:create_model() successfully completed......................................
2022-10-01 23:30:22,110:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:22,110:INFO:Creating metrics dataframe
2022-10-01 23:30:22,114:INFO:Initializing AdaBoost Regressor
2022-10-01 23:30:22,114:INFO:Total runtime is 0.1710466782251994 minutes
2022-10-01 23:30:22,114:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:22,114:INFO:Initializing create_model()
2022-10-01 23:30:22,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:22,114:INFO:Checking exceptions
2022-10-01 23:30:22,115:INFO:Importing libraries
2022-10-01 23:30:22,115:INFO:Copying training dataset
2022-10-01 23:30:22,117:INFO:Defining folds
2022-10-01 23:30:22,117:INFO:Declaring metric variables
2022-10-01 23:30:22,117:INFO:Importing untrained model
2022-10-01 23:30:22,117:INFO:AdaBoost Regressor Imported successfully
2022-10-01 23:30:22,117:INFO:Starting cross validation
2022-10-01 23:30:22,118:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:23,082:INFO:Calculating mean and std
2022-10-01 23:30:23,083:INFO:Creating metrics dataframe
2022-10-01 23:30:23,086:INFO:Uploading results into container
2022-10-01 23:30:23,086:INFO:Uploading model into container now
2022-10-01 23:30:23,086:INFO:master_model_container: 15
2022-10-01 23:30:23,086:INFO:display_container: 2
2022-10-01 23:30:23,087:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 23:30:23,087:INFO:create_model() successfully completed......................................
2022-10-01 23:30:23,174:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:23,174:INFO:Creating metrics dataframe
2022-10-01 23:30:23,178:INFO:Initializing Gradient Boosting Regressor
2022-10-01 23:30:23,178:INFO:Total runtime is 0.18878783782323202 minutes
2022-10-01 23:30:23,178:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:23,178:INFO:Initializing create_model()
2022-10-01 23:30:23,179:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:23,179:INFO:Checking exceptions
2022-10-01 23:30:23,180:INFO:Importing libraries
2022-10-01 23:30:23,180:INFO:Copying training dataset
2022-10-01 23:30:23,181:INFO:Defining folds
2022-10-01 23:30:23,181:INFO:Declaring metric variables
2022-10-01 23:30:23,181:INFO:Importing untrained model
2022-10-01 23:30:23,182:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 23:30:23,182:INFO:Starting cross validation
2022-10-01 23:30:23,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:23,797:INFO:Calculating mean and std
2022-10-01 23:30:23,797:INFO:Creating metrics dataframe
2022-10-01 23:30:23,800:INFO:Uploading results into container
2022-10-01 23:30:23,800:INFO:Uploading model into container now
2022-10-01 23:30:23,800:INFO:master_model_container: 16
2022-10-01 23:30:23,801:INFO:display_container: 2
2022-10-01 23:30:23,801:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 23:30:23,801:INFO:create_model() successfully completed......................................
2022-10-01 23:30:23,882:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:23,882:INFO:Creating metrics dataframe
2022-10-01 23:30:23,886:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 23:30:23,886:INFO:Total runtime is 0.20058737993240358 minutes
2022-10-01 23:30:23,886:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:23,887:INFO:Initializing create_model()
2022-10-01 23:30:23,887:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:23,887:INFO:Checking exceptions
2022-10-01 23:30:23,888:INFO:Importing libraries
2022-10-01 23:30:23,888:INFO:Copying training dataset
2022-10-01 23:30:23,890:INFO:Defining folds
2022-10-01 23:30:23,890:INFO:Declaring metric variables
2022-10-01 23:30:23,890:INFO:Importing untrained model
2022-10-01 23:30:23,890:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 23:30:23,890:INFO:Starting cross validation
2022-10-01 23:30:23,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:29,316:INFO:Calculating mean and std
2022-10-01 23:30:29,317:INFO:Creating metrics dataframe
2022-10-01 23:30:29,320:INFO:Uploading results into container
2022-10-01 23:30:29,321:INFO:Uploading model into container now
2022-10-01 23:30:29,321:INFO:master_model_container: 17
2022-10-01 23:30:29,321:INFO:display_container: 2
2022-10-01 23:30:29,321:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 23:30:29,322:INFO:create_model() successfully completed......................................
2022-10-01 23:30:29,418:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:29,418:INFO:Creating metrics dataframe
2022-10-01 23:30:29,422:INFO:Initializing Dummy Regressor
2022-10-01 23:30:29,422:INFO:Total runtime is 0.2928422133127848 minutes
2022-10-01 23:30:29,422:INFO:SubProcess create_model() called ==================================
2022-10-01 23:30:29,422:INFO:Initializing create_model()
2022-10-01 23:30:29,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D8E299240>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:29,423:INFO:Checking exceptions
2022-10-01 23:30:29,423:INFO:Importing libraries
2022-10-01 23:30:29,424:INFO:Copying training dataset
2022-10-01 23:30:29,425:INFO:Defining folds
2022-10-01 23:30:29,425:INFO:Declaring metric variables
2022-10-01 23:30:29,426:INFO:Importing untrained model
2022-10-01 23:30:29,426:INFO:Dummy Regressor Imported successfully
2022-10-01 23:30:29,426:INFO:Starting cross validation
2022-10-01 23:30:29,427:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:29,580:INFO:Calculating mean and std
2022-10-01 23:30:29,581:INFO:Creating metrics dataframe
2022-10-01 23:30:29,584:INFO:Uploading results into container
2022-10-01 23:30:29,584:INFO:Uploading model into container now
2022-10-01 23:30:29,584:INFO:master_model_container: 18
2022-10-01 23:30:29,584:INFO:display_container: 2
2022-10-01 23:30:29,584:INFO:DummyRegressor()
2022-10-01 23:30:29,585:INFO:create_model() successfully completed......................................
2022-10-01 23:30:29,663:INFO:SubProcess create_model() end ==================================
2022-10-01 23:30:29,663:INFO:Creating metrics dataframe
2022-10-01 23:30:29,668:INFO:Initializing create_model()
2022-10-01 23:30:29,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:29,668:INFO:Checking exceptions
2022-10-01 23:30:29,670:INFO:Importing libraries
2022-10-01 23:30:29,670:INFO:Copying training dataset
2022-10-01 23:30:29,671:INFO:Defining folds
2022-10-01 23:30:29,671:INFO:Declaring metric variables
2022-10-01 23:30:29,672:INFO:Importing untrained model
2022-10-01 23:30:29,672:INFO:Declaring custom model
2022-10-01 23:30:29,672:INFO:Lasso Regression Imported successfully
2022-10-01 23:30:29,673:INFO:Cross validation set to False
2022-10-01 23:30:29,673:INFO:Fitting Model
2022-10-01 23:30:29,691:INFO:Lasso(random_state=123)
2022-10-01 23:30:29,691:INFO:create_model() successfully completed......................................
2022-10-01 23:30:29,788:INFO:master_model_container: 18
2022-10-01 23:30:29,788:INFO:display_container: 2
2022-10-01 23:30:29,788:INFO:Lasso(random_state=123)
2022-10-01 23:30:29,788:INFO:compare_models() successfully completed......................................
2022-10-01 23:30:29,789:INFO:Initializing create_model()
2022-10-01 23:30:29,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:30:29,789:INFO:Checking exceptions
2022-10-01 23:30:29,791:INFO:Importing libraries
2022-10-01 23:30:29,791:INFO:Copying training dataset
2022-10-01 23:30:29,793:INFO:Defining folds
2022-10-01 23:30:29,793:INFO:Declaring metric variables
2022-10-01 23:30:29,793:INFO:Importing untrained model
2022-10-01 23:30:29,793:INFO:Declaring custom model
2022-10-01 23:30:29,793:INFO:Lasso Regression Imported successfully
2022-10-01 23:30:29,794:INFO:Starting cross validation
2022-10-01 23:30:29,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:30:29,939:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:29,974:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:29,991:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:30:29,999:INFO:Calculating mean and std
2022-10-01 23:30:29,999:INFO:Creating metrics dataframe
2022-10-01 23:30:30,001:INFO:Finalizing model
2022-10-01 23:30:30,012:INFO:Uploading results into container
2022-10-01 23:30:30,012:INFO:Uploading model into container now
2022-10-01 23:30:30,021:INFO:master_model_container: 19
2022-10-01 23:30:30,021:INFO:display_container: 3
2022-10-01 23:30:30,022:INFO:Lasso(random_state=123)
2022-10-01 23:30:30,022:INFO:create_model() successfully completed......................................
2022-10-01 23:30:30,158:INFO:Initializing predict_model()
2022-10-01 23:30:30,158:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D8567F580>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013D85861630>)
2022-10-01 23:30:30,158:INFO:Checking exceptions
2022-10-01 23:30:30,158:INFO:Preloading libraries
2022-10-01 23:30:30,158:INFO:Set up data.
2022-10-01 23:30:30,161:INFO:Set up index.
2022-10-01 23:30:30,342:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:56: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 23:32:12,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:12,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:12,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:12,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:18,324:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 23:32:24,022:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 23:32:25,002:INFO:PyCaret RegressionExperiment
2022-10-01 23:32:25,002:INFO:Logging name: reg-default-name
2022-10-01 23:32:25,002:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 23:32:25,002:INFO:version 3.0.0.rc4
2022-10-01 23:32:25,002:INFO:Initializing setup()
2022-10-01 23:32:25,002:INFO:self.USI: 0f74
2022-10-01 23:32:25,002:INFO:self.variable_keys: {'memory', '_ml_usecase', 'display_container', '_all_metrics', '_available_plots', 'X_train', 'transform_target_param', 'X', 'pipeline', 'X_test', 'fold_groups_param', '_all_models', 'fold_shuffle_param', '_all_models_internal', 'logging_param', 'y_test', 'log_plots_param', 'gpu_param', 'fold_generator', 'target_param', 'html_param', 'data', '_gpu_n_jobs_param', 'master_model_container', 'y_train', 'seed', 'n_jobs_param', 'USI', 'exp_id', 'variable_keys', 'y', 'exp_name_log', 'transform_target_method_param', 'idx'}
2022-10-01 23:32:25,002:INFO:Checking environment
2022-10-01 23:32:25,003:INFO:python_version: 3.10.7
2022-10-01 23:32:25,003:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 23:32:25,003:INFO:machine: AMD64
2022-10-01 23:32:25,015:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 23:32:25,015:INFO:Memory: svmem(total=8497213440, available=919617536, percent=89.2, used=7577595904, free=919617536)
2022-10-01 23:32:25,015:INFO:Physical Core: 6
2022-10-01 23:32:25,015:INFO:Logical Core: 12
2022-10-01 23:32:25,015:INFO:Checking libraries
2022-10-01 23:32:25,015:INFO:System:
2022-10-01 23:32:25,015:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 23:32:25,015:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 23:32:25,015:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 23:32:25,015:INFO:PyCaret required dependencies:
2022-10-01 23:32:25,016:INFO:                 pip: 22.2.2
2022-10-01 23:32:25,016:INFO:          setuptools: 63.2.0
2022-10-01 23:32:25,016:INFO:             pycaret: 3.0.0rc4
2022-10-01 23:32:25,016:INFO:             IPython: 8.5.0
2022-10-01 23:32:25,016:INFO:          ipywidgets: 8.0.2
2022-10-01 23:32:25,016:INFO:                tqdm: 4.64.1
2022-10-01 23:32:25,016:INFO:               numpy: 1.22.4
2022-10-01 23:32:25,016:INFO:              pandas: 1.4.4
2022-10-01 23:32:25,016:INFO:              jinja2: 3.1.2
2022-10-01 23:32:25,016:INFO:               scipy: 1.8.1
2022-10-01 23:32:25,016:INFO:              joblib: 1.2.0
2022-10-01 23:32:25,016:INFO:             sklearn: 1.1.2
2022-10-01 23:32:25,016:INFO:                pyod: 1.0.5
2022-10-01 23:32:25,016:INFO:            imblearn: 0.9.1
2022-10-01 23:32:25,016:INFO:   category_encoders: 2.5.0
2022-10-01 23:32:25,016:INFO:            lightgbm: 3.3.2
2022-10-01 23:32:25,016:INFO:               numba: 0.55.2
2022-10-01 23:32:25,016:INFO:            requests: 2.28.1
2022-10-01 23:32:25,016:INFO:          matplotlib: 3.6.0
2022-10-01 23:32:25,016:INFO:          scikitplot: 0.3.7
2022-10-01 23:32:25,016:INFO:         yellowbrick: 1.5
2022-10-01 23:32:25,016:INFO:              plotly: 5.10.0
2022-10-01 23:32:25,016:INFO:             kaleido: 0.2.1
2022-10-01 23:32:25,017:INFO:         statsmodels: 0.13.2
2022-10-01 23:32:25,017:INFO:              sktime: 0.13.4
2022-10-01 23:32:25,017:INFO:               tbats: 1.1.0
2022-10-01 23:32:25,017:INFO:            pmdarima: 1.8.5
2022-10-01 23:32:25,017:INFO:              psutil: 5.9.2
2022-10-01 23:32:25,017:INFO:PyCaret optional dependencies:
2022-10-01 23:32:25,031:INFO:                shap: Not installed
2022-10-01 23:32:25,031:INFO:           interpret: Not installed
2022-10-01 23:32:25,031:INFO:                umap: Not installed
2022-10-01 23:32:25,031:INFO:    pandas_profiling: Not installed
2022-10-01 23:32:25,031:INFO:  explainerdashboard: Not installed
2022-10-01 23:32:25,031:INFO:             autoviz: Not installed
2022-10-01 23:32:25,031:INFO:           fairlearn: Not installed
2022-10-01 23:32:25,031:INFO:             xgboost: Not installed
2022-10-01 23:32:25,031:INFO:            catboost: Not installed
2022-10-01 23:32:25,031:INFO:              kmodes: Not installed
2022-10-01 23:32:25,031:INFO:             mlxtend: Not installed
2022-10-01 23:32:25,031:INFO:       statsforecast: Not installed
2022-10-01 23:32:25,031:INFO:        tune_sklearn: Not installed
2022-10-01 23:32:25,031:INFO:                 ray: Not installed
2022-10-01 23:32:25,031:INFO:            hyperopt: Not installed
2022-10-01 23:32:25,031:INFO:              optuna: Not installed
2022-10-01 23:32:25,031:INFO:               skopt: Not installed
2022-10-01 23:32:25,031:INFO:              mlflow: Not installed
2022-10-01 23:32:25,031:INFO:              gradio: Not installed
2022-10-01 23:32:25,032:INFO:             fastapi: Not installed
2022-10-01 23:32:25,032:INFO:             uvicorn: Not installed
2022-10-01 23:32:25,032:INFO:              m2cgen: Not installed
2022-10-01 23:32:25,032:INFO:           evidently: Not installed
2022-10-01 23:32:25,032:INFO:                nltk: Not installed
2022-10-01 23:32:25,032:INFO:            pyLDAvis: Not installed
2022-10-01 23:32:25,032:INFO:              gensim: Not installed
2022-10-01 23:32:25,032:INFO:               spacy: Not installed
2022-10-01 23:32:25,032:INFO:           wordcloud: Not installed
2022-10-01 23:32:25,032:INFO:            textblob: Not installed
2022-10-01 23:32:25,032:INFO:               fugue: Not installed
2022-10-01 23:32:25,032:INFO:           streamlit: Not installed
2022-10-01 23:32:25,032:INFO:             prophet: Not installed
2022-10-01 23:32:25,032:INFO:None
2022-10-01 23:32:25,032:INFO:Set up GPU usage.
2022-10-01 23:32:25,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,032:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 23:32:25,032:INFO:Set up data.
2022-10-01 23:32:25,036:INFO:Set up train/test split.
2022-10-01 23:32:25,038:INFO:Set up index.
2022-10-01 23:32:25,038:INFO:Set up folding strategy.
2022-10-01 23:32:25,038:INFO:Assigning column types.
2022-10-01 23:32:25,041:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 23:32:25,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,041:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,045:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,050:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,106:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:25,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:25,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,662:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,670:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,813:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:25,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:25,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:26,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:26,064:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 23:32:26,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,071:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,079:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,164:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:26,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:26,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,474:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,482:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,482:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,569:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,614:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:26,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:26,851:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 23:32:26,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,866:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,866:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:26,955:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:26,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:27,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:27,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:27,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,269:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:32:27,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:27,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:27,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:27,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:27,647:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 23:32:27,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:27,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:27,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:27,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:28,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:28,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,181:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:28,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,237:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:32:28,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:28,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:28,479:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 23:32:28,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,486:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,583:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:28,583:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:28,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:28,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:28,980:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:32:28,981:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:29,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:29,275:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 23:32:29,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,290:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:29,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:29,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:29,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:30,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:30,095:INFO:Preparing preprocessing pipeline...
2022-10-01 23:32:30,096:INFO:Set up simple imputation.
2022-10-01 23:32:30,096:INFO:Set up variance threshold.
2022-10-01 23:32:30,115:INFO:Finished creating preprocessing pipeline.
2022-10-01 23:32:30,136:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 23:32:30,137:INFO:Creating final display dataframe.
2022-10-01 23:32:30,233:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              0f74
2022-10-01 23:32:30,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,246:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:30,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:30,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:32:30,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:31,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:32:31,013:INFO:setup() successfully completed in 6.01s...............
2022-10-01 23:32:31,014:INFO:Initializing compare_models()
2022-10-01 23:32:31,014:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 23:32:31,014:INFO:Checking exceptions
2022-10-01 23:32:31,015:INFO:Preparing display monitor
2022-10-01 23:32:31,019:INFO:Initializing Linear Regression
2022-10-01 23:32:31,019:INFO:Total runtime is 0.0 minutes
2022-10-01 23:32:31,019:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:31,019:INFO:Initializing create_model()
2022-10-01 23:32:31,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:31,019:INFO:Checking exceptions
2022-10-01 23:32:31,021:INFO:Importing libraries
2022-10-01 23:32:31,021:INFO:Copying training dataset
2022-10-01 23:32:31,023:INFO:Defining folds
2022-10-01 23:32:31,023:INFO:Declaring metric variables
2022-10-01 23:32:31,023:INFO:Importing untrained model
2022-10-01 23:32:31,024:INFO:Linear Regression Imported successfully
2022-10-01 23:32:31,024:INFO:Starting cross validation
2022-10-01 23:32:31,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:31,268:INFO:Calculating mean and std
2022-10-01 23:32:31,268:INFO:Creating metrics dataframe
2022-10-01 23:32:31,271:INFO:Uploading results into container
2022-10-01 23:32:31,271:INFO:Uploading model into container now
2022-10-01 23:32:31,272:INFO:master_model_container: 1
2022-10-01 23:32:31,272:INFO:display_container: 2
2022-10-01 23:32:31,272:INFO:LinearRegression(n_jobs=-1)
2022-10-01 23:32:31,272:INFO:create_model() successfully completed......................................
2022-10-01 23:32:31,367:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:31,367:INFO:Creating metrics dataframe
2022-10-01 23:32:31,371:INFO:Initializing Lasso Regression
2022-10-01 23:32:31,371:INFO:Total runtime is 0.00587007204691569 minutes
2022-10-01 23:32:31,371:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:31,371:INFO:Initializing create_model()
2022-10-01 23:32:31,371:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:31,371:INFO:Checking exceptions
2022-10-01 23:32:31,372:INFO:Importing libraries
2022-10-01 23:32:31,372:INFO:Copying training dataset
2022-10-01 23:32:31,374:INFO:Defining folds
2022-10-01 23:32:31,374:INFO:Declaring metric variables
2022-10-01 23:32:31,374:INFO:Importing untrained model
2022-10-01 23:32:31,374:INFO:Lasso Regression Imported successfully
2022-10-01 23:32:31,375:INFO:Starting cross validation
2022-10-01 23:32:31,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:31,516:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:31,554:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:31,573:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:31,581:INFO:Calculating mean and std
2022-10-01 23:32:31,581:INFO:Creating metrics dataframe
2022-10-01 23:32:31,584:INFO:Uploading results into container
2022-10-01 23:32:31,584:INFO:Uploading model into container now
2022-10-01 23:32:31,585:INFO:master_model_container: 2
2022-10-01 23:32:31,585:INFO:display_container: 2
2022-10-01 23:32:31,585:INFO:Lasso(random_state=123)
2022-10-01 23:32:31,585:INFO:create_model() successfully completed......................................
2022-10-01 23:32:31,667:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:31,667:INFO:Creating metrics dataframe
2022-10-01 23:32:31,671:INFO:Initializing Ridge Regression
2022-10-01 23:32:31,671:INFO:Total runtime is 0.010864094893137614 minutes
2022-10-01 23:32:31,671:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:31,671:INFO:Initializing create_model()
2022-10-01 23:32:31,672:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:31,672:INFO:Checking exceptions
2022-10-01 23:32:31,673:INFO:Importing libraries
2022-10-01 23:32:31,673:INFO:Copying training dataset
2022-10-01 23:32:31,674:INFO:Defining folds
2022-10-01 23:32:31,675:INFO:Declaring metric variables
2022-10-01 23:32:31,675:INFO:Importing untrained model
2022-10-01 23:32:31,675:INFO:Ridge Regression Imported successfully
2022-10-01 23:32:31,675:INFO:Starting cross validation
2022-10-01 23:32:31,676:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:31,690:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,712:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,730:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,749:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,767:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,785:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,804:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,827:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,845:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,862:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:32:31,870:INFO:Calculating mean and std
2022-10-01 23:32:31,870:INFO:Creating metrics dataframe
2022-10-01 23:32:31,873:INFO:Uploading results into container
2022-10-01 23:32:31,873:INFO:Uploading model into container now
2022-10-01 23:32:31,874:INFO:master_model_container: 3
2022-10-01 23:32:31,874:INFO:display_container: 2
2022-10-01 23:32:31,874:INFO:Ridge(random_state=123)
2022-10-01 23:32:31,874:INFO:create_model() successfully completed......................................
2022-10-01 23:32:31,964:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:31,964:INFO:Creating metrics dataframe
2022-10-01 23:32:31,968:INFO:Initializing Elastic Net
2022-10-01 23:32:31,968:INFO:Total runtime is 0.015807223320007325 minutes
2022-10-01 23:32:31,969:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:31,969:INFO:Initializing create_model()
2022-10-01 23:32:31,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:31,969:INFO:Checking exceptions
2022-10-01 23:32:31,970:INFO:Importing libraries
2022-10-01 23:32:31,970:INFO:Copying training dataset
2022-10-01 23:32:31,972:INFO:Defining folds
2022-10-01 23:32:31,972:INFO:Declaring metric variables
2022-10-01 23:32:31,972:INFO:Importing untrained model
2022-10-01 23:32:31,972:INFO:Elastic Net Imported successfully
2022-10-01 23:32:31,973:INFO:Starting cross validation
2022-10-01 23:32:31,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:32,094:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:32,147:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:32,155:INFO:Calculating mean and std
2022-10-01 23:32:32,156:INFO:Creating metrics dataframe
2022-10-01 23:32:32,158:INFO:Uploading results into container
2022-10-01 23:32:32,158:INFO:Uploading model into container now
2022-10-01 23:32:32,159:INFO:master_model_container: 4
2022-10-01 23:32:32,159:INFO:display_container: 2
2022-10-01 23:32:32,159:INFO:ElasticNet(random_state=123)
2022-10-01 23:32:32,159:INFO:create_model() successfully completed......................................
2022-10-01 23:32:32,248:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:32,248:INFO:Creating metrics dataframe
2022-10-01 23:32:32,252:INFO:Initializing Least Angle Regression
2022-10-01 23:32:32,252:INFO:Total runtime is 0.020542939503987633 minutes
2022-10-01 23:32:32,252:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:32,252:INFO:Initializing create_model()
2022-10-01 23:32:32,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:32,252:INFO:Checking exceptions
2022-10-01 23:32:32,253:INFO:Importing libraries
2022-10-01 23:32:32,253:INFO:Copying training dataset
2022-10-01 23:32:32,255:INFO:Defining folds
2022-10-01 23:32:32,255:INFO:Declaring metric variables
2022-10-01 23:32:32,255:INFO:Importing untrained model
2022-10-01 23:32:32,255:INFO:Least Angle Regression Imported successfully
2022-10-01 23:32:32,256:INFO:Starting cross validation
2022-10-01 23:32:32,256:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:32,279:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,298:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,317:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,335:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,353:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,371:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,389:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,407:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,425:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,443:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,452:INFO:Calculating mean and std
2022-10-01 23:32:32,452:INFO:Creating metrics dataframe
2022-10-01 23:32:32,455:INFO:Uploading results into container
2022-10-01 23:32:32,455:INFO:Uploading model into container now
2022-10-01 23:32:32,455:INFO:master_model_container: 5
2022-10-01 23:32:32,456:INFO:display_container: 2
2022-10-01 23:32:32,456:INFO:Lars(random_state=123)
2022-10-01 23:32:32,456:INFO:create_model() successfully completed......................................
2022-10-01 23:32:32,548:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:32,548:INFO:Creating metrics dataframe
2022-10-01 23:32:32,552:INFO:Initializing Lasso Least Angle Regression
2022-10-01 23:32:32,552:INFO:Total runtime is 0.02553826173146566 minutes
2022-10-01 23:32:32,552:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:32,552:INFO:Initializing create_model()
2022-10-01 23:32:32,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:32,552:INFO:Checking exceptions
2022-10-01 23:32:32,553:INFO:Importing libraries
2022-10-01 23:32:32,553:INFO:Copying training dataset
2022-10-01 23:32:32,555:INFO:Defining folds
2022-10-01 23:32:32,555:INFO:Declaring metric variables
2022-10-01 23:32:32,555:INFO:Importing untrained model
2022-10-01 23:32:32,556:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 23:32:32,556:INFO:Starting cross validation
2022-10-01 23:32:32,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:32,567:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,585:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,605:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,623:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,641:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,663:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,682:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,700:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,718:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,736:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:32:32,745:INFO:Calculating mean and std
2022-10-01 23:32:32,745:INFO:Creating metrics dataframe
2022-10-01 23:32:32,748:INFO:Uploading results into container
2022-10-01 23:32:32,748:INFO:Uploading model into container now
2022-10-01 23:32:32,749:INFO:master_model_container: 6
2022-10-01 23:32:32,749:INFO:display_container: 2
2022-10-01 23:32:32,749:INFO:LassoLars(random_state=123)
2022-10-01 23:32:32,749:INFO:create_model() successfully completed......................................
2022-10-01 23:32:32,837:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:32,837:INFO:Creating metrics dataframe
2022-10-01 23:32:32,841:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 23:32:32,841:INFO:Total runtime is 0.0303637425104777 minutes
2022-10-01 23:32:32,841:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:32,841:INFO:Initializing create_model()
2022-10-01 23:32:32,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:32,841:INFO:Checking exceptions
2022-10-01 23:32:32,842:INFO:Importing libraries
2022-10-01 23:32:32,842:INFO:Copying training dataset
2022-10-01 23:32:32,844:INFO:Defining folds
2022-10-01 23:32:32,844:INFO:Declaring metric variables
2022-10-01 23:32:32,844:INFO:Importing untrained model
2022-10-01 23:32:32,844:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 23:32:32,844:INFO:Starting cross validation
2022-10-01 23:32:32,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:32,855:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,874:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,891:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,908:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,926:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,943:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,960:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,977:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:32,994:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:33,012:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:32:33,021:INFO:Calculating mean and std
2022-10-01 23:32:33,022:INFO:Creating metrics dataframe
2022-10-01 23:32:33,024:INFO:Uploading results into container
2022-10-01 23:32:33,025:INFO:Uploading model into container now
2022-10-01 23:32:33,025:INFO:master_model_container: 7
2022-10-01 23:32:33,025:INFO:display_container: 2
2022-10-01 23:32:33,025:INFO:OrthogonalMatchingPursuit()
2022-10-01 23:32:33,025:INFO:create_model() successfully completed......................................
2022-10-01 23:32:33,117:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:33,117:INFO:Creating metrics dataframe
2022-10-01 23:32:33,121:INFO:Initializing Bayesian Ridge
2022-10-01 23:32:33,121:INFO:Total runtime is 0.03502327601114909 minutes
2022-10-01 23:32:33,121:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:33,121:INFO:Initializing create_model()
2022-10-01 23:32:33,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:33,121:INFO:Checking exceptions
2022-10-01 23:32:33,122:INFO:Importing libraries
2022-10-01 23:32:33,122:INFO:Copying training dataset
2022-10-01 23:32:33,124:INFO:Defining folds
2022-10-01 23:32:33,124:INFO:Declaring metric variables
2022-10-01 23:32:33,125:INFO:Importing untrained model
2022-10-01 23:32:33,125:INFO:Bayesian Ridge Imported successfully
2022-10-01 23:32:33,125:INFO:Starting cross validation
2022-10-01 23:32:33,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:33,316:INFO:Calculating mean and std
2022-10-01 23:32:33,316:INFO:Creating metrics dataframe
2022-10-01 23:32:33,319:INFO:Uploading results into container
2022-10-01 23:32:33,319:INFO:Uploading model into container now
2022-10-01 23:32:33,320:INFO:master_model_container: 8
2022-10-01 23:32:33,320:INFO:display_container: 2
2022-10-01 23:32:33,320:INFO:BayesianRidge()
2022-10-01 23:32:33,320:INFO:create_model() successfully completed......................................
2022-10-01 23:32:33,411:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:33,411:INFO:Creating metrics dataframe
2022-10-01 23:32:33,415:INFO:Initializing Passive Aggressive Regressor
2022-10-01 23:32:33,415:INFO:Total runtime is 0.039928996562957765 minutes
2022-10-01 23:32:33,415:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:33,415:INFO:Initializing create_model()
2022-10-01 23:32:33,416:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:33,416:INFO:Checking exceptions
2022-10-01 23:32:33,417:INFO:Importing libraries
2022-10-01 23:32:33,418:INFO:Copying training dataset
2022-10-01 23:32:33,420:INFO:Defining folds
2022-10-01 23:32:33,420:INFO:Declaring metric variables
2022-10-01 23:32:33,420:INFO:Importing untrained model
2022-10-01 23:32:33,420:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 23:32:33,421:INFO:Starting cross validation
2022-10-01 23:32:33,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:33,601:INFO:Calculating mean and std
2022-10-01 23:32:33,601:INFO:Creating metrics dataframe
2022-10-01 23:32:33,604:INFO:Uploading results into container
2022-10-01 23:32:33,605:INFO:Uploading model into container now
2022-10-01 23:32:33,605:INFO:master_model_container: 9
2022-10-01 23:32:33,605:INFO:display_container: 2
2022-10-01 23:32:33,605:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 23:32:33,605:INFO:create_model() successfully completed......................................
2022-10-01 23:32:33,699:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:33,699:INFO:Creating metrics dataframe
2022-10-01 23:32:33,703:INFO:Initializing Huber Regressor
2022-10-01 23:32:33,703:INFO:Total runtime is 0.04472397168477377 minutes
2022-10-01 23:32:33,703:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:33,703:INFO:Initializing create_model()
2022-10-01 23:32:33,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:33,704:INFO:Checking exceptions
2022-10-01 23:32:33,705:INFO:Importing libraries
2022-10-01 23:32:33,705:INFO:Copying training dataset
2022-10-01 23:32:33,707:INFO:Defining folds
2022-10-01 23:32:33,707:INFO:Declaring metric variables
2022-10-01 23:32:33,707:INFO:Importing untrained model
2022-10-01 23:32:33,707:INFO:Huber Regressor Imported successfully
2022-10-01 23:32:33,707:INFO:Starting cross validation
2022-10-01 23:32:33,708:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:33,992:INFO:Calculating mean and std
2022-10-01 23:32:33,993:INFO:Creating metrics dataframe
2022-10-01 23:32:33,995:INFO:Uploading results into container
2022-10-01 23:32:33,996:INFO:Uploading model into container now
2022-10-01 23:32:33,996:INFO:master_model_container: 10
2022-10-01 23:32:33,996:INFO:display_container: 2
2022-10-01 23:32:33,996:INFO:HuberRegressor()
2022-10-01 23:32:33,997:INFO:create_model() successfully completed......................................
2022-10-01 23:32:34,092:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:34,092:INFO:Creating metrics dataframe
2022-10-01 23:32:34,096:INFO:Initializing K Neighbors Regressor
2022-10-01 23:32:34,096:INFO:Total runtime is 0.05127947330474854 minutes
2022-10-01 23:32:34,096:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:34,096:INFO:Initializing create_model()
2022-10-01 23:32:34,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:34,096:INFO:Checking exceptions
2022-10-01 23:32:34,097:INFO:Importing libraries
2022-10-01 23:32:34,097:INFO:Copying training dataset
2022-10-01 23:32:34,099:INFO:Defining folds
2022-10-01 23:32:34,099:INFO:Declaring metric variables
2022-10-01 23:32:34,099:INFO:Importing untrained model
2022-10-01 23:32:34,100:INFO:K Neighbors Regressor Imported successfully
2022-10-01 23:32:34,100:INFO:Starting cross validation
2022-10-01 23:32:34,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:40,908:INFO:Calculating mean and std
2022-10-01 23:32:40,909:INFO:Creating metrics dataframe
2022-10-01 23:32:40,911:INFO:Uploading results into container
2022-10-01 23:32:40,912:INFO:Uploading model into container now
2022-10-01 23:32:40,912:INFO:master_model_container: 11
2022-10-01 23:32:40,912:INFO:display_container: 2
2022-10-01 23:32:40,912:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 23:32:40,912:INFO:create_model() successfully completed......................................
2022-10-01 23:32:41,018:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:41,018:INFO:Creating metrics dataframe
2022-10-01 23:32:41,022:INFO:Initializing Decision Tree Regressor
2022-10-01 23:32:41,022:INFO:Total runtime is 0.1667093555132548 minutes
2022-10-01 23:32:41,022:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:41,022:INFO:Initializing create_model()
2022-10-01 23:32:41,022:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:41,022:INFO:Checking exceptions
2022-10-01 23:32:41,023:INFO:Importing libraries
2022-10-01 23:32:41,024:INFO:Copying training dataset
2022-10-01 23:32:41,025:INFO:Defining folds
2022-10-01 23:32:41,025:INFO:Declaring metric variables
2022-10-01 23:32:41,026:INFO:Importing untrained model
2022-10-01 23:32:41,026:INFO:Decision Tree Regressor Imported successfully
2022-10-01 23:32:41,026:INFO:Starting cross validation
2022-10-01 23:32:41,027:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:41,301:INFO:Calculating mean and std
2022-10-01 23:32:41,302:INFO:Creating metrics dataframe
2022-10-01 23:32:41,304:INFO:Uploading results into container
2022-10-01 23:32:41,305:INFO:Uploading model into container now
2022-10-01 23:32:41,305:INFO:master_model_container: 12
2022-10-01 23:32:41,305:INFO:display_container: 2
2022-10-01 23:32:41,305:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 23:32:41,305:INFO:create_model() successfully completed......................................
2022-10-01 23:32:41,401:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:41,401:INFO:Creating metrics dataframe
2022-10-01 23:32:41,405:INFO:Initializing Random Forest Regressor
2022-10-01 23:32:41,405:INFO:Total runtime is 0.17309576272964478 minutes
2022-10-01 23:32:41,406:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:41,406:INFO:Initializing create_model()
2022-10-01 23:32:41,406:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:41,406:INFO:Checking exceptions
2022-10-01 23:32:41,407:INFO:Importing libraries
2022-10-01 23:32:41,407:INFO:Copying training dataset
2022-10-01 23:32:41,409:INFO:Defining folds
2022-10-01 23:32:41,409:INFO:Declaring metric variables
2022-10-01 23:32:41,409:INFO:Importing untrained model
2022-10-01 23:32:41,409:INFO:Random Forest Regressor Imported successfully
2022-10-01 23:32:41,410:INFO:Starting cross validation
2022-10-01 23:32:41,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:42,876:INFO:Calculating mean and std
2022-10-01 23:32:42,876:INFO:Creating metrics dataframe
2022-10-01 23:32:42,879:INFO:Uploading results into container
2022-10-01 23:32:42,879:INFO:Uploading model into container now
2022-10-01 23:32:42,880:INFO:master_model_container: 13
2022-10-01 23:32:42,880:INFO:display_container: 2
2022-10-01 23:32:42,880:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:32:42,880:INFO:create_model() successfully completed......................................
2022-10-01 23:32:42,976:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:42,976:INFO:Creating metrics dataframe
2022-10-01 23:32:42,980:INFO:Initializing Extra Trees Regressor
2022-10-01 23:32:42,980:INFO:Total runtime is 0.19934073686599732 minutes
2022-10-01 23:32:42,980:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:42,980:INFO:Initializing create_model()
2022-10-01 23:32:42,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:42,981:INFO:Checking exceptions
2022-10-01 23:32:42,982:INFO:Importing libraries
2022-10-01 23:32:42,982:INFO:Copying training dataset
2022-10-01 23:32:42,984:INFO:Defining folds
2022-10-01 23:32:42,984:INFO:Declaring metric variables
2022-10-01 23:32:42,984:INFO:Importing untrained model
2022-10-01 23:32:42,984:INFO:Extra Trees Regressor Imported successfully
2022-10-01 23:32:42,984:INFO:Starting cross validation
2022-10-01 23:32:42,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:44,216:INFO:Calculating mean and std
2022-10-01 23:32:44,217:INFO:Creating metrics dataframe
2022-10-01 23:32:44,219:INFO:Uploading results into container
2022-10-01 23:32:44,220:INFO:Uploading model into container now
2022-10-01 23:32:44,220:INFO:master_model_container: 14
2022-10-01 23:32:44,220:INFO:display_container: 2
2022-10-01 23:32:44,220:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:32:44,220:INFO:create_model() successfully completed......................................
2022-10-01 23:32:44,363:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:44,363:INFO:Creating metrics dataframe
2022-10-01 23:32:44,367:INFO:Initializing AdaBoost Regressor
2022-10-01 23:32:44,367:INFO:Total runtime is 0.22247036695480346 minutes
2022-10-01 23:32:44,367:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:44,367:INFO:Initializing create_model()
2022-10-01 23:32:44,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:44,367:INFO:Checking exceptions
2022-10-01 23:32:44,369:INFO:Importing libraries
2022-10-01 23:32:44,369:INFO:Copying training dataset
2022-10-01 23:32:44,371:INFO:Defining folds
2022-10-01 23:32:44,371:INFO:Declaring metric variables
2022-10-01 23:32:44,371:INFO:Importing untrained model
2022-10-01 23:32:44,372:INFO:AdaBoost Regressor Imported successfully
2022-10-01 23:32:44,372:INFO:Starting cross validation
2022-10-01 23:32:44,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:45,108:INFO:Calculating mean and std
2022-10-01 23:32:45,108:INFO:Creating metrics dataframe
2022-10-01 23:32:45,111:INFO:Uploading results into container
2022-10-01 23:32:45,111:INFO:Uploading model into container now
2022-10-01 23:32:45,112:INFO:master_model_container: 15
2022-10-01 23:32:45,112:INFO:display_container: 2
2022-10-01 23:32:45,112:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 23:32:45,112:INFO:create_model() successfully completed......................................
2022-10-01 23:32:45,203:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:45,203:INFO:Creating metrics dataframe
2022-10-01 23:32:45,207:INFO:Initializing Gradient Boosting Regressor
2022-10-01 23:32:45,207:INFO:Total runtime is 0.23646580775578815 minutes
2022-10-01 23:32:45,207:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:45,207:INFO:Initializing create_model()
2022-10-01 23:32:45,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:45,208:INFO:Checking exceptions
2022-10-01 23:32:45,209:INFO:Importing libraries
2022-10-01 23:32:45,209:INFO:Copying training dataset
2022-10-01 23:32:45,211:INFO:Defining folds
2022-10-01 23:32:45,211:INFO:Declaring metric variables
2022-10-01 23:32:45,211:INFO:Importing untrained model
2022-10-01 23:32:45,211:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 23:32:45,211:INFO:Starting cross validation
2022-10-01 23:32:45,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:45,907:INFO:Calculating mean and std
2022-10-01 23:32:45,908:INFO:Creating metrics dataframe
2022-10-01 23:32:45,911:INFO:Uploading results into container
2022-10-01 23:32:45,911:INFO:Uploading model into container now
2022-10-01 23:32:45,911:INFO:master_model_container: 16
2022-10-01 23:32:45,911:INFO:display_container: 2
2022-10-01 23:32:45,912:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 23:32:45,912:INFO:create_model() successfully completed......................................
2022-10-01 23:32:46,002:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:46,002:INFO:Creating metrics dataframe
2022-10-01 23:32:46,006:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 23:32:46,006:INFO:Total runtime is 0.24977240959803262 minutes
2022-10-01 23:32:46,006:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:46,007:INFO:Initializing create_model()
2022-10-01 23:32:46,007:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:46,007:INFO:Checking exceptions
2022-10-01 23:32:46,008:INFO:Importing libraries
2022-10-01 23:32:46,008:INFO:Copying training dataset
2022-10-01 23:32:46,010:INFO:Defining folds
2022-10-01 23:32:46,010:INFO:Declaring metric variables
2022-10-01 23:32:46,010:INFO:Importing untrained model
2022-10-01 23:32:46,010:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 23:32:46,011:INFO:Starting cross validation
2022-10-01 23:32:46,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:51,107:INFO:Calculating mean and std
2022-10-01 23:32:51,108:INFO:Creating metrics dataframe
2022-10-01 23:32:51,112:INFO:Uploading results into container
2022-10-01 23:32:51,112:INFO:Uploading model into container now
2022-10-01 23:32:51,113:INFO:master_model_container: 17
2022-10-01 23:32:51,113:INFO:display_container: 2
2022-10-01 23:32:51,113:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 23:32:51,113:INFO:create_model() successfully completed......................................
2022-10-01 23:32:51,225:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:51,225:INFO:Creating metrics dataframe
2022-10-01 23:32:51,229:INFO:Initializing Dummy Regressor
2022-10-01 23:32:51,229:INFO:Total runtime is 0.3368295987447103 minutes
2022-10-01 23:32:51,229:INFO:SubProcess create_model() called ==================================
2022-10-01 23:32:51,229:INFO:Initializing create_model()
2022-10-01 23:32:51,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000227888CD0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:51,230:INFO:Checking exceptions
2022-10-01 23:32:51,231:INFO:Importing libraries
2022-10-01 23:32:51,231:INFO:Copying training dataset
2022-10-01 23:32:51,232:INFO:Defining folds
2022-10-01 23:32:51,233:INFO:Declaring metric variables
2022-10-01 23:32:51,233:INFO:Importing untrained model
2022-10-01 23:32:51,233:INFO:Dummy Regressor Imported successfully
2022-10-01 23:32:51,233:INFO:Starting cross validation
2022-10-01 23:32:51,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:51,416:INFO:Calculating mean and std
2022-10-01 23:32:51,417:INFO:Creating metrics dataframe
2022-10-01 23:32:51,419:INFO:Uploading results into container
2022-10-01 23:32:51,420:INFO:Uploading model into container now
2022-10-01 23:32:51,420:INFO:master_model_container: 18
2022-10-01 23:32:51,420:INFO:display_container: 2
2022-10-01 23:32:51,420:INFO:DummyRegressor()
2022-10-01 23:32:51,420:INFO:create_model() successfully completed......................................
2022-10-01 23:32:51,509:INFO:SubProcess create_model() end ==================================
2022-10-01 23:32:51,509:INFO:Creating metrics dataframe
2022-10-01 23:32:51,515:INFO:Initializing create_model()
2022-10-01 23:32:51,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:51,515:INFO:Checking exceptions
2022-10-01 23:32:51,516:INFO:Importing libraries
2022-10-01 23:32:51,516:INFO:Copying training dataset
2022-10-01 23:32:51,518:INFO:Defining folds
2022-10-01 23:32:51,518:INFO:Declaring metric variables
2022-10-01 23:32:51,518:INFO:Importing untrained model
2022-10-01 23:32:51,518:INFO:Declaring custom model
2022-10-01 23:32:51,519:INFO:Lasso Regression Imported successfully
2022-10-01 23:32:51,519:INFO:Cross validation set to False
2022-10-01 23:32:51,519:INFO:Fitting Model
2022-10-01 23:32:51,532:INFO:Lasso(random_state=123)
2022-10-01 23:32:51,532:INFO:create_model() successfully completed......................................
2022-10-01 23:32:51,649:INFO:master_model_container: 18
2022-10-01 23:32:51,649:INFO:display_container: 2
2022-10-01 23:32:51,650:INFO:Lasso(random_state=123)
2022-10-01 23:32:51,650:INFO:compare_models() successfully completed......................................
2022-10-01 23:32:51,650:INFO:Initializing create_model()
2022-10-01 23:32:51,650:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:32:51,650:INFO:Checking exceptions
2022-10-01 23:32:51,653:INFO:Importing libraries
2022-10-01 23:32:51,653:INFO:Copying training dataset
2022-10-01 23:32:51,654:INFO:Defining folds
2022-10-01 23:32:51,655:INFO:Declaring metric variables
2022-10-01 23:32:51,655:INFO:Importing untrained model
2022-10-01 23:32:51,655:INFO:Declaring custom model
2022-10-01 23:32:51,655:INFO:Lasso Regression Imported successfully
2022-10-01 23:32:51,655:INFO:Starting cross validation
2022-10-01 23:32:51,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:32:51,821:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:51,857:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:51,875:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:32:51,882:INFO:Calculating mean and std
2022-10-01 23:32:51,883:INFO:Creating metrics dataframe
2022-10-01 23:32:51,885:INFO:Finalizing model
2022-10-01 23:32:51,895:INFO:Uploading results into container
2022-10-01 23:32:51,896:INFO:Uploading model into container now
2022-10-01 23:32:51,905:INFO:master_model_container: 19
2022-10-01 23:32:51,905:INFO:display_container: 3
2022-10-01 23:32:51,905:INFO:Lasso(random_state=123)
2022-10-01 23:32:51,905:INFO:create_model() successfully completed......................................
2022-10-01 23:32:52,058:INFO:Initializing predict_model()
2022-10-01 23:32:52,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002278837F3D0>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000022788561630>)
2022-10-01 23:32:52,059:INFO:Checking exceptions
2022-10-01 23:32:52,059:INFO:Preloading libraries
2022-10-01 23:32:52,059:INFO:Set up data.
2022-10-01 23:32:52,062:INFO:Set up index.
2022-10-01 23:32:52,223:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:56: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 23:35:44,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:44,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:44,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:44,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:48,019:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 23:35:52,814:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 23:35:53,973:INFO:PyCaret RegressionExperiment
2022-10-01 23:35:53,973:INFO:Logging name: reg-default-name
2022-10-01 23:35:53,974:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 23:35:53,974:INFO:version 3.0.0.rc4
2022-10-01 23:35:53,974:INFO:Initializing setup()
2022-10-01 23:35:53,974:INFO:self.USI: f825
2022-10-01 23:35:53,974:INFO:self.variable_keys: {'transform_target_method_param', 'variable_keys', 'fold_groups_param', 'X_train', 'fold_shuffle_param', '_gpu_n_jobs_param', 'fold_generator', 'display_container', 'master_model_container', 'exp_name_log', 'html_param', 'transform_target_param', '_all_models', 'memory', 'y_train', 'exp_id', 'n_jobs_param', 'log_plots_param', 'y', '_all_models_internal', 'idx', 'seed', 'data', 'USI', '_all_metrics', '_available_plots', 'pipeline', 'X', 'X_test', '_ml_usecase', 'y_test', 'target_param', 'logging_param', 'gpu_param'}
2022-10-01 23:35:53,974:INFO:Checking environment
2022-10-01 23:35:53,974:INFO:python_version: 3.10.7
2022-10-01 23:35:53,974:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 23:35:53,974:INFO:machine: AMD64
2022-10-01 23:35:53,986:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 23:35:53,986:INFO:Memory: svmem(total=8497213440, available=2118856704, percent=75.1, used=6378356736, free=2118856704)
2022-10-01 23:35:53,986:INFO:Physical Core: 6
2022-10-01 23:35:53,986:INFO:Logical Core: 12
2022-10-01 23:35:53,986:INFO:Checking libraries
2022-10-01 23:35:53,986:INFO:System:
2022-10-01 23:35:53,986:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 23:35:53,986:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 23:35:53,986:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 23:35:53,986:INFO:PyCaret required dependencies:
2022-10-01 23:35:53,986:INFO:                 pip: 22.2.2
2022-10-01 23:35:53,986:INFO:          setuptools: 63.2.0
2022-10-01 23:35:53,986:INFO:             pycaret: 3.0.0rc4
2022-10-01 23:35:53,987:INFO:             IPython: 8.5.0
2022-10-01 23:35:53,987:INFO:          ipywidgets: 8.0.2
2022-10-01 23:35:53,987:INFO:                tqdm: 4.64.1
2022-10-01 23:35:53,987:INFO:               numpy: 1.22.4
2022-10-01 23:35:53,987:INFO:              pandas: 1.4.4
2022-10-01 23:35:53,987:INFO:              jinja2: 3.1.2
2022-10-01 23:35:53,987:INFO:               scipy: 1.8.1
2022-10-01 23:35:53,987:INFO:              joblib: 1.2.0
2022-10-01 23:35:53,987:INFO:             sklearn: 1.1.2
2022-10-01 23:35:53,987:INFO:                pyod: 1.0.5
2022-10-01 23:35:53,987:INFO:            imblearn: 0.9.1
2022-10-01 23:35:53,987:INFO:   category_encoders: 2.5.0
2022-10-01 23:35:53,987:INFO:            lightgbm: 3.3.2
2022-10-01 23:35:53,987:INFO:               numba: 0.55.2
2022-10-01 23:35:53,987:INFO:            requests: 2.28.1
2022-10-01 23:35:53,987:INFO:          matplotlib: 3.6.0
2022-10-01 23:35:53,987:INFO:          scikitplot: 0.3.7
2022-10-01 23:35:53,987:INFO:         yellowbrick: 1.5
2022-10-01 23:35:53,987:INFO:              plotly: 5.10.0
2022-10-01 23:35:53,987:INFO:             kaleido: 0.2.1
2022-10-01 23:35:53,987:INFO:         statsmodels: 0.13.2
2022-10-01 23:35:53,987:INFO:              sktime: 0.13.4
2022-10-01 23:35:53,987:INFO:               tbats: 1.1.0
2022-10-01 23:35:53,987:INFO:            pmdarima: 1.8.5
2022-10-01 23:35:53,988:INFO:              psutil: 5.9.2
2022-10-01 23:35:53,988:INFO:PyCaret optional dependencies:
2022-10-01 23:35:54,001:INFO:                shap: Not installed
2022-10-01 23:35:54,001:INFO:           interpret: Not installed
2022-10-01 23:35:54,001:INFO:                umap: Not installed
2022-10-01 23:35:54,002:INFO:    pandas_profiling: Not installed
2022-10-01 23:35:54,002:INFO:  explainerdashboard: Not installed
2022-10-01 23:35:54,002:INFO:             autoviz: Not installed
2022-10-01 23:35:54,002:INFO:           fairlearn: Not installed
2022-10-01 23:35:54,002:INFO:             xgboost: Not installed
2022-10-01 23:35:54,002:INFO:            catboost: Not installed
2022-10-01 23:35:54,002:INFO:              kmodes: Not installed
2022-10-01 23:35:54,002:INFO:             mlxtend: Not installed
2022-10-01 23:35:54,002:INFO:       statsforecast: Not installed
2022-10-01 23:35:54,002:INFO:        tune_sklearn: Not installed
2022-10-01 23:35:54,002:INFO:                 ray: Not installed
2022-10-01 23:35:54,002:INFO:            hyperopt: Not installed
2022-10-01 23:35:54,002:INFO:              optuna: Not installed
2022-10-01 23:35:54,002:INFO:               skopt: Not installed
2022-10-01 23:35:54,002:INFO:              mlflow: Not installed
2022-10-01 23:35:54,002:INFO:              gradio: Not installed
2022-10-01 23:35:54,002:INFO:             fastapi: Not installed
2022-10-01 23:35:54,002:INFO:             uvicorn: Not installed
2022-10-01 23:35:54,002:INFO:              m2cgen: Not installed
2022-10-01 23:35:54,002:INFO:           evidently: Not installed
2022-10-01 23:35:54,002:INFO:                nltk: Not installed
2022-10-01 23:35:54,003:INFO:            pyLDAvis: Not installed
2022-10-01 23:35:54,003:INFO:              gensim: Not installed
2022-10-01 23:35:54,003:INFO:               spacy: Not installed
2022-10-01 23:35:54,003:INFO:           wordcloud: Not installed
2022-10-01 23:35:54,003:INFO:            textblob: Not installed
2022-10-01 23:35:54,003:INFO:               fugue: Not installed
2022-10-01 23:35:54,003:INFO:           streamlit: Not installed
2022-10-01 23:35:54,003:INFO:             prophet: Not installed
2022-10-01 23:35:54,003:INFO:None
2022-10-01 23:35:54,003:INFO:Set up GPU usage.
2022-10-01 23:35:54,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,003:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 23:35:54,003:INFO:Set up data.
2022-10-01 23:35:54,007:INFO:Set up train/test split.
2022-10-01 23:35:54,009:INFO:Set up index.
2022-10-01 23:35:54,009:INFO:Set up folding strategy.
2022-10-01 23:35:54,009:INFO:Assigning column types.
2022-10-01 23:35:54,012:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 23:35:54,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,012:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,016:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,023:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,078:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,121:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:54,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:54,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,606:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,613:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,620:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:54,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:54,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:54,994:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 23:35:54,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:54,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,001:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,008:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:55,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:55,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,382:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,389:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,389:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:55,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:55,751:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 23:35:55,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,765:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:55,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:55,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:56,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:56,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,148:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:35:56,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,230:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:56,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:56,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:56,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:56,521:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 23:35:56,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,623:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:56,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:56,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:56,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:56,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:56,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,009:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:57,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:35:57,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:57,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:57,284:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 23:35:57,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,381:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:57,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:57,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:57,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,768:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:35:57,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:57,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:58,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:58,088:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 23:35:58,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:58,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:58,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:58,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:58,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:58,840:INFO:Preparing preprocessing pipeline...
2022-10-01 23:35:58,841:INFO:Set up simple imputation.
2022-10-01 23:35:58,841:INFO:Set up variance threshold.
2022-10-01 23:35:58,860:INFO:Finished creating preprocessing pipeline.
2022-10-01 23:35:58,988:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 23:35:58,988:INFO:Creating final display dataframe.
2022-10-01 23:35:59,064:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              f825
2022-10-01 23:35:59,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:59,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:59,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:35:59,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:59,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:35:59,823:INFO:setup() successfully completed in 5.85s...............
2022-10-01 23:35:59,823:INFO:Initializing compare_models()
2022-10-01 23:35:59,823:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 23:35:59,823:INFO:Checking exceptions
2022-10-01 23:35:59,825:INFO:Preparing display monitor
2022-10-01 23:35:59,829:INFO:Initializing Linear Regression
2022-10-01 23:35:59,829:INFO:Total runtime is 0.0 minutes
2022-10-01 23:35:59,829:INFO:SubProcess create_model() called ==================================
2022-10-01 23:35:59,829:INFO:Initializing create_model()
2022-10-01 23:35:59,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:35:59,829:INFO:Checking exceptions
2022-10-01 23:35:59,831:INFO:Importing libraries
2022-10-01 23:35:59,831:INFO:Copying training dataset
2022-10-01 23:35:59,833:INFO:Defining folds
2022-10-01 23:35:59,833:INFO:Declaring metric variables
2022-10-01 23:35:59,833:INFO:Importing untrained model
2022-10-01 23:35:59,834:INFO:Linear Regression Imported successfully
2022-10-01 23:35:59,834:INFO:Starting cross validation
2022-10-01 23:35:59,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:00,155:INFO:Calculating mean and std
2022-10-01 23:36:00,155:INFO:Creating metrics dataframe
2022-10-01 23:36:00,158:INFO:Uploading results into container
2022-10-01 23:36:00,159:INFO:Uploading model into container now
2022-10-01 23:36:00,159:INFO:master_model_container: 1
2022-10-01 23:36:00,159:INFO:display_container: 2
2022-10-01 23:36:00,159:INFO:LinearRegression(n_jobs=-1)
2022-10-01 23:36:00,159:INFO:create_model() successfully completed......................................
2022-10-01 23:36:00,250:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:00,250:INFO:Creating metrics dataframe
2022-10-01 23:36:00,254:INFO:Initializing Lasso Regression
2022-10-01 23:36:00,254:INFO:Total runtime is 0.00708473523457845 minutes
2022-10-01 23:36:00,254:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:00,254:INFO:Initializing create_model()
2022-10-01 23:36:00,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:00,255:INFO:Checking exceptions
2022-10-01 23:36:00,256:INFO:Importing libraries
2022-10-01 23:36:00,256:INFO:Copying training dataset
2022-10-01 23:36:00,258:INFO:Defining folds
2022-10-01 23:36:00,258:INFO:Declaring metric variables
2022-10-01 23:36:00,258:INFO:Importing untrained model
2022-10-01 23:36:00,258:INFO:Lasso Regression Imported successfully
2022-10-01 23:36:00,258:INFO:Starting cross validation
2022-10-01 23:36:00,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:00,482:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:00,522:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:00,542:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:00,550:INFO:Calculating mean and std
2022-10-01 23:36:00,551:INFO:Creating metrics dataframe
2022-10-01 23:36:00,553:INFO:Uploading results into container
2022-10-01 23:36:00,554:INFO:Uploading model into container now
2022-10-01 23:36:00,554:INFO:master_model_container: 2
2022-10-01 23:36:00,554:INFO:display_container: 2
2022-10-01 23:36:00,555:INFO:Lasso(random_state=123)
2022-10-01 23:36:00,555:INFO:create_model() successfully completed......................................
2022-10-01 23:36:00,645:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:00,645:INFO:Creating metrics dataframe
2022-10-01 23:36:00,649:INFO:Initializing Ridge Regression
2022-10-01 23:36:00,649:INFO:Total runtime is 0.01365671157836914 minutes
2022-10-01 23:36:00,649:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:00,650:INFO:Initializing create_model()
2022-10-01 23:36:00,650:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:00,650:INFO:Checking exceptions
2022-10-01 23:36:00,651:INFO:Importing libraries
2022-10-01 23:36:00,651:INFO:Copying training dataset
2022-10-01 23:36:00,653:INFO:Defining folds
2022-10-01 23:36:00,653:INFO:Declaring metric variables
2022-10-01 23:36:00,653:INFO:Importing untrained model
2022-10-01 23:36:00,653:INFO:Ridge Regression Imported successfully
2022-10-01 23:36:00,653:INFO:Starting cross validation
2022-10-01 23:36:00,654:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:00,668:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,688:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,707:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,725:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,743:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,761:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,780:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,798:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,816:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,834:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:36:00,842:INFO:Calculating mean and std
2022-10-01 23:36:00,843:INFO:Creating metrics dataframe
2022-10-01 23:36:00,845:INFO:Uploading results into container
2022-10-01 23:36:00,846:INFO:Uploading model into container now
2022-10-01 23:36:00,846:INFO:master_model_container: 3
2022-10-01 23:36:00,846:INFO:display_container: 2
2022-10-01 23:36:00,846:INFO:Ridge(random_state=123)
2022-10-01 23:36:00,846:INFO:create_model() successfully completed......................................
2022-10-01 23:36:00,934:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:00,934:INFO:Creating metrics dataframe
2022-10-01 23:36:00,938:INFO:Initializing Elastic Net
2022-10-01 23:36:00,938:INFO:Total runtime is 0.01848301887512207 minutes
2022-10-01 23:36:00,938:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:00,938:INFO:Initializing create_model()
2022-10-01 23:36:00,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:00,939:INFO:Checking exceptions
2022-10-01 23:36:00,940:INFO:Importing libraries
2022-10-01 23:36:00,940:INFO:Copying training dataset
2022-10-01 23:36:00,941:INFO:Defining folds
2022-10-01 23:36:00,941:INFO:Declaring metric variables
2022-10-01 23:36:00,941:INFO:Importing untrained model
2022-10-01 23:36:00,942:INFO:Elastic Net Imported successfully
2022-10-01 23:36:00,942:INFO:Starting cross validation
2022-10-01 23:36:00,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:01,068:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:01,124:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:01,133:INFO:Calculating mean and std
2022-10-01 23:36:01,133:INFO:Creating metrics dataframe
2022-10-01 23:36:01,136:INFO:Uploading results into container
2022-10-01 23:36:01,136:INFO:Uploading model into container now
2022-10-01 23:36:01,136:INFO:master_model_container: 4
2022-10-01 23:36:01,137:INFO:display_container: 2
2022-10-01 23:36:01,137:INFO:ElasticNet(random_state=123)
2022-10-01 23:36:01,137:INFO:create_model() successfully completed......................................
2022-10-01 23:36:01,226:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:01,226:INFO:Creating metrics dataframe
2022-10-01 23:36:01,230:INFO:Initializing Least Angle Regression
2022-10-01 23:36:01,230:INFO:Total runtime is 0.023340193430582683 minutes
2022-10-01 23:36:01,230:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:01,230:INFO:Initializing create_model()
2022-10-01 23:36:01,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:01,230:INFO:Checking exceptions
2022-10-01 23:36:01,231:INFO:Importing libraries
2022-10-01 23:36:01,231:INFO:Copying training dataset
2022-10-01 23:36:01,233:INFO:Defining folds
2022-10-01 23:36:01,233:INFO:Declaring metric variables
2022-10-01 23:36:01,233:INFO:Importing untrained model
2022-10-01 23:36:01,233:INFO:Least Angle Regression Imported successfully
2022-10-01 23:36:01,233:INFO:Starting cross validation
2022-10-01 23:36:01,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:01,342:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,362:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,382:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,401:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,420:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,439:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,457:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,475:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,500:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,521:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,530:INFO:Calculating mean and std
2022-10-01 23:36:01,531:INFO:Creating metrics dataframe
2022-10-01 23:36:01,533:INFO:Uploading results into container
2022-10-01 23:36:01,534:INFO:Uploading model into container now
2022-10-01 23:36:01,534:INFO:master_model_container: 5
2022-10-01 23:36:01,534:INFO:display_container: 2
2022-10-01 23:36:01,534:INFO:Lars(random_state=123)
2022-10-01 23:36:01,534:INFO:create_model() successfully completed......................................
2022-10-01 23:36:01,627:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:01,627:INFO:Creating metrics dataframe
2022-10-01 23:36:01,631:INFO:Initializing Lasso Least Angle Regression
2022-10-01 23:36:01,631:INFO:Total runtime is 0.030027198791503906 minutes
2022-10-01 23:36:01,631:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:01,632:INFO:Initializing create_model()
2022-10-01 23:36:01,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:01,632:INFO:Checking exceptions
2022-10-01 23:36:01,633:INFO:Importing libraries
2022-10-01 23:36:01,633:INFO:Copying training dataset
2022-10-01 23:36:01,635:INFO:Defining folds
2022-10-01 23:36:01,635:INFO:Declaring metric variables
2022-10-01 23:36:01,635:INFO:Importing untrained model
2022-10-01 23:36:01,635:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 23:36:01,636:INFO:Starting cross validation
2022-10-01 23:36:01,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:01,647:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,666:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,686:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,704:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,723:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,742:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,761:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,780:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,799:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,817:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:36:01,825:INFO:Calculating mean and std
2022-10-01 23:36:01,826:INFO:Creating metrics dataframe
2022-10-01 23:36:01,829:INFO:Uploading results into container
2022-10-01 23:36:01,829:INFO:Uploading model into container now
2022-10-01 23:36:01,829:INFO:master_model_container: 6
2022-10-01 23:36:01,829:INFO:display_container: 2
2022-10-01 23:36:01,830:INFO:LassoLars(random_state=123)
2022-10-01 23:36:01,830:INFO:create_model() successfully completed......................................
2022-10-01 23:36:01,920:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:01,920:INFO:Creating metrics dataframe
2022-10-01 23:36:01,924:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 23:36:01,924:INFO:Total runtime is 0.034906713167826335 minutes
2022-10-01 23:36:01,924:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:01,924:INFO:Initializing create_model()
2022-10-01 23:36:01,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:01,924:INFO:Checking exceptions
2022-10-01 23:36:01,925:INFO:Importing libraries
2022-10-01 23:36:01,925:INFO:Copying training dataset
2022-10-01 23:36:01,927:INFO:Defining folds
2022-10-01 23:36:01,927:INFO:Declaring metric variables
2022-10-01 23:36:01,927:INFO:Importing untrained model
2022-10-01 23:36:01,927:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 23:36:01,927:INFO:Starting cross validation
2022-10-01 23:36:01,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:01,938:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,958:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:01,983:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,002:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,020:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,038:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,056:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,075:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,093:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,112:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:36:02,121:INFO:Calculating mean and std
2022-10-01 23:36:02,122:INFO:Creating metrics dataframe
2022-10-01 23:36:02,125:INFO:Uploading results into container
2022-10-01 23:36:02,125:INFO:Uploading model into container now
2022-10-01 23:36:02,126:INFO:master_model_container: 7
2022-10-01 23:36:02,126:INFO:display_container: 2
2022-10-01 23:36:02,126:INFO:OrthogonalMatchingPursuit()
2022-10-01 23:36:02,126:INFO:create_model() successfully completed......................................
2022-10-01 23:36:02,214:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:02,214:INFO:Creating metrics dataframe
2022-10-01 23:36:02,218:INFO:Initializing Bayesian Ridge
2022-10-01 23:36:02,219:INFO:Total runtime is 0.03983475764592489 minutes
2022-10-01 23:36:02,219:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:02,219:INFO:Initializing create_model()
2022-10-01 23:36:02,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:02,219:INFO:Checking exceptions
2022-10-01 23:36:02,220:INFO:Importing libraries
2022-10-01 23:36:02,220:INFO:Copying training dataset
2022-10-01 23:36:02,222:INFO:Defining folds
2022-10-01 23:36:02,222:INFO:Declaring metric variables
2022-10-01 23:36:02,222:INFO:Importing untrained model
2022-10-01 23:36:02,223:INFO:Bayesian Ridge Imported successfully
2022-10-01 23:36:02,223:INFO:Starting cross validation
2022-10-01 23:36:02,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:02,409:INFO:Calculating mean and std
2022-10-01 23:36:02,410:INFO:Creating metrics dataframe
2022-10-01 23:36:02,412:INFO:Uploading results into container
2022-10-01 23:36:02,413:INFO:Uploading model into container now
2022-10-01 23:36:02,413:INFO:master_model_container: 8
2022-10-01 23:36:02,413:INFO:display_container: 2
2022-10-01 23:36:02,413:INFO:BayesianRidge()
2022-10-01 23:36:02,413:INFO:create_model() successfully completed......................................
2022-10-01 23:36:02,525:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:02,526:INFO:Creating metrics dataframe
2022-10-01 23:36:02,529:INFO:Initializing Passive Aggressive Regressor
2022-10-01 23:36:02,529:INFO:Total runtime is 0.044997270901997885 minutes
2022-10-01 23:36:02,530:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:02,530:INFO:Initializing create_model()
2022-10-01 23:36:02,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:02,530:INFO:Checking exceptions
2022-10-01 23:36:02,531:INFO:Importing libraries
2022-10-01 23:36:02,531:INFO:Copying training dataset
2022-10-01 23:36:02,533:INFO:Defining folds
2022-10-01 23:36:02,533:INFO:Declaring metric variables
2022-10-01 23:36:02,533:INFO:Importing untrained model
2022-10-01 23:36:02,534:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 23:36:02,534:INFO:Starting cross validation
2022-10-01 23:36:02,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:02,725:INFO:Calculating mean and std
2022-10-01 23:36:02,726:INFO:Creating metrics dataframe
2022-10-01 23:36:02,729:INFO:Uploading results into container
2022-10-01 23:36:02,729:INFO:Uploading model into container now
2022-10-01 23:36:02,729:INFO:master_model_container: 9
2022-10-01 23:36:02,729:INFO:display_container: 2
2022-10-01 23:36:02,730:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 23:36:02,730:INFO:create_model() successfully completed......................................
2022-10-01 23:36:02,818:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:02,818:INFO:Creating metrics dataframe
2022-10-01 23:36:02,822:INFO:Initializing Huber Regressor
2022-10-01 23:36:02,822:INFO:Total runtime is 0.049875899155934655 minutes
2022-10-01 23:36:02,822:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:02,822:INFO:Initializing create_model()
2022-10-01 23:36:02,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:02,822:INFO:Checking exceptions
2022-10-01 23:36:02,823:INFO:Importing libraries
2022-10-01 23:36:02,823:INFO:Copying training dataset
2022-10-01 23:36:02,825:INFO:Defining folds
2022-10-01 23:36:02,825:INFO:Declaring metric variables
2022-10-01 23:36:02,825:INFO:Importing untrained model
2022-10-01 23:36:02,825:INFO:Huber Regressor Imported successfully
2022-10-01 23:36:02,826:INFO:Starting cross validation
2022-10-01 23:36:02,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:03,090:INFO:Calculating mean and std
2022-10-01 23:36:03,091:INFO:Creating metrics dataframe
2022-10-01 23:36:03,093:INFO:Uploading results into container
2022-10-01 23:36:03,094:INFO:Uploading model into container now
2022-10-01 23:36:03,094:INFO:master_model_container: 10
2022-10-01 23:36:03,094:INFO:display_container: 2
2022-10-01 23:36:03,094:INFO:HuberRegressor()
2022-10-01 23:36:03,094:INFO:create_model() successfully completed......................................
2022-10-01 23:36:03,190:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:03,191:INFO:Creating metrics dataframe
2022-10-01 23:36:03,195:INFO:Initializing K Neighbors Regressor
2022-10-01 23:36:03,195:INFO:Total runtime is 0.05609843333562216 minutes
2022-10-01 23:36:03,195:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:03,195:INFO:Initializing create_model()
2022-10-01 23:36:03,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:03,195:INFO:Checking exceptions
2022-10-01 23:36:03,196:INFO:Importing libraries
2022-10-01 23:36:03,197:INFO:Copying training dataset
2022-10-01 23:36:03,198:INFO:Defining folds
2022-10-01 23:36:03,199:INFO:Declaring metric variables
2022-10-01 23:36:03,199:INFO:Importing untrained model
2022-10-01 23:36:03,199:INFO:K Neighbors Regressor Imported successfully
2022-10-01 23:36:03,199:INFO:Starting cross validation
2022-10-01 23:36:03,200:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:06,586:INFO:Calculating mean and std
2022-10-01 23:36:06,587:INFO:Creating metrics dataframe
2022-10-01 23:36:06,589:INFO:Uploading results into container
2022-10-01 23:36:06,590:INFO:Uploading model into container now
2022-10-01 23:36:06,590:INFO:master_model_container: 11
2022-10-01 23:36:06,590:INFO:display_container: 2
2022-10-01 23:36:06,591:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 23:36:06,591:INFO:create_model() successfully completed......................................
2022-10-01 23:36:06,690:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:06,690:INFO:Creating metrics dataframe
2022-10-01 23:36:06,695:INFO:Initializing Decision Tree Regressor
2022-10-01 23:36:06,695:INFO:Total runtime is 0.11442978779474894 minutes
2022-10-01 23:36:06,695:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:06,695:INFO:Initializing create_model()
2022-10-01 23:36:06,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:06,695:INFO:Checking exceptions
2022-10-01 23:36:06,697:INFO:Importing libraries
2022-10-01 23:36:06,697:INFO:Copying training dataset
2022-10-01 23:36:06,699:INFO:Defining folds
2022-10-01 23:36:06,700:INFO:Declaring metric variables
2022-10-01 23:36:06,700:INFO:Importing untrained model
2022-10-01 23:36:06,700:INFO:Decision Tree Regressor Imported successfully
2022-10-01 23:36:06,700:INFO:Starting cross validation
2022-10-01 23:36:06,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:06,904:INFO:Calculating mean and std
2022-10-01 23:36:06,905:INFO:Creating metrics dataframe
2022-10-01 23:36:06,907:INFO:Uploading results into container
2022-10-01 23:36:06,907:INFO:Uploading model into container now
2022-10-01 23:36:06,908:INFO:master_model_container: 12
2022-10-01 23:36:06,908:INFO:display_container: 2
2022-10-01 23:36:06,908:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 23:36:06,908:INFO:create_model() successfully completed......................................
2022-10-01 23:36:07,001:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:07,001:INFO:Creating metrics dataframe
2022-10-01 23:36:07,005:INFO:Initializing Random Forest Regressor
2022-10-01 23:36:07,005:INFO:Total runtime is 0.11959911187489827 minutes
2022-10-01 23:36:07,006:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:07,006:INFO:Initializing create_model()
2022-10-01 23:36:07,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:07,006:INFO:Checking exceptions
2022-10-01 23:36:07,007:INFO:Importing libraries
2022-10-01 23:36:07,007:INFO:Copying training dataset
2022-10-01 23:36:07,009:INFO:Defining folds
2022-10-01 23:36:07,009:INFO:Declaring metric variables
2022-10-01 23:36:07,009:INFO:Importing untrained model
2022-10-01 23:36:07,010:INFO:Random Forest Regressor Imported successfully
2022-10-01 23:36:07,010:INFO:Starting cross validation
2022-10-01 23:36:07,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:08,252:INFO:Calculating mean and std
2022-10-01 23:36:08,253:INFO:Creating metrics dataframe
2022-10-01 23:36:08,256:INFO:Uploading results into container
2022-10-01 23:36:08,256:INFO:Uploading model into container now
2022-10-01 23:36:08,257:INFO:master_model_container: 13
2022-10-01 23:36:08,257:INFO:display_container: 2
2022-10-01 23:36:08,257:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:36:08,257:INFO:create_model() successfully completed......................................
2022-10-01 23:36:08,346:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:08,346:INFO:Creating metrics dataframe
2022-10-01 23:36:08,350:INFO:Initializing Extra Trees Regressor
2022-10-01 23:36:08,350:INFO:Total runtime is 0.14201852083206176 minutes
2022-10-01 23:36:08,350:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:08,351:INFO:Initializing create_model()
2022-10-01 23:36:08,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:08,351:INFO:Checking exceptions
2022-10-01 23:36:08,352:INFO:Importing libraries
2022-10-01 23:36:08,352:INFO:Copying training dataset
2022-10-01 23:36:08,354:INFO:Defining folds
2022-10-01 23:36:08,354:INFO:Declaring metric variables
2022-10-01 23:36:08,354:INFO:Importing untrained model
2022-10-01 23:36:08,354:INFO:Extra Trees Regressor Imported successfully
2022-10-01 23:36:08,355:INFO:Starting cross validation
2022-10-01 23:36:08,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:09,543:INFO:Calculating mean and std
2022-10-01 23:36:09,544:INFO:Creating metrics dataframe
2022-10-01 23:36:09,546:INFO:Uploading results into container
2022-10-01 23:36:09,546:INFO:Uploading model into container now
2022-10-01 23:36:09,547:INFO:master_model_container: 14
2022-10-01 23:36:09,547:INFO:display_container: 2
2022-10-01 23:36:09,547:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:36:09,547:INFO:create_model() successfully completed......................................
2022-10-01 23:36:09,636:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:09,637:INFO:Creating metrics dataframe
2022-10-01 23:36:09,641:INFO:Initializing AdaBoost Regressor
2022-10-01 23:36:09,641:INFO:Total runtime is 0.16353930234909056 minutes
2022-10-01 23:36:09,641:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:09,641:INFO:Initializing create_model()
2022-10-01 23:36:09,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:09,641:INFO:Checking exceptions
2022-10-01 23:36:09,642:INFO:Importing libraries
2022-10-01 23:36:09,642:INFO:Copying training dataset
2022-10-01 23:36:09,644:INFO:Defining folds
2022-10-01 23:36:09,644:INFO:Declaring metric variables
2022-10-01 23:36:09,644:INFO:Importing untrained model
2022-10-01 23:36:09,645:INFO:AdaBoost Regressor Imported successfully
2022-10-01 23:36:09,645:INFO:Starting cross validation
2022-10-01 23:36:09,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:10,330:INFO:Calculating mean and std
2022-10-01 23:36:10,331:INFO:Creating metrics dataframe
2022-10-01 23:36:10,334:INFO:Uploading results into container
2022-10-01 23:36:10,334:INFO:Uploading model into container now
2022-10-01 23:36:10,335:INFO:master_model_container: 15
2022-10-01 23:36:10,335:INFO:display_container: 2
2022-10-01 23:36:10,335:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 23:36:10,335:INFO:create_model() successfully completed......................................
2022-10-01 23:36:10,427:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:10,427:INFO:Creating metrics dataframe
2022-10-01 23:36:10,431:INFO:Initializing Gradient Boosting Regressor
2022-10-01 23:36:10,431:INFO:Total runtime is 0.17669402758280434 minutes
2022-10-01 23:36:10,431:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:10,432:INFO:Initializing create_model()
2022-10-01 23:36:10,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:10,432:INFO:Checking exceptions
2022-10-01 23:36:10,433:INFO:Importing libraries
2022-10-01 23:36:10,433:INFO:Copying training dataset
2022-10-01 23:36:10,435:INFO:Defining folds
2022-10-01 23:36:10,435:INFO:Declaring metric variables
2022-10-01 23:36:10,435:INFO:Importing untrained model
2022-10-01 23:36:10,435:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 23:36:10,435:INFO:Starting cross validation
2022-10-01 23:36:10,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:11,049:INFO:Calculating mean and std
2022-10-01 23:36:11,049:INFO:Creating metrics dataframe
2022-10-01 23:36:11,052:INFO:Uploading results into container
2022-10-01 23:36:11,052:INFO:Uploading model into container now
2022-10-01 23:36:11,053:INFO:master_model_container: 16
2022-10-01 23:36:11,053:INFO:display_container: 2
2022-10-01 23:36:11,053:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 23:36:11,053:INFO:create_model() successfully completed......................................
2022-10-01 23:36:11,146:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:11,146:INFO:Creating metrics dataframe
2022-10-01 23:36:11,150:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 23:36:11,150:INFO:Total runtime is 0.18868000507354735 minutes
2022-10-01 23:36:11,150:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:11,150:INFO:Initializing create_model()
2022-10-01 23:36:11,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:11,150:INFO:Checking exceptions
2022-10-01 23:36:11,151:INFO:Importing libraries
2022-10-01 23:36:11,151:INFO:Copying training dataset
2022-10-01 23:36:11,153:INFO:Defining folds
2022-10-01 23:36:11,153:INFO:Declaring metric variables
2022-10-01 23:36:11,154:INFO:Importing untrained model
2022-10-01 23:36:11,154:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 23:36:11,154:INFO:Starting cross validation
2022-10-01 23:36:11,155:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:16,069:INFO:Calculating mean and std
2022-10-01 23:36:16,069:INFO:Creating metrics dataframe
2022-10-01 23:36:16,072:INFO:Uploading results into container
2022-10-01 23:36:16,073:INFO:Uploading model into container now
2022-10-01 23:36:16,073:INFO:master_model_container: 17
2022-10-01 23:36:16,073:INFO:display_container: 2
2022-10-01 23:36:16,074:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 23:36:16,074:INFO:create_model() successfully completed......................................
2022-10-01 23:36:16,180:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:16,180:INFO:Creating metrics dataframe
2022-10-01 23:36:16,185:INFO:Initializing Dummy Regressor
2022-10-01 23:36:16,185:INFO:Total runtime is 0.272597324848175 minutes
2022-10-01 23:36:16,185:INFO:SubProcess create_model() called ==================================
2022-10-01 23:36:16,185:INFO:Initializing create_model()
2022-10-01 23:36:16,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012362E1D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:16,185:INFO:Checking exceptions
2022-10-01 23:36:16,186:INFO:Importing libraries
2022-10-01 23:36:16,186:INFO:Copying training dataset
2022-10-01 23:36:16,188:INFO:Defining folds
2022-10-01 23:36:16,188:INFO:Declaring metric variables
2022-10-01 23:36:16,189:INFO:Importing untrained model
2022-10-01 23:36:16,189:INFO:Dummy Regressor Imported successfully
2022-10-01 23:36:16,189:INFO:Starting cross validation
2022-10-01 23:36:16,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:16,354:INFO:Calculating mean and std
2022-10-01 23:36:16,355:INFO:Creating metrics dataframe
2022-10-01 23:36:16,357:INFO:Uploading results into container
2022-10-01 23:36:16,358:INFO:Uploading model into container now
2022-10-01 23:36:16,358:INFO:master_model_container: 18
2022-10-01 23:36:16,358:INFO:display_container: 2
2022-10-01 23:36:16,358:INFO:DummyRegressor()
2022-10-01 23:36:16,358:INFO:create_model() successfully completed......................................
2022-10-01 23:36:16,449:INFO:SubProcess create_model() end ==================================
2022-10-01 23:36:16,449:INFO:Creating metrics dataframe
2022-10-01 23:36:16,455:INFO:Initializing create_model()
2022-10-01 23:36:16,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:16,455:INFO:Checking exceptions
2022-10-01 23:36:16,456:INFO:Importing libraries
2022-10-01 23:36:16,457:INFO:Copying training dataset
2022-10-01 23:36:16,458:INFO:Defining folds
2022-10-01 23:36:16,458:INFO:Declaring metric variables
2022-10-01 23:36:16,458:INFO:Importing untrained model
2022-10-01 23:36:16,458:INFO:Declaring custom model
2022-10-01 23:36:16,459:INFO:Lasso Regression Imported successfully
2022-10-01 23:36:16,459:INFO:Cross validation set to False
2022-10-01 23:36:16,459:INFO:Fitting Model
2022-10-01 23:36:16,469:INFO:Lasso(random_state=123)
2022-10-01 23:36:16,469:INFO:create_model() successfully completed......................................
2022-10-01 23:36:16,574:INFO:master_model_container: 18
2022-10-01 23:36:16,574:INFO:display_container: 2
2022-10-01 23:36:16,575:INFO:Lasso(random_state=123)
2022-10-01 23:36:16,575:INFO:compare_models() successfully completed......................................
2022-10-01 23:36:16,575:INFO:Initializing create_model()
2022-10-01 23:36:16,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:36:16,575:INFO:Checking exceptions
2022-10-01 23:36:16,578:INFO:Importing libraries
2022-10-01 23:36:16,578:INFO:Copying training dataset
2022-10-01 23:36:16,580:INFO:Defining folds
2022-10-01 23:36:16,580:INFO:Declaring metric variables
2022-10-01 23:36:16,580:INFO:Importing untrained model
2022-10-01 23:36:16,580:INFO:Declaring custom model
2022-10-01 23:36:16,580:INFO:Lasso Regression Imported successfully
2022-10-01 23:36:16,581:INFO:Starting cross validation
2022-10-01 23:36:16,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:36:16,744:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:16,780:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:16,798:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:36:16,806:INFO:Calculating mean and std
2022-10-01 23:36:16,807:INFO:Creating metrics dataframe
2022-10-01 23:36:16,808:INFO:Finalizing model
2022-10-01 23:36:16,819:INFO:Uploading results into container
2022-10-01 23:36:16,820:INFO:Uploading model into container now
2022-10-01 23:36:16,829:INFO:master_model_container: 19
2022-10-01 23:36:16,829:INFO:display_container: 3
2022-10-01 23:36:16,829:INFO:Lasso(random_state=123)
2022-10-01 23:36:16,830:INFO:create_model() successfully completed......................................
2022-10-01 23:36:16,977:INFO:Initializing predict_model()
2022-10-01 23:36:16,977:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001235A67F3D0>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001235A861630>)
2022-10-01 23:36:16,977:INFO:Checking exceptions
2022-10-01 23:36:16,977:INFO:Preloading libraries
2022-10-01 23:36:16,977:INFO:Set up data.
2022-10-01 23:36:16,981:INFO:Set up index.
2022-10-01 23:36:17,123:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:56: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 23:39:57,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:39:57,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:39:57,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:39:57,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:39:58,315:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 23:39:59,101:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 23:40:00,101:INFO:PyCaret RegressionExperiment
2022-10-01 23:40:00,101:INFO:Logging name: reg-default-name
2022-10-01 23:40:00,101:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 23:40:00,101:INFO:version 3.0.0.rc4
2022-10-01 23:40:00,101:INFO:Initializing setup()
2022-10-01 23:40:00,101:INFO:self.USI: 6642
2022-10-01 23:40:00,101:INFO:self.variable_keys: {'idx', 'variable_keys', 'fold_shuffle_param', 'fold_generator', 'exp_id', 'USI', '_all_metrics', '_ml_usecase', 'html_param', 'pipeline', 'logging_param', '_gpu_n_jobs_param', 'X_test', 'master_model_container', 'log_plots_param', 'transform_target_method_param', 'fold_groups_param', 'memory', 'transform_target_param', 'y_train', 'seed', 'data', 'exp_name_log', '_all_models_internal', '_available_plots', 'X_train', 'y', 'target_param', 'y_test', 'X', 'display_container', 'gpu_param', '_all_models', 'n_jobs_param'}
2022-10-01 23:40:00,101:INFO:Checking environment
2022-10-01 23:40:00,101:INFO:python_version: 3.10.7
2022-10-01 23:40:00,101:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 23:40:00,101:INFO:machine: AMD64
2022-10-01 23:40:00,113:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 23:40:00,113:INFO:Memory: svmem(total=8497213440, available=2638352384, percent=69.0, used=5858861056, free=2638352384)
2022-10-01 23:40:00,113:INFO:Physical Core: 6
2022-10-01 23:40:00,113:INFO:Logical Core: 12
2022-10-01 23:40:00,113:INFO:Checking libraries
2022-10-01 23:40:00,113:INFO:System:
2022-10-01 23:40:00,113:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 23:40:00,113:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 23:40:00,113:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 23:40:00,113:INFO:PyCaret required dependencies:
2022-10-01 23:40:00,113:INFO:                 pip: 22.2.2
2022-10-01 23:40:00,113:INFO:          setuptools: 63.2.0
2022-10-01 23:40:00,113:INFO:             pycaret: 3.0.0rc4
2022-10-01 23:40:00,113:INFO:             IPython: 8.5.0
2022-10-01 23:40:00,113:INFO:          ipywidgets: 8.0.2
2022-10-01 23:40:00,113:INFO:                tqdm: 4.64.1
2022-10-01 23:40:00,113:INFO:               numpy: 1.22.4
2022-10-01 23:40:00,113:INFO:              pandas: 1.4.4
2022-10-01 23:40:00,114:INFO:              jinja2: 3.1.2
2022-10-01 23:40:00,114:INFO:               scipy: 1.8.1
2022-10-01 23:40:00,114:INFO:              joblib: 1.2.0
2022-10-01 23:40:00,114:INFO:             sklearn: 1.1.2
2022-10-01 23:40:00,114:INFO:                pyod: 1.0.5
2022-10-01 23:40:00,114:INFO:            imblearn: 0.9.1
2022-10-01 23:40:00,114:INFO:   category_encoders: 2.5.0
2022-10-01 23:40:00,114:INFO:            lightgbm: 3.3.2
2022-10-01 23:40:00,114:INFO:               numba: 0.55.2
2022-10-01 23:40:00,114:INFO:            requests: 2.28.1
2022-10-01 23:40:00,114:INFO:          matplotlib: 3.6.0
2022-10-01 23:40:00,114:INFO:          scikitplot: 0.3.7
2022-10-01 23:40:00,114:INFO:         yellowbrick: 1.5
2022-10-01 23:40:00,114:INFO:              plotly: 5.10.0
2022-10-01 23:40:00,114:INFO:             kaleido: 0.2.1
2022-10-01 23:40:00,114:INFO:         statsmodels: 0.13.2
2022-10-01 23:40:00,114:INFO:              sktime: 0.13.4
2022-10-01 23:40:00,114:INFO:               tbats: 1.1.0
2022-10-01 23:40:00,114:INFO:            pmdarima: 1.8.5
2022-10-01 23:40:00,114:INFO:              psutil: 5.9.2
2022-10-01 23:40:00,114:INFO:PyCaret optional dependencies:
2022-10-01 23:40:00,128:INFO:                shap: Not installed
2022-10-01 23:40:00,128:INFO:           interpret: Not installed
2022-10-01 23:40:00,128:INFO:                umap: Not installed
2022-10-01 23:40:00,128:INFO:    pandas_profiling: Not installed
2022-10-01 23:40:00,128:INFO:  explainerdashboard: Not installed
2022-10-01 23:40:00,128:INFO:             autoviz: Not installed
2022-10-01 23:40:00,128:INFO:           fairlearn: Not installed
2022-10-01 23:40:00,128:INFO:             xgboost: Not installed
2022-10-01 23:40:00,128:INFO:            catboost: Not installed
2022-10-01 23:40:00,128:INFO:              kmodes: Not installed
2022-10-01 23:40:00,128:INFO:             mlxtend: Not installed
2022-10-01 23:40:00,128:INFO:       statsforecast: Not installed
2022-10-01 23:40:00,128:INFO:        tune_sklearn: Not installed
2022-10-01 23:40:00,129:INFO:                 ray: Not installed
2022-10-01 23:40:00,129:INFO:            hyperopt: Not installed
2022-10-01 23:40:00,129:INFO:              optuna: Not installed
2022-10-01 23:40:00,129:INFO:               skopt: Not installed
2022-10-01 23:40:00,129:INFO:              mlflow: Not installed
2022-10-01 23:40:00,129:INFO:              gradio: Not installed
2022-10-01 23:40:00,129:INFO:             fastapi: Not installed
2022-10-01 23:40:00,129:INFO:             uvicorn: Not installed
2022-10-01 23:40:00,129:INFO:              m2cgen: Not installed
2022-10-01 23:40:00,129:INFO:           evidently: Not installed
2022-10-01 23:40:00,129:INFO:                nltk: Not installed
2022-10-01 23:40:00,129:INFO:            pyLDAvis: Not installed
2022-10-01 23:40:00,129:INFO:              gensim: Not installed
2022-10-01 23:40:00,129:INFO:               spacy: Not installed
2022-10-01 23:40:00,129:INFO:           wordcloud: Not installed
2022-10-01 23:40:00,129:INFO:            textblob: Not installed
2022-10-01 23:40:00,129:INFO:               fugue: Not installed
2022-10-01 23:40:00,129:INFO:           streamlit: Not installed
2022-10-01 23:40:00,129:INFO:             prophet: Not installed
2022-10-01 23:40:00,129:INFO:None
2022-10-01 23:40:00,129:INFO:Set up GPU usage.
2022-10-01 23:40:00,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,130:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 23:40:00,130:INFO:Set up data.
2022-10-01 23:40:00,133:INFO:Set up train/test split.
2022-10-01 23:40:00,135:INFO:Set up index.
2022-10-01 23:40:00,135:INFO:Set up folding strategy.
2022-10-01 23:40:00,135:INFO:Assigning column types.
2022-10-01 23:40:00,138:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 23:40:00,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,138:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,142:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,199:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:00,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:00,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,833:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,840:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,847:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,847:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:00,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:00,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:01,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:01,209:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 23:40:01,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,216:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,222:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,222:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,306:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,348:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:01,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:01,587:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,594:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,683:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:01,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:01,963:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 23:40:01,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:01,978:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:40:01,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:02,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:02,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,487:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,487:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:02,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:02,711:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 23:40:02,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,811:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,811:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:02,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:02,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:03,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:03,118:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,118:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,214:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:03,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,260:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:40:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:03,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:03,497:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 23:40:03,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,593:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:03,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:03,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:03,866:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,866:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:03,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:40:03,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:04,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:04,249:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 23:40:04,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,389:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:04,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:04,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:04,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:05,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:05,031:INFO:Preparing preprocessing pipeline...
2022-10-01 23:40:05,032:INFO:Set up simple imputation.
2022-10-01 23:40:05,032:INFO:Set up variance threshold.
2022-10-01 23:40:05,048:INFO:Finished creating preprocessing pipeline.
2022-10-01 23:40:05,055:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 23:40:05,055:INFO:Creating final display dataframe.
2022-10-01 23:40:05,137:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              6642
2022-10-01 23:40:05,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:05,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:05,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:40:05,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:05,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:40:05,883:INFO:setup() successfully completed in 5.78s...............
2022-10-01 23:40:05,883:INFO:Initializing compare_models()
2022-10-01 23:40:05,883:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 23:40:05,883:INFO:Checking exceptions
2022-10-01 23:40:05,885:INFO:Preparing display monitor
2022-10-01 23:40:05,888:INFO:Initializing Linear Regression
2022-10-01 23:40:05,888:INFO:Total runtime is 0.0 minutes
2022-10-01 23:40:05,888:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:05,889:INFO:Initializing create_model()
2022-10-01 23:40:05,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:05,889:INFO:Checking exceptions
2022-10-01 23:40:05,890:INFO:Importing libraries
2022-10-01 23:40:05,890:INFO:Copying training dataset
2022-10-01 23:40:05,892:INFO:Defining folds
2022-10-01 23:40:05,892:INFO:Declaring metric variables
2022-10-01 23:40:05,892:INFO:Importing untrained model
2022-10-01 23:40:05,893:INFO:Linear Regression Imported successfully
2022-10-01 23:40:05,893:INFO:Starting cross validation
2022-10-01 23:40:05,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:06,102:INFO:Calculating mean and std
2022-10-01 23:40:06,103:INFO:Creating metrics dataframe
2022-10-01 23:40:06,105:INFO:Uploading results into container
2022-10-01 23:40:06,106:INFO:Uploading model into container now
2022-10-01 23:40:06,106:INFO:master_model_container: 1
2022-10-01 23:40:06,106:INFO:display_container: 2
2022-10-01 23:40:06,106:INFO:LinearRegression(n_jobs=-1)
2022-10-01 23:40:06,106:INFO:create_model() successfully completed......................................
2022-10-01 23:40:06,191:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:06,191:INFO:Creating metrics dataframe
2022-10-01 23:40:06,194:INFO:Initializing Lasso Regression
2022-10-01 23:40:06,194:INFO:Total runtime is 0.005104355017344157 minutes
2022-10-01 23:40:06,195:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:06,195:INFO:Initializing create_model()
2022-10-01 23:40:06,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:06,195:INFO:Checking exceptions
2022-10-01 23:40:06,196:INFO:Importing libraries
2022-10-01 23:40:06,196:INFO:Copying training dataset
2022-10-01 23:40:06,198:INFO:Defining folds
2022-10-01 23:40:06,198:INFO:Declaring metric variables
2022-10-01 23:40:06,198:INFO:Importing untrained model
2022-10-01 23:40:06,198:INFO:Lasso Regression Imported successfully
2022-10-01 23:40:06,198:INFO:Starting cross validation
2022-10-01 23:40:06,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:06,319:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:06,355:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:06,373:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:06,380:INFO:Calculating mean and std
2022-10-01 23:40:06,381:INFO:Creating metrics dataframe
2022-10-01 23:40:06,383:INFO:Uploading results into container
2022-10-01 23:40:06,384:INFO:Uploading model into container now
2022-10-01 23:40:06,384:INFO:master_model_container: 2
2022-10-01 23:40:06,384:INFO:display_container: 2
2022-10-01 23:40:06,384:INFO:Lasso(random_state=123)
2022-10-01 23:40:06,384:INFO:create_model() successfully completed......................................
2022-10-01 23:40:06,465:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:06,465:INFO:Creating metrics dataframe
2022-10-01 23:40:06,469:INFO:Initializing Ridge Regression
2022-10-01 23:40:06,469:INFO:Total runtime is 0.009691961606343587 minutes
2022-10-01 23:40:06,469:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:06,469:INFO:Initializing create_model()
2022-10-01 23:40:06,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:06,469:INFO:Checking exceptions
2022-10-01 23:40:06,470:INFO:Importing libraries
2022-10-01 23:40:06,470:INFO:Copying training dataset
2022-10-01 23:40:06,472:INFO:Defining folds
2022-10-01 23:40:06,472:INFO:Declaring metric variables
2022-10-01 23:40:06,472:INFO:Importing untrained model
2022-10-01 23:40:06,472:INFO:Ridge Regression Imported successfully
2022-10-01 23:40:06,473:INFO:Starting cross validation
2022-10-01 23:40:06,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:06,485:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,502:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,519:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,536:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,553:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,570:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,586:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,603:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,620:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,636:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:40:06,643:INFO:Calculating mean and std
2022-10-01 23:40:06,644:INFO:Creating metrics dataframe
2022-10-01 23:40:06,646:INFO:Uploading results into container
2022-10-01 23:40:06,647:INFO:Uploading model into container now
2022-10-01 23:40:06,647:INFO:master_model_container: 3
2022-10-01 23:40:06,647:INFO:display_container: 2
2022-10-01 23:40:06,647:INFO:Ridge(random_state=123)
2022-10-01 23:40:06,647:INFO:create_model() successfully completed......................................
2022-10-01 23:40:06,730:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:06,730:INFO:Creating metrics dataframe
2022-10-01 23:40:06,734:INFO:Initializing Elastic Net
2022-10-01 23:40:06,734:INFO:Total runtime is 0.014104298750559489 minutes
2022-10-01 23:40:06,734:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:06,734:INFO:Initializing create_model()
2022-10-01 23:40:06,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:06,734:INFO:Checking exceptions
2022-10-01 23:40:06,735:INFO:Importing libraries
2022-10-01 23:40:06,736:INFO:Copying training dataset
2022-10-01 23:40:06,737:INFO:Defining folds
2022-10-01 23:40:06,737:INFO:Declaring metric variables
2022-10-01 23:40:06,737:INFO:Importing untrained model
2022-10-01 23:40:06,738:INFO:Elastic Net Imported successfully
2022-10-01 23:40:06,738:INFO:Starting cross validation
2022-10-01 23:40:06,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:06,855:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:06,909:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:06,916:INFO:Calculating mean and std
2022-10-01 23:40:06,917:INFO:Creating metrics dataframe
2022-10-01 23:40:06,919:INFO:Uploading results into container
2022-10-01 23:40:06,920:INFO:Uploading model into container now
2022-10-01 23:40:06,920:INFO:master_model_container: 4
2022-10-01 23:40:06,920:INFO:display_container: 2
2022-10-01 23:40:06,920:INFO:ElasticNet(random_state=123)
2022-10-01 23:40:06,920:INFO:create_model() successfully completed......................................
2022-10-01 23:40:07,000:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:07,000:INFO:Creating metrics dataframe
2022-10-01 23:40:07,004:INFO:Initializing Least Angle Regression
2022-10-01 23:40:07,004:INFO:Total runtime is 0.018608693281809488 minutes
2022-10-01 23:40:07,004:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:07,004:INFO:Initializing create_model()
2022-10-01 23:40:07,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:07,004:INFO:Checking exceptions
2022-10-01 23:40:07,005:INFO:Importing libraries
2022-10-01 23:40:07,005:INFO:Copying training dataset
2022-10-01 23:40:07,007:INFO:Defining folds
2022-10-01 23:40:07,007:INFO:Declaring metric variables
2022-10-01 23:40:07,007:INFO:Importing untrained model
2022-10-01 23:40:07,007:INFO:Least Angle Regression Imported successfully
2022-10-01 23:40:07,008:INFO:Starting cross validation
2022-10-01 23:40:07,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:07,019:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,036:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,054:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,071:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,094:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,113:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,130:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,148:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,166:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,183:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,192:INFO:Calculating mean and std
2022-10-01 23:40:07,192:INFO:Creating metrics dataframe
2022-10-01 23:40:07,195:INFO:Uploading results into container
2022-10-01 23:40:07,195:INFO:Uploading model into container now
2022-10-01 23:40:07,195:INFO:master_model_container: 5
2022-10-01 23:40:07,195:INFO:display_container: 2
2022-10-01 23:40:07,196:INFO:Lars(random_state=123)
2022-10-01 23:40:07,196:INFO:create_model() successfully completed......................................
2022-10-01 23:40:07,275:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:07,275:INFO:Creating metrics dataframe
2022-10-01 23:40:07,279:INFO:Initializing Lasso Least Angle Regression
2022-10-01 23:40:07,279:INFO:Total runtime is 0.023186345895131428 minutes
2022-10-01 23:40:07,280:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:07,280:INFO:Initializing create_model()
2022-10-01 23:40:07,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:07,280:INFO:Checking exceptions
2022-10-01 23:40:07,281:INFO:Importing libraries
2022-10-01 23:40:07,281:INFO:Copying training dataset
2022-10-01 23:40:07,283:INFO:Defining folds
2022-10-01 23:40:07,283:INFO:Declaring metric variables
2022-10-01 23:40:07,283:INFO:Importing untrained model
2022-10-01 23:40:07,283:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 23:40:07,283:INFO:Starting cross validation
2022-10-01 23:40:07,284:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:07,294:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,314:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,332:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,350:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,367:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,384:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,402:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,419:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,437:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,455:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:40:07,463:INFO:Calculating mean and std
2022-10-01 23:40:07,464:INFO:Creating metrics dataframe
2022-10-01 23:40:07,466:INFO:Uploading results into container
2022-10-01 23:40:07,467:INFO:Uploading model into container now
2022-10-01 23:40:07,467:INFO:master_model_container: 6
2022-10-01 23:40:07,467:INFO:display_container: 2
2022-10-01 23:40:07,467:INFO:LassoLars(random_state=123)
2022-10-01 23:40:07,467:INFO:create_model() successfully completed......................................
2022-10-01 23:40:07,550:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:07,551:INFO:Creating metrics dataframe
2022-10-01 23:40:07,554:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 23:40:07,554:INFO:Total runtime is 0.02777183453241984 minutes
2022-10-01 23:40:07,555:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:07,555:INFO:Initializing create_model()
2022-10-01 23:40:07,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:07,555:INFO:Checking exceptions
2022-10-01 23:40:07,556:INFO:Importing libraries
2022-10-01 23:40:07,556:INFO:Copying training dataset
2022-10-01 23:40:07,557:INFO:Defining folds
2022-10-01 23:40:07,557:INFO:Declaring metric variables
2022-10-01 23:40:07,558:INFO:Importing untrained model
2022-10-01 23:40:07,558:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 23:40:07,558:INFO:Starting cross validation
2022-10-01 23:40:07,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:07,568:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,585:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,602:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,620:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,637:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,654:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,671:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,687:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,703:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,720:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:40:07,728:INFO:Calculating mean and std
2022-10-01 23:40:07,729:INFO:Creating metrics dataframe
2022-10-01 23:40:07,731:INFO:Uploading results into container
2022-10-01 23:40:07,732:INFO:Uploading model into container now
2022-10-01 23:40:07,732:INFO:master_model_container: 7
2022-10-01 23:40:07,732:INFO:display_container: 2
2022-10-01 23:40:07,732:INFO:OrthogonalMatchingPursuit()
2022-10-01 23:40:07,732:INFO:create_model() successfully completed......................................
2022-10-01 23:40:07,815:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:07,815:INFO:Creating metrics dataframe
2022-10-01 23:40:07,819:INFO:Initializing Bayesian Ridge
2022-10-01 23:40:07,819:INFO:Total runtime is 0.03218498229980469 minutes
2022-10-01 23:40:07,819:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:07,819:INFO:Initializing create_model()
2022-10-01 23:40:07,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:07,819:INFO:Checking exceptions
2022-10-01 23:40:07,821:INFO:Importing libraries
2022-10-01 23:40:07,821:INFO:Copying training dataset
2022-10-01 23:40:07,822:INFO:Defining folds
2022-10-01 23:40:07,822:INFO:Declaring metric variables
2022-10-01 23:40:07,822:INFO:Importing untrained model
2022-10-01 23:40:07,823:INFO:Bayesian Ridge Imported successfully
2022-10-01 23:40:07,823:INFO:Starting cross validation
2022-10-01 23:40:07,823:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:07,997:INFO:Calculating mean and std
2022-10-01 23:40:07,997:INFO:Creating metrics dataframe
2022-10-01 23:40:08,000:INFO:Uploading results into container
2022-10-01 23:40:08,001:INFO:Uploading model into container now
2022-10-01 23:40:08,001:INFO:master_model_container: 8
2022-10-01 23:40:08,002:INFO:display_container: 2
2022-10-01 23:40:08,002:INFO:BayesianRidge()
2022-10-01 23:40:08,002:INFO:create_model() successfully completed......................................
2022-10-01 23:40:08,082:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:08,082:INFO:Creating metrics dataframe
2022-10-01 23:40:08,086:INFO:Initializing Passive Aggressive Regressor
2022-10-01 23:40:08,086:INFO:Total runtime is 0.036641844113667804 minutes
2022-10-01 23:40:08,086:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:08,086:INFO:Initializing create_model()
2022-10-01 23:40:08,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:08,086:INFO:Checking exceptions
2022-10-01 23:40:08,087:INFO:Importing libraries
2022-10-01 23:40:08,087:INFO:Copying training dataset
2022-10-01 23:40:08,089:INFO:Defining folds
2022-10-01 23:40:08,089:INFO:Declaring metric variables
2022-10-01 23:40:08,089:INFO:Importing untrained model
2022-10-01 23:40:08,089:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 23:40:08,090:INFO:Starting cross validation
2022-10-01 23:40:08,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:08,258:INFO:Calculating mean and std
2022-10-01 23:40:08,259:INFO:Creating metrics dataframe
2022-10-01 23:40:08,261:INFO:Uploading results into container
2022-10-01 23:40:08,261:INFO:Uploading model into container now
2022-10-01 23:40:08,262:INFO:master_model_container: 9
2022-10-01 23:40:08,262:INFO:display_container: 2
2022-10-01 23:40:08,262:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 23:40:08,262:INFO:create_model() successfully completed......................................
2022-10-01 23:40:08,342:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:08,342:INFO:Creating metrics dataframe
2022-10-01 23:40:08,346:INFO:Initializing Huber Regressor
2022-10-01 23:40:08,346:INFO:Total runtime is 0.04097814162572225 minutes
2022-10-01 23:40:08,347:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:08,347:INFO:Initializing create_model()
2022-10-01 23:40:08,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:08,347:INFO:Checking exceptions
2022-10-01 23:40:08,348:INFO:Importing libraries
2022-10-01 23:40:08,348:INFO:Copying training dataset
2022-10-01 23:40:08,349:INFO:Defining folds
2022-10-01 23:40:08,349:INFO:Declaring metric variables
2022-10-01 23:40:08,350:INFO:Importing untrained model
2022-10-01 23:40:08,350:INFO:Huber Regressor Imported successfully
2022-10-01 23:40:08,350:INFO:Starting cross validation
2022-10-01 23:40:08,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:08,597:INFO:Calculating mean and std
2022-10-01 23:40:08,598:INFO:Creating metrics dataframe
2022-10-01 23:40:08,601:INFO:Uploading results into container
2022-10-01 23:40:08,601:INFO:Uploading model into container now
2022-10-01 23:40:08,601:INFO:master_model_container: 10
2022-10-01 23:40:08,601:INFO:display_container: 2
2022-10-01 23:40:08,602:INFO:HuberRegressor()
2022-10-01 23:40:08,602:INFO:create_model() successfully completed......................................
2022-10-01 23:40:08,683:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:08,683:INFO:Creating metrics dataframe
2022-10-01 23:40:08,686:INFO:Initializing K Neighbors Regressor
2022-10-01 23:40:08,687:INFO:Total runtime is 0.04665195147196452 minutes
2022-10-01 23:40:08,687:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:08,687:INFO:Initializing create_model()
2022-10-01 23:40:08,687:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:08,687:INFO:Checking exceptions
2022-10-01 23:40:08,688:INFO:Importing libraries
2022-10-01 23:40:08,688:INFO:Copying training dataset
2022-10-01 23:40:08,690:INFO:Defining folds
2022-10-01 23:40:08,690:INFO:Declaring metric variables
2022-10-01 23:40:08,690:INFO:Importing untrained model
2022-10-01 23:40:08,690:INFO:K Neighbors Regressor Imported successfully
2022-10-01 23:40:08,690:INFO:Starting cross validation
2022-10-01 23:40:08,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:11,809:INFO:Calculating mean and std
2022-10-01 23:40:11,810:INFO:Creating metrics dataframe
2022-10-01 23:40:11,813:INFO:Uploading results into container
2022-10-01 23:40:11,813:INFO:Uploading model into container now
2022-10-01 23:40:11,813:INFO:master_model_container: 11
2022-10-01 23:40:11,813:INFO:display_container: 2
2022-10-01 23:40:11,814:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 23:40:11,814:INFO:create_model() successfully completed......................................
2022-10-01 23:40:11,912:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:11,912:INFO:Creating metrics dataframe
2022-10-01 23:40:11,916:INFO:Initializing Decision Tree Regressor
2022-10-01 23:40:11,916:INFO:Total runtime is 0.10046784480412801 minutes
2022-10-01 23:40:11,917:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:11,917:INFO:Initializing create_model()
2022-10-01 23:40:11,917:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:11,917:INFO:Checking exceptions
2022-10-01 23:40:11,918:INFO:Importing libraries
2022-10-01 23:40:11,918:INFO:Copying training dataset
2022-10-01 23:40:11,920:INFO:Defining folds
2022-10-01 23:40:11,920:INFO:Declaring metric variables
2022-10-01 23:40:11,920:INFO:Importing untrained model
2022-10-01 23:40:11,921:INFO:Decision Tree Regressor Imported successfully
2022-10-01 23:40:11,921:INFO:Starting cross validation
2022-10-01 23:40:11,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:12,121:INFO:Calculating mean and std
2022-10-01 23:40:12,122:INFO:Creating metrics dataframe
2022-10-01 23:40:12,125:INFO:Uploading results into container
2022-10-01 23:40:12,125:INFO:Uploading model into container now
2022-10-01 23:40:12,125:INFO:master_model_container: 12
2022-10-01 23:40:12,125:INFO:display_container: 2
2022-10-01 23:40:12,126:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 23:40:12,126:INFO:create_model() successfully completed......................................
2022-10-01 23:40:12,212:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:12,212:INFO:Creating metrics dataframe
2022-10-01 23:40:12,218:INFO:Initializing Random Forest Regressor
2022-10-01 23:40:12,218:INFO:Total runtime is 0.10551291704177856 minutes
2022-10-01 23:40:12,218:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:12,219:INFO:Initializing create_model()
2022-10-01 23:40:12,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:12,219:INFO:Checking exceptions
2022-10-01 23:40:12,220:INFO:Importing libraries
2022-10-01 23:40:12,220:INFO:Copying training dataset
2022-10-01 23:40:12,223:INFO:Defining folds
2022-10-01 23:40:12,223:INFO:Declaring metric variables
2022-10-01 23:40:12,224:INFO:Importing untrained model
2022-10-01 23:40:12,224:INFO:Random Forest Regressor Imported successfully
2022-10-01 23:40:12,224:INFO:Starting cross validation
2022-10-01 23:40:12,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:13,506:INFO:Calculating mean and std
2022-10-01 23:40:13,506:INFO:Creating metrics dataframe
2022-10-01 23:40:13,509:INFO:Uploading results into container
2022-10-01 23:40:13,509:INFO:Uploading model into container now
2022-10-01 23:40:13,509:INFO:master_model_container: 13
2022-10-01 23:40:13,510:INFO:display_container: 2
2022-10-01 23:40:13,510:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:40:13,510:INFO:create_model() successfully completed......................................
2022-10-01 23:40:13,589:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:13,589:INFO:Creating metrics dataframe
2022-10-01 23:40:13,593:INFO:Initializing Extra Trees Regressor
2022-10-01 23:40:13,593:INFO:Total runtime is 0.12841903368632 minutes
2022-10-01 23:40:13,593:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:13,593:INFO:Initializing create_model()
2022-10-01 23:40:13,593:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:13,593:INFO:Checking exceptions
2022-10-01 23:40:13,594:INFO:Importing libraries
2022-10-01 23:40:13,595:INFO:Copying training dataset
2022-10-01 23:40:13,596:INFO:Defining folds
2022-10-01 23:40:13,596:INFO:Declaring metric variables
2022-10-01 23:40:13,596:INFO:Importing untrained model
2022-10-01 23:40:13,597:INFO:Extra Trees Regressor Imported successfully
2022-10-01 23:40:13,597:INFO:Starting cross validation
2022-10-01 23:40:13,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:14,737:INFO:Calculating mean and std
2022-10-01 23:40:14,738:INFO:Creating metrics dataframe
2022-10-01 23:40:14,740:INFO:Uploading results into container
2022-10-01 23:40:14,741:INFO:Uploading model into container now
2022-10-01 23:40:14,741:INFO:master_model_container: 14
2022-10-01 23:40:14,741:INFO:display_container: 2
2022-10-01 23:40:14,741:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:40:14,742:INFO:create_model() successfully completed......................................
2022-10-01 23:40:14,825:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:14,825:INFO:Creating metrics dataframe
2022-10-01 23:40:14,829:INFO:Initializing AdaBoost Regressor
2022-10-01 23:40:14,829:INFO:Total runtime is 0.14902457396189372 minutes
2022-10-01 23:40:14,829:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:14,829:INFO:Initializing create_model()
2022-10-01 23:40:14,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:14,829:INFO:Checking exceptions
2022-10-01 23:40:14,830:INFO:Importing libraries
2022-10-01 23:40:14,830:INFO:Copying training dataset
2022-10-01 23:40:14,832:INFO:Defining folds
2022-10-01 23:40:14,832:INFO:Declaring metric variables
2022-10-01 23:40:14,832:INFO:Importing untrained model
2022-10-01 23:40:14,832:INFO:AdaBoost Regressor Imported successfully
2022-10-01 23:40:14,833:INFO:Starting cross validation
2022-10-01 23:40:14,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:15,493:INFO:Calculating mean and std
2022-10-01 23:40:15,494:INFO:Creating metrics dataframe
2022-10-01 23:40:15,496:INFO:Uploading results into container
2022-10-01 23:40:15,497:INFO:Uploading model into container now
2022-10-01 23:40:15,497:INFO:master_model_container: 15
2022-10-01 23:40:15,497:INFO:display_container: 2
2022-10-01 23:40:15,497:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 23:40:15,497:INFO:create_model() successfully completed......................................
2022-10-01 23:40:15,579:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:15,580:INFO:Creating metrics dataframe
2022-10-01 23:40:15,584:INFO:Initializing Gradient Boosting Regressor
2022-10-01 23:40:15,584:INFO:Total runtime is 0.16160460710525512 minutes
2022-10-01 23:40:15,584:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:15,584:INFO:Initializing create_model()
2022-10-01 23:40:15,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:15,584:INFO:Checking exceptions
2022-10-01 23:40:15,585:INFO:Importing libraries
2022-10-01 23:40:15,585:INFO:Copying training dataset
2022-10-01 23:40:15,587:INFO:Defining folds
2022-10-01 23:40:15,587:INFO:Declaring metric variables
2022-10-01 23:40:15,587:INFO:Importing untrained model
2022-10-01 23:40:15,588:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 23:40:15,588:INFO:Starting cross validation
2022-10-01 23:40:15,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:16,178:INFO:Calculating mean and std
2022-10-01 23:40:16,178:INFO:Creating metrics dataframe
2022-10-01 23:40:16,181:INFO:Uploading results into container
2022-10-01 23:40:16,181:INFO:Uploading model into container now
2022-10-01 23:40:16,182:INFO:master_model_container: 16
2022-10-01 23:40:16,182:INFO:display_container: 2
2022-10-01 23:40:16,182:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 23:40:16,182:INFO:create_model() successfully completed......................................
2022-10-01 23:40:16,261:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:16,261:INFO:Creating metrics dataframe
2022-10-01 23:40:16,265:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 23:40:16,265:INFO:Total runtime is 0.1729585369427999 minutes
2022-10-01 23:40:16,265:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:16,266:INFO:Initializing create_model()
2022-10-01 23:40:16,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:16,266:INFO:Checking exceptions
2022-10-01 23:40:16,267:INFO:Importing libraries
2022-10-01 23:40:16,267:INFO:Copying training dataset
2022-10-01 23:40:16,268:INFO:Defining folds
2022-10-01 23:40:16,268:INFO:Declaring metric variables
2022-10-01 23:40:16,269:INFO:Importing untrained model
2022-10-01 23:40:16,269:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 23:40:16,269:INFO:Starting cross validation
2022-10-01 23:40:16,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:20,748:INFO:Calculating mean and std
2022-10-01 23:40:20,749:INFO:Creating metrics dataframe
2022-10-01 23:40:20,752:INFO:Uploading results into container
2022-10-01 23:40:20,752:INFO:Uploading model into container now
2022-10-01 23:40:20,753:INFO:master_model_container: 17
2022-10-01 23:40:20,753:INFO:display_container: 2
2022-10-01 23:40:20,753:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 23:40:20,753:INFO:create_model() successfully completed......................................
2022-10-01 23:40:20,848:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:20,848:INFO:Creating metrics dataframe
2022-10-01 23:40:20,852:INFO:Initializing Dummy Regressor
2022-10-01 23:40:20,852:INFO:Total runtime is 0.24940869808197022 minutes
2022-10-01 23:40:20,852:INFO:SubProcess create_model() called ==================================
2022-10-01 23:40:20,853:INFO:Initializing create_model()
2022-10-01 23:40:20,853:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F9021D0F0>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:20,853:INFO:Checking exceptions
2022-10-01 23:40:20,854:INFO:Importing libraries
2022-10-01 23:40:20,854:INFO:Copying training dataset
2022-10-01 23:40:20,855:INFO:Defining folds
2022-10-01 23:40:20,856:INFO:Declaring metric variables
2022-10-01 23:40:20,856:INFO:Importing untrained model
2022-10-01 23:40:20,856:INFO:Dummy Regressor Imported successfully
2022-10-01 23:40:20,856:INFO:Starting cross validation
2022-10-01 23:40:20,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:21,021:INFO:Calculating mean and std
2022-10-01 23:40:21,022:INFO:Creating metrics dataframe
2022-10-01 23:40:21,025:INFO:Uploading results into container
2022-10-01 23:40:21,025:INFO:Uploading model into container now
2022-10-01 23:40:21,025:INFO:master_model_container: 18
2022-10-01 23:40:21,025:INFO:display_container: 2
2022-10-01 23:40:21,026:INFO:DummyRegressor()
2022-10-01 23:40:21,026:INFO:create_model() successfully completed......................................
2022-10-01 23:40:21,105:INFO:SubProcess create_model() end ==================================
2022-10-01 23:40:21,105:INFO:Creating metrics dataframe
2022-10-01 23:40:21,110:INFO:Initializing create_model()
2022-10-01 23:40:21,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:21,110:INFO:Checking exceptions
2022-10-01 23:40:21,112:INFO:Importing libraries
2022-10-01 23:40:21,112:INFO:Copying training dataset
2022-10-01 23:40:21,113:INFO:Defining folds
2022-10-01 23:40:21,113:INFO:Declaring metric variables
2022-10-01 23:40:21,114:INFO:Importing untrained model
2022-10-01 23:40:21,114:INFO:Declaring custom model
2022-10-01 23:40:21,114:INFO:Lasso Regression Imported successfully
2022-10-01 23:40:21,115:INFO:Cross validation set to False
2022-10-01 23:40:21,115:INFO:Fitting Model
2022-10-01 23:40:21,124:INFO:Lasso(random_state=123)
2022-10-01 23:40:21,124:INFO:create_model() successfully completed......................................
2022-10-01 23:40:21,220:INFO:master_model_container: 18
2022-10-01 23:40:21,220:INFO:display_container: 2
2022-10-01 23:40:21,220:INFO:Lasso(random_state=123)
2022-10-01 23:40:21,220:INFO:compare_models() successfully completed......................................
2022-10-01 23:40:21,221:INFO:Initializing create_model()
2022-10-01 23:40:21,221:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:40:21,221:INFO:Checking exceptions
2022-10-01 23:40:21,223:INFO:Importing libraries
2022-10-01 23:40:21,223:INFO:Copying training dataset
2022-10-01 23:40:21,225:INFO:Defining folds
2022-10-01 23:40:21,225:INFO:Declaring metric variables
2022-10-01 23:40:21,225:INFO:Importing untrained model
2022-10-01 23:40:21,225:INFO:Declaring custom model
2022-10-01 23:40:21,226:INFO:Lasso Regression Imported successfully
2022-10-01 23:40:21,226:INFO:Starting cross validation
2022-10-01 23:40:21,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:40:21,373:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:21,408:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:21,425:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:40:21,433:INFO:Calculating mean and std
2022-10-01 23:40:21,434:INFO:Creating metrics dataframe
2022-10-01 23:40:21,435:INFO:Finalizing model
2022-10-01 23:40:21,445:INFO:Uploading results into container
2022-10-01 23:40:21,446:INFO:Uploading model into container now
2022-10-01 23:40:21,455:INFO:master_model_container: 19
2022-10-01 23:40:21,455:INFO:display_container: 3
2022-10-01 23:40:21,455:INFO:Lasso(random_state=123)
2022-10-01 23:40:21,455:INFO:create_model() successfully completed......................................
2022-10-01 23:40:21,552:INFO:Initializing predict_model()
2022-10-01 23:40:21,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F87A7F3D0>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023F87C61630>)
2022-10-01 23:40:21,553:INFO:Checking exceptions
2022-10-01 23:40:21,553:INFO:Preloading libraries
2022-10-01 23:40:21,553:INFO:Set up data.
2022-10-01 23:40:21,556:INFO:Set up index.
2022-10-01 23:40:21,697:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:56: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 23:43:12,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:12,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:12,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:12,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:13,453:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 23:43:14,488:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 23:43:15,646:INFO:PyCaret RegressionExperiment
2022-10-01 23:43:15,647:INFO:Logging name: reg-default-name
2022-10-01 23:43:15,647:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 23:43:15,647:INFO:version 3.0.0.rc4
2022-10-01 23:43:15,647:INFO:Initializing setup()
2022-10-01 23:43:15,647:INFO:self.USI: a8b4
2022-10-01 23:43:15,647:INFO:self.variable_keys: {'display_container', 'y_test', 'memory', 'html_param', '_ml_usecase', 'fold_generator', 'transform_target_method_param', '_gpu_n_jobs_param', 'master_model_container', '_available_plots', 'n_jobs_param', 'idx', 'y', 'logging_param', 'data', 'transform_target_param', '_all_models_internal', 'exp_id', 'target_param', 'X', '_all_models', 'X_train', 'log_plots_param', 'fold_shuffle_param', 'pipeline', 'variable_keys', '_all_metrics', 'gpu_param', 'y_train', 'USI', 'X_test', 'fold_groups_param', 'seed', 'exp_name_log'}
2022-10-01 23:43:15,647:INFO:Checking environment
2022-10-01 23:43:15,647:INFO:python_version: 3.10.7
2022-10-01 23:43:15,647:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 23:43:15,647:INFO:machine: AMD64
2022-10-01 23:43:15,658:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 23:43:15,658:INFO:Memory: svmem(total=8497213440, available=2346082304, percent=72.4, used=6151131136, free=2346082304)
2022-10-01 23:43:15,658:INFO:Physical Core: 6
2022-10-01 23:43:15,658:INFO:Logical Core: 12
2022-10-01 23:43:15,658:INFO:Checking libraries
2022-10-01 23:43:15,658:INFO:System:
2022-10-01 23:43:15,658:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 23:43:15,658:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 23:43:15,659:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 23:43:15,659:INFO:PyCaret required dependencies:
2022-10-01 23:43:15,659:INFO:                 pip: 22.2.2
2022-10-01 23:43:15,659:INFO:          setuptools: 63.2.0
2022-10-01 23:43:15,659:INFO:             pycaret: 3.0.0rc4
2022-10-01 23:43:15,659:INFO:             IPython: 8.5.0
2022-10-01 23:43:15,659:INFO:          ipywidgets: 8.0.2
2022-10-01 23:43:15,659:INFO:                tqdm: 4.64.1
2022-10-01 23:43:15,659:INFO:               numpy: 1.22.4
2022-10-01 23:43:15,659:INFO:              pandas: 1.4.4
2022-10-01 23:43:15,659:INFO:              jinja2: 3.1.2
2022-10-01 23:43:15,659:INFO:               scipy: 1.8.1
2022-10-01 23:43:15,659:INFO:              joblib: 1.2.0
2022-10-01 23:43:15,659:INFO:             sklearn: 1.1.2
2022-10-01 23:43:15,659:INFO:                pyod: 1.0.5
2022-10-01 23:43:15,659:INFO:            imblearn: 0.9.1
2022-10-01 23:43:15,659:INFO:   category_encoders: 2.5.0
2022-10-01 23:43:15,659:INFO:            lightgbm: 3.3.2
2022-10-01 23:43:15,659:INFO:               numba: 0.55.2
2022-10-01 23:43:15,659:INFO:            requests: 2.28.1
2022-10-01 23:43:15,659:INFO:          matplotlib: 3.6.0
2022-10-01 23:43:15,659:INFO:          scikitplot: 0.3.7
2022-10-01 23:43:15,660:INFO:         yellowbrick: 1.5
2022-10-01 23:43:15,660:INFO:              plotly: 5.10.0
2022-10-01 23:43:15,660:INFO:             kaleido: 0.2.1
2022-10-01 23:43:15,660:INFO:         statsmodels: 0.13.2
2022-10-01 23:43:15,660:INFO:              sktime: 0.13.4
2022-10-01 23:43:15,660:INFO:               tbats: 1.1.0
2022-10-01 23:43:15,660:INFO:            pmdarima: 1.8.5
2022-10-01 23:43:15,660:INFO:              psutil: 5.9.2
2022-10-01 23:43:15,660:INFO:PyCaret optional dependencies:
2022-10-01 23:43:15,673:INFO:                shap: Not installed
2022-10-01 23:43:15,673:INFO:           interpret: Not installed
2022-10-01 23:43:15,674:INFO:                umap: Not installed
2022-10-01 23:43:15,674:INFO:    pandas_profiling: Not installed
2022-10-01 23:43:15,674:INFO:  explainerdashboard: Not installed
2022-10-01 23:43:15,674:INFO:             autoviz: Not installed
2022-10-01 23:43:15,674:INFO:           fairlearn: Not installed
2022-10-01 23:43:15,674:INFO:             xgboost: Not installed
2022-10-01 23:43:15,674:INFO:            catboost: Not installed
2022-10-01 23:43:15,674:INFO:              kmodes: Not installed
2022-10-01 23:43:15,674:INFO:             mlxtend: Not installed
2022-10-01 23:43:15,674:INFO:       statsforecast: Not installed
2022-10-01 23:43:15,674:INFO:        tune_sklearn: Not installed
2022-10-01 23:43:15,674:INFO:                 ray: Not installed
2022-10-01 23:43:15,674:INFO:            hyperopt: Not installed
2022-10-01 23:43:15,674:INFO:              optuna: Not installed
2022-10-01 23:43:15,674:INFO:               skopt: Not installed
2022-10-01 23:43:15,674:INFO:              mlflow: Not installed
2022-10-01 23:43:15,674:INFO:              gradio: Not installed
2022-10-01 23:43:15,674:INFO:             fastapi: Not installed
2022-10-01 23:43:15,674:INFO:             uvicorn: Not installed
2022-10-01 23:43:15,674:INFO:              m2cgen: Not installed
2022-10-01 23:43:15,674:INFO:           evidently: Not installed
2022-10-01 23:43:15,674:INFO:                nltk: Not installed
2022-10-01 23:43:15,675:INFO:            pyLDAvis: Not installed
2022-10-01 23:43:15,675:INFO:              gensim: Not installed
2022-10-01 23:43:15,675:INFO:               spacy: Not installed
2022-10-01 23:43:15,675:INFO:           wordcloud: Not installed
2022-10-01 23:43:15,675:INFO:            textblob: Not installed
2022-10-01 23:43:15,675:INFO:               fugue: Not installed
2022-10-01 23:43:15,675:INFO:           streamlit: Not installed
2022-10-01 23:43:15,675:INFO:             prophet: Not installed
2022-10-01 23:43:15,675:INFO:None
2022-10-01 23:43:15,675:INFO:Set up GPU usage.
2022-10-01 23:43:15,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,675:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 23:43:15,675:INFO:Set up data.
2022-10-01 23:43:15,679:INFO:Set up train/test split.
2022-10-01 23:43:15,681:INFO:Set up index.
2022-10-01 23:43:15,681:INFO:Set up folding strategy.
2022-10-01 23:43:15,681:INFO:Assigning column types.
2022-10-01 23:43:15,683:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 23:43:15,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,684:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:43:15,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,688:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:43:15,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,692:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:43:15,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,746:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:15,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:15,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:15,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:16,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:16,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,127:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,134:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:16,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:16,525:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 23:43:16,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,533:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,533:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,541:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,630:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,677:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:16,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:16,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,931:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:16,938:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:43:16,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,028:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,070:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,070:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,070:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:17,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:17,299:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 23:43:17,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,313:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:17,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:17,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,675:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:17,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:17,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:18,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:18,044:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 23:43:18,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,149:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:18,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:18,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:18,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:18,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:18,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:43:18,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:18,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:18,782:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 23:43:18,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:18,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:18,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:19,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:19,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,286:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:43:19,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:19,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:19,561:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 23:43:19,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:19,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:19,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:19,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:20,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:20,471:INFO:Preparing preprocessing pipeline...
2022-10-01 23:43:20,472:INFO:Set up simple imputation.
2022-10-01 23:43:20,472:INFO:Set up variance threshold.
2022-10-01 23:43:20,490:INFO:Finished creating preprocessing pipeline.
2022-10-01 23:43:20,499:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 23:43:20,499:INFO:Creating final display dataframe.
2022-10-01 23:43:20,586:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              a8b4
2022-10-01 23:43:20,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:20,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:20,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:20,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:21,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:21,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:21,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:43:21,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:21,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:43:21,424:INFO:setup() successfully completed in 5.78s...............
2022-10-01 23:43:21,425:INFO:Initializing compare_models()
2022-10-01 23:43:21,425:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 23:43:21,425:INFO:Checking exceptions
2022-10-01 23:43:21,426:INFO:Preparing display monitor
2022-10-01 23:43:21,430:INFO:Initializing Linear Regression
2022-10-01 23:43:21,430:INFO:Total runtime is 0.0 minutes
2022-10-01 23:43:21,430:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:21,430:INFO:Initializing create_model()
2022-10-01 23:43:21,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:21,430:INFO:Checking exceptions
2022-10-01 23:43:21,432:INFO:Importing libraries
2022-10-01 23:43:21,432:INFO:Copying training dataset
2022-10-01 23:43:21,434:INFO:Defining folds
2022-10-01 23:43:21,434:INFO:Declaring metric variables
2022-10-01 23:43:21,434:INFO:Importing untrained model
2022-10-01 23:43:21,434:INFO:Linear Regression Imported successfully
2022-10-01 23:43:21,435:INFO:Starting cross validation
2022-10-01 23:43:21,438:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:21,641:INFO:Calculating mean and std
2022-10-01 23:43:21,642:INFO:Creating metrics dataframe
2022-10-01 23:43:21,644:INFO:Uploading results into container
2022-10-01 23:43:21,645:INFO:Uploading model into container now
2022-10-01 23:43:21,645:INFO:master_model_container: 1
2022-10-01 23:43:21,645:INFO:display_container: 2
2022-10-01 23:43:21,645:INFO:LinearRegression(n_jobs=-1)
2022-10-01 23:43:21,645:INFO:create_model() successfully completed......................................
2022-10-01 23:43:21,728:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:21,728:INFO:Creating metrics dataframe
2022-10-01 23:43:21,731:INFO:Initializing Lasso Regression
2022-10-01 23:43:21,731:INFO:Total runtime is 0.005008967717488607 minutes
2022-10-01 23:43:21,732:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:21,732:INFO:Initializing create_model()
2022-10-01 23:43:21,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:21,732:INFO:Checking exceptions
2022-10-01 23:43:21,733:INFO:Importing libraries
2022-10-01 23:43:21,733:INFO:Copying training dataset
2022-10-01 23:43:21,734:INFO:Defining folds
2022-10-01 23:43:21,735:INFO:Declaring metric variables
2022-10-01 23:43:21,735:INFO:Importing untrained model
2022-10-01 23:43:21,735:INFO:Lasso Regression Imported successfully
2022-10-01 23:43:21,735:INFO:Starting cross validation
2022-10-01 23:43:21,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:21,857:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:21,893:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:21,911:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:21,919:INFO:Calculating mean and std
2022-10-01 23:43:21,920:INFO:Creating metrics dataframe
2022-10-01 23:43:21,921:INFO:Uploading results into container
2022-10-01 23:43:21,922:INFO:Uploading model into container now
2022-10-01 23:43:21,922:INFO:master_model_container: 2
2022-10-01 23:43:21,922:INFO:display_container: 2
2022-10-01 23:43:21,922:INFO:Lasso(random_state=123)
2022-10-01 23:43:21,922:INFO:create_model() successfully completed......................................
2022-10-01 23:43:22,004:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:22,004:INFO:Creating metrics dataframe
2022-10-01 23:43:22,008:INFO:Initializing Ridge Regression
2022-10-01 23:43:22,008:INFO:Total runtime is 0.009629452228546144 minutes
2022-10-01 23:43:22,009:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:22,009:INFO:Initializing create_model()
2022-10-01 23:43:22,009:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:22,009:INFO:Checking exceptions
2022-10-01 23:43:22,010:INFO:Importing libraries
2022-10-01 23:43:22,010:INFO:Copying training dataset
2022-10-01 23:43:22,012:INFO:Defining folds
2022-10-01 23:43:22,012:INFO:Declaring metric variables
2022-10-01 23:43:22,012:INFO:Importing untrained model
2022-10-01 23:43:22,012:INFO:Ridge Regression Imported successfully
2022-10-01 23:43:22,012:INFO:Starting cross validation
2022-10-01 23:43:22,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:22,024:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,041:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,059:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,076:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,093:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,111:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,129:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,146:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,163:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,180:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:43:22,188:INFO:Calculating mean and std
2022-10-01 23:43:22,188:INFO:Creating metrics dataframe
2022-10-01 23:43:22,190:INFO:Uploading results into container
2022-10-01 23:43:22,191:INFO:Uploading model into container now
2022-10-01 23:43:22,191:INFO:master_model_container: 3
2022-10-01 23:43:22,191:INFO:display_container: 2
2022-10-01 23:43:22,191:INFO:Ridge(random_state=123)
2022-10-01 23:43:22,191:INFO:create_model() successfully completed......................................
2022-10-01 23:43:22,271:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:22,271:INFO:Creating metrics dataframe
2022-10-01 23:43:22,275:INFO:Initializing Elastic Net
2022-10-01 23:43:22,275:INFO:Total runtime is 0.014080266157786053 minutes
2022-10-01 23:43:22,275:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:22,276:INFO:Initializing create_model()
2022-10-01 23:43:22,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:22,276:INFO:Checking exceptions
2022-10-01 23:43:22,277:INFO:Importing libraries
2022-10-01 23:43:22,277:INFO:Copying training dataset
2022-10-01 23:43:22,278:INFO:Defining folds
2022-10-01 23:43:22,278:INFO:Declaring metric variables
2022-10-01 23:43:22,279:INFO:Importing untrained model
2022-10-01 23:43:22,279:INFO:Elastic Net Imported successfully
2022-10-01 23:43:22,279:INFO:Starting cross validation
2022-10-01 23:43:22,280:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:22,397:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:22,451:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:22,458:INFO:Calculating mean and std
2022-10-01 23:43:22,459:INFO:Creating metrics dataframe
2022-10-01 23:43:22,462:INFO:Uploading results into container
2022-10-01 23:43:22,462:INFO:Uploading model into container now
2022-10-01 23:43:22,462:INFO:master_model_container: 4
2022-10-01 23:43:22,462:INFO:display_container: 2
2022-10-01 23:43:22,463:INFO:ElasticNet(random_state=123)
2022-10-01 23:43:22,463:INFO:create_model() successfully completed......................................
2022-10-01 23:43:22,556:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:22,556:INFO:Creating metrics dataframe
2022-10-01 23:43:22,560:INFO:Initializing Least Angle Regression
2022-10-01 23:43:22,560:INFO:Total runtime is 0.018826576073964436 minutes
2022-10-01 23:43:22,560:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:22,561:INFO:Initializing create_model()
2022-10-01 23:43:22,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:22,561:INFO:Checking exceptions
2022-10-01 23:43:22,562:INFO:Importing libraries
2022-10-01 23:43:22,562:INFO:Copying training dataset
2022-10-01 23:43:22,564:INFO:Defining folds
2022-10-01 23:43:22,564:INFO:Declaring metric variables
2022-10-01 23:43:22,564:INFO:Importing untrained model
2022-10-01 23:43:22,564:INFO:Least Angle Regression Imported successfully
2022-10-01 23:43:22,564:INFO:Starting cross validation
2022-10-01 23:43:22,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:22,576:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,594:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,616:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,635:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,654:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,672:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,691:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,709:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,727:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,745:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:22,754:INFO:Calculating mean and std
2022-10-01 23:43:22,755:INFO:Creating metrics dataframe
2022-10-01 23:43:22,757:INFO:Uploading results into container
2022-10-01 23:43:22,757:INFO:Uploading model into container now
2022-10-01 23:43:22,758:INFO:master_model_container: 5
2022-10-01 23:43:22,758:INFO:display_container: 2
2022-10-01 23:43:22,758:INFO:Lars(random_state=123)
2022-10-01 23:43:22,758:INFO:create_model() successfully completed......................................
2022-10-01 23:43:22,840:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:22,840:INFO:Creating metrics dataframe
2022-10-01 23:43:22,844:INFO:Initializing Lasso Least Angle Regression
2022-10-01 23:43:22,844:INFO:Total runtime is 0.023563818136850993 minutes
2022-10-01 23:43:22,844:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:22,845:INFO:Initializing create_model()
2022-10-01 23:43:22,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:22,845:INFO:Checking exceptions
2022-10-01 23:43:22,846:INFO:Importing libraries
2022-10-01 23:43:22,846:INFO:Copying training dataset
2022-10-01 23:43:22,847:INFO:Defining folds
2022-10-01 23:43:22,848:INFO:Declaring metric variables
2022-10-01 23:43:22,848:INFO:Importing untrained model
2022-10-01 23:43:22,848:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 23:43:22,848:INFO:Starting cross validation
2022-10-01 23:43:22,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:22,859:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,877:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,897:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,916:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,934:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,952:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,972:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:22,991:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:23,008:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:23,026:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:43:23,035:INFO:Calculating mean and std
2022-10-01 23:43:23,035:INFO:Creating metrics dataframe
2022-10-01 23:43:23,038:INFO:Uploading results into container
2022-10-01 23:43:23,038:INFO:Uploading model into container now
2022-10-01 23:43:23,039:INFO:master_model_container: 6
2022-10-01 23:43:23,039:INFO:display_container: 2
2022-10-01 23:43:23,039:INFO:LassoLars(random_state=123)
2022-10-01 23:43:23,039:INFO:create_model() successfully completed......................................
2022-10-01 23:43:23,128:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:23,128:INFO:Creating metrics dataframe
2022-10-01 23:43:23,132:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 23:43:23,132:INFO:Total runtime is 0.028358753522237143 minutes
2022-10-01 23:43:23,133:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:23,133:INFO:Initializing create_model()
2022-10-01 23:43:23,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:23,133:INFO:Checking exceptions
2022-10-01 23:43:23,134:INFO:Importing libraries
2022-10-01 23:43:23,134:INFO:Copying training dataset
2022-10-01 23:43:23,135:INFO:Defining folds
2022-10-01 23:43:23,136:INFO:Declaring metric variables
2022-10-01 23:43:23,136:INFO:Importing untrained model
2022-10-01 23:43:23,136:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 23:43:23,136:INFO:Starting cross validation
2022-10-01 23:43:23,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:23,147:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,167:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,188:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,207:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,225:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,244:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,262:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,281:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,302:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,319:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:43:23,328:INFO:Calculating mean and std
2022-10-01 23:43:23,328:INFO:Creating metrics dataframe
2022-10-01 23:43:23,331:INFO:Uploading results into container
2022-10-01 23:43:23,332:INFO:Uploading model into container now
2022-10-01 23:43:23,332:INFO:master_model_container: 7
2022-10-01 23:43:23,332:INFO:display_container: 2
2022-10-01 23:43:23,332:INFO:OrthogonalMatchingPursuit()
2022-10-01 23:43:23,332:INFO:create_model() successfully completed......................................
2022-10-01 23:43:23,412:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:23,412:INFO:Creating metrics dataframe
2022-10-01 23:43:23,416:INFO:Initializing Bayesian Ridge
2022-10-01 23:43:23,416:INFO:Total runtime is 0.03309626976648967 minutes
2022-10-01 23:43:23,416:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:23,416:INFO:Initializing create_model()
2022-10-01 23:43:23,416:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:23,416:INFO:Checking exceptions
2022-10-01 23:43:23,417:INFO:Importing libraries
2022-10-01 23:43:23,417:INFO:Copying training dataset
2022-10-01 23:43:23,419:INFO:Defining folds
2022-10-01 23:43:23,419:INFO:Declaring metric variables
2022-10-01 23:43:23,419:INFO:Importing untrained model
2022-10-01 23:43:23,419:INFO:Bayesian Ridge Imported successfully
2022-10-01 23:43:23,420:INFO:Starting cross validation
2022-10-01 23:43:23,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:23,608:INFO:Calculating mean and std
2022-10-01 23:43:23,609:INFO:Creating metrics dataframe
2022-10-01 23:43:23,612:INFO:Uploading results into container
2022-10-01 23:43:23,612:INFO:Uploading model into container now
2022-10-01 23:43:23,612:INFO:master_model_container: 8
2022-10-01 23:43:23,612:INFO:display_container: 2
2022-10-01 23:43:23,613:INFO:BayesianRidge()
2022-10-01 23:43:23,613:INFO:create_model() successfully completed......................................
2022-10-01 23:43:23,703:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:23,703:INFO:Creating metrics dataframe
2022-10-01 23:43:23,707:INFO:Initializing Passive Aggressive Regressor
2022-10-01 23:43:23,707:INFO:Total runtime is 0.037953952948252365 minutes
2022-10-01 23:43:23,707:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:23,707:INFO:Initializing create_model()
2022-10-01 23:43:23,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:23,708:INFO:Checking exceptions
2022-10-01 23:43:23,709:INFO:Importing libraries
2022-10-01 23:43:23,709:INFO:Copying training dataset
2022-10-01 23:43:23,710:INFO:Defining folds
2022-10-01 23:43:23,711:INFO:Declaring metric variables
2022-10-01 23:43:23,711:INFO:Importing untrained model
2022-10-01 23:43:23,711:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 23:43:23,711:INFO:Starting cross validation
2022-10-01 23:43:23,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:23,890:INFO:Calculating mean and std
2022-10-01 23:43:23,890:INFO:Creating metrics dataframe
2022-10-01 23:43:23,893:INFO:Uploading results into container
2022-10-01 23:43:23,894:INFO:Uploading model into container now
2022-10-01 23:43:23,894:INFO:master_model_container: 9
2022-10-01 23:43:23,894:INFO:display_container: 2
2022-10-01 23:43:23,894:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 23:43:23,894:INFO:create_model() successfully completed......................................
2022-10-01 23:43:23,977:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:23,977:INFO:Creating metrics dataframe
2022-10-01 23:43:23,981:INFO:Initializing Huber Regressor
2022-10-01 23:43:23,981:INFO:Total runtime is 0.042507088184356695 minutes
2022-10-01 23:43:23,981:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:23,981:INFO:Initializing create_model()
2022-10-01 23:43:23,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:23,981:INFO:Checking exceptions
2022-10-01 23:43:23,982:INFO:Importing libraries
2022-10-01 23:43:23,982:INFO:Copying training dataset
2022-10-01 23:43:23,984:INFO:Defining folds
2022-10-01 23:43:23,984:INFO:Declaring metric variables
2022-10-01 23:43:23,984:INFO:Importing untrained model
2022-10-01 23:43:23,984:INFO:Huber Regressor Imported successfully
2022-10-01 23:43:23,985:INFO:Starting cross validation
2022-10-01 23:43:23,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:24,241:INFO:Calculating mean and std
2022-10-01 23:43:24,242:INFO:Creating metrics dataframe
2022-10-01 23:43:24,245:INFO:Uploading results into container
2022-10-01 23:43:24,245:INFO:Uploading model into container now
2022-10-01 23:43:24,245:INFO:master_model_container: 10
2022-10-01 23:43:24,245:INFO:display_container: 2
2022-10-01 23:43:24,245:INFO:HuberRegressor()
2022-10-01 23:43:24,246:INFO:create_model() successfully completed......................................
2022-10-01 23:43:24,335:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:24,335:INFO:Creating metrics dataframe
2022-10-01 23:43:24,339:INFO:Initializing K Neighbors Regressor
2022-10-01 23:43:24,339:INFO:Total runtime is 0.048480721314748135 minutes
2022-10-01 23:43:24,339:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:24,339:INFO:Initializing create_model()
2022-10-01 23:43:24,339:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:24,340:INFO:Checking exceptions
2022-10-01 23:43:24,341:INFO:Importing libraries
2022-10-01 23:43:24,341:INFO:Copying training dataset
2022-10-01 23:43:24,342:INFO:Defining folds
2022-10-01 23:43:24,342:INFO:Declaring metric variables
2022-10-01 23:43:24,343:INFO:Importing untrained model
2022-10-01 23:43:24,343:INFO:K Neighbors Regressor Imported successfully
2022-10-01 23:43:24,343:INFO:Starting cross validation
2022-10-01 23:43:24,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:28,452:INFO:Calculating mean and std
2022-10-01 23:43:28,453:INFO:Creating metrics dataframe
2022-10-01 23:43:28,457:INFO:Uploading results into container
2022-10-01 23:43:28,458:INFO:Uploading model into container now
2022-10-01 23:43:28,458:INFO:master_model_container: 11
2022-10-01 23:43:28,458:INFO:display_container: 2
2022-10-01 23:43:28,459:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 23:43:28,459:INFO:create_model() successfully completed......................................
2022-10-01 23:43:28,556:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:28,557:INFO:Creating metrics dataframe
2022-10-01 23:43:28,560:INFO:Initializing Decision Tree Regressor
2022-10-01 23:43:28,561:INFO:Total runtime is 0.11883252461751302 minutes
2022-10-01 23:43:28,561:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:28,561:INFO:Initializing create_model()
2022-10-01 23:43:28,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:28,561:INFO:Checking exceptions
2022-10-01 23:43:28,562:INFO:Importing libraries
2022-10-01 23:43:28,562:INFO:Copying training dataset
2022-10-01 23:43:28,564:INFO:Defining folds
2022-10-01 23:43:28,564:INFO:Declaring metric variables
2022-10-01 23:43:28,564:INFO:Importing untrained model
2022-10-01 23:43:28,564:INFO:Decision Tree Regressor Imported successfully
2022-10-01 23:43:28,565:INFO:Starting cross validation
2022-10-01 23:43:28,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:28,754:INFO:Calculating mean and std
2022-10-01 23:43:28,754:INFO:Creating metrics dataframe
2022-10-01 23:43:28,757:INFO:Uploading results into container
2022-10-01 23:43:28,757:INFO:Uploading model into container now
2022-10-01 23:43:28,757:INFO:master_model_container: 12
2022-10-01 23:43:28,757:INFO:display_container: 2
2022-10-01 23:43:28,758:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 23:43:28,758:INFO:create_model() successfully completed......................................
2022-10-01 23:43:28,840:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:28,840:INFO:Creating metrics dataframe
2022-10-01 23:43:28,844:INFO:Initializing Random Forest Regressor
2022-10-01 23:43:28,844:INFO:Total runtime is 0.12356346050898234 minutes
2022-10-01 23:43:28,844:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:28,844:INFO:Initializing create_model()
2022-10-01 23:43:28,844:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:28,844:INFO:Checking exceptions
2022-10-01 23:43:28,845:INFO:Importing libraries
2022-10-01 23:43:28,845:INFO:Copying training dataset
2022-10-01 23:43:28,847:INFO:Defining folds
2022-10-01 23:43:28,847:INFO:Declaring metric variables
2022-10-01 23:43:28,847:INFO:Importing untrained model
2022-10-01 23:43:28,847:INFO:Random Forest Regressor Imported successfully
2022-10-01 23:43:28,847:INFO:Starting cross validation
2022-10-01 23:43:28,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:30,035:INFO:Calculating mean and std
2022-10-01 23:43:30,036:INFO:Creating metrics dataframe
2022-10-01 23:43:30,038:INFO:Uploading results into container
2022-10-01 23:43:30,039:INFO:Uploading model into container now
2022-10-01 23:43:30,039:INFO:master_model_container: 13
2022-10-01 23:43:30,039:INFO:display_container: 2
2022-10-01 23:43:30,039:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:43:30,039:INFO:create_model() successfully completed......................................
2022-10-01 23:43:30,119:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:30,119:INFO:Creating metrics dataframe
2022-10-01 23:43:30,123:INFO:Initializing Extra Trees Regressor
2022-10-01 23:43:30,123:INFO:Total runtime is 0.14487266937891644 minutes
2022-10-01 23:43:30,123:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:30,123:INFO:Initializing create_model()
2022-10-01 23:43:30,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:30,123:INFO:Checking exceptions
2022-10-01 23:43:30,124:INFO:Importing libraries
2022-10-01 23:43:30,124:INFO:Copying training dataset
2022-10-01 23:43:30,126:INFO:Defining folds
2022-10-01 23:43:30,126:INFO:Declaring metric variables
2022-10-01 23:43:30,126:INFO:Importing untrained model
2022-10-01 23:43:30,127:INFO:Extra Trees Regressor Imported successfully
2022-10-01 23:43:30,127:INFO:Starting cross validation
2022-10-01 23:43:30,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:31,261:INFO:Calculating mean and std
2022-10-01 23:43:31,262:INFO:Creating metrics dataframe
2022-10-01 23:43:31,264:INFO:Uploading results into container
2022-10-01 23:43:31,265:INFO:Uploading model into container now
2022-10-01 23:43:31,265:INFO:master_model_container: 14
2022-10-01 23:43:31,265:INFO:display_container: 2
2022-10-01 23:43:31,265:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:43:31,265:INFO:create_model() successfully completed......................................
2022-10-01 23:43:31,345:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:31,345:INFO:Creating metrics dataframe
2022-10-01 23:43:31,349:INFO:Initializing AdaBoost Regressor
2022-10-01 23:43:31,349:INFO:Total runtime is 0.16532062292099 minutes
2022-10-01 23:43:31,349:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:31,350:INFO:Initializing create_model()
2022-10-01 23:43:31,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:31,350:INFO:Checking exceptions
2022-10-01 23:43:31,351:INFO:Importing libraries
2022-10-01 23:43:31,351:INFO:Copying training dataset
2022-10-01 23:43:31,352:INFO:Defining folds
2022-10-01 23:43:31,352:INFO:Declaring metric variables
2022-10-01 23:43:31,352:INFO:Importing untrained model
2022-10-01 23:43:31,353:INFO:AdaBoost Regressor Imported successfully
2022-10-01 23:43:31,353:INFO:Starting cross validation
2022-10-01 23:43:31,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:32,049:INFO:Calculating mean and std
2022-10-01 23:43:32,049:INFO:Creating metrics dataframe
2022-10-01 23:43:32,052:INFO:Uploading results into container
2022-10-01 23:43:32,052:INFO:Uploading model into container now
2022-10-01 23:43:32,053:INFO:master_model_container: 15
2022-10-01 23:43:32,053:INFO:display_container: 2
2022-10-01 23:43:32,053:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 23:43:32,053:INFO:create_model() successfully completed......................................
2022-10-01 23:43:32,151:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:32,151:INFO:Creating metrics dataframe
2022-10-01 23:43:32,155:INFO:Initializing Gradient Boosting Regressor
2022-10-01 23:43:32,155:INFO:Total runtime is 0.1787458340326945 minutes
2022-10-01 23:43:32,155:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:32,156:INFO:Initializing create_model()
2022-10-01 23:43:32,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:32,156:INFO:Checking exceptions
2022-10-01 23:43:32,157:INFO:Importing libraries
2022-10-01 23:43:32,157:INFO:Copying training dataset
2022-10-01 23:43:32,159:INFO:Defining folds
2022-10-01 23:43:32,159:INFO:Declaring metric variables
2022-10-01 23:43:32,159:INFO:Importing untrained model
2022-10-01 23:43:32,159:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 23:43:32,160:INFO:Starting cross validation
2022-10-01 23:43:32,160:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:32,753:INFO:Calculating mean and std
2022-10-01 23:43:32,754:INFO:Creating metrics dataframe
2022-10-01 23:43:32,756:INFO:Uploading results into container
2022-10-01 23:43:32,756:INFO:Uploading model into container now
2022-10-01 23:43:32,757:INFO:master_model_container: 16
2022-10-01 23:43:32,757:INFO:display_container: 2
2022-10-01 23:43:32,757:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 23:43:32,757:INFO:create_model() successfully completed......................................
2022-10-01 23:43:32,837:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:32,837:INFO:Creating metrics dataframe
2022-10-01 23:43:32,841:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 23:43:32,841:INFO:Total runtime is 0.19018088579177858 minutes
2022-10-01 23:43:32,841:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:32,841:INFO:Initializing create_model()
2022-10-01 23:43:32,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:32,841:INFO:Checking exceptions
2022-10-01 23:43:32,842:INFO:Importing libraries
2022-10-01 23:43:32,842:INFO:Copying training dataset
2022-10-01 23:43:32,844:INFO:Defining folds
2022-10-01 23:43:32,844:INFO:Declaring metric variables
2022-10-01 23:43:32,844:INFO:Importing untrained model
2022-10-01 23:43:32,844:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 23:43:32,844:INFO:Starting cross validation
2022-10-01 23:43:32,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:37,505:INFO:Calculating mean and std
2022-10-01 23:43:37,506:INFO:Creating metrics dataframe
2022-10-01 23:43:37,509:INFO:Uploading results into container
2022-10-01 23:43:37,509:INFO:Uploading model into container now
2022-10-01 23:43:37,509:INFO:master_model_container: 17
2022-10-01 23:43:37,510:INFO:display_container: 2
2022-10-01 23:43:37,510:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 23:43:37,510:INFO:create_model() successfully completed......................................
2022-10-01 23:43:37,604:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:37,604:INFO:Creating metrics dataframe
2022-10-01 23:43:37,610:INFO:Initializing Dummy Regressor
2022-10-01 23:43:37,610:INFO:Total runtime is 0.26965801715850835 minutes
2022-10-01 23:43:37,610:INFO:SubProcess create_model() called ==================================
2022-10-01 23:43:37,611:INFO:Initializing create_model()
2022-10-01 23:43:37,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021108449210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:37,611:INFO:Checking exceptions
2022-10-01 23:43:37,612:INFO:Importing libraries
2022-10-01 23:43:37,612:INFO:Copying training dataset
2022-10-01 23:43:37,614:INFO:Defining folds
2022-10-01 23:43:37,614:INFO:Declaring metric variables
2022-10-01 23:43:37,614:INFO:Importing untrained model
2022-10-01 23:43:37,615:INFO:Dummy Regressor Imported successfully
2022-10-01 23:43:37,615:INFO:Starting cross validation
2022-10-01 23:43:37,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:37,770:INFO:Calculating mean and std
2022-10-01 23:43:37,770:INFO:Creating metrics dataframe
2022-10-01 23:43:37,773:INFO:Uploading results into container
2022-10-01 23:43:37,773:INFO:Uploading model into container now
2022-10-01 23:43:37,774:INFO:master_model_container: 18
2022-10-01 23:43:37,774:INFO:display_container: 2
2022-10-01 23:43:37,774:INFO:DummyRegressor()
2022-10-01 23:43:37,774:INFO:create_model() successfully completed......................................
2022-10-01 23:43:37,855:INFO:SubProcess create_model() end ==================================
2022-10-01 23:43:37,855:INFO:Creating metrics dataframe
2022-10-01 23:43:37,860:INFO:Initializing create_model()
2022-10-01 23:43:37,860:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:37,860:INFO:Checking exceptions
2022-10-01 23:43:37,862:INFO:Importing libraries
2022-10-01 23:43:37,862:INFO:Copying training dataset
2022-10-01 23:43:37,863:INFO:Defining folds
2022-10-01 23:43:37,864:INFO:Declaring metric variables
2022-10-01 23:43:37,864:INFO:Importing untrained model
2022-10-01 23:43:37,864:INFO:Declaring custom model
2022-10-01 23:43:37,864:INFO:Lasso Regression Imported successfully
2022-10-01 23:43:37,865:INFO:Cross validation set to False
2022-10-01 23:43:37,865:INFO:Fitting Model
2022-10-01 23:43:37,874:INFO:Lasso(random_state=123)
2022-10-01 23:43:37,874:INFO:create_model() successfully completed......................................
2022-10-01 23:43:37,967:INFO:master_model_container: 18
2022-10-01 23:43:37,967:INFO:display_container: 2
2022-10-01 23:43:37,967:INFO:Lasso(random_state=123)
2022-10-01 23:43:37,967:INFO:compare_models() successfully completed......................................
2022-10-01 23:43:37,967:INFO:Initializing create_model()
2022-10-01 23:43:37,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:43:37,969:INFO:Checking exceptions
2022-10-01 23:43:37,972:INFO:Importing libraries
2022-10-01 23:43:37,972:INFO:Copying training dataset
2022-10-01 23:43:37,973:INFO:Defining folds
2022-10-01 23:43:37,973:INFO:Declaring metric variables
2022-10-01 23:43:37,974:INFO:Importing untrained model
2022-10-01 23:43:37,974:INFO:Declaring custom model
2022-10-01 23:43:37,974:INFO:Lasso Regression Imported successfully
2022-10-01 23:43:37,974:INFO:Starting cross validation
2022-10-01 23:43:37,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:43:38,143:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:38,179:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:38,197:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:43:38,205:INFO:Calculating mean and std
2022-10-01 23:43:38,205:INFO:Creating metrics dataframe
2022-10-01 23:43:38,207:INFO:Finalizing model
2022-10-01 23:43:38,217:INFO:Uploading results into container
2022-10-01 23:43:38,218:INFO:Uploading model into container now
2022-10-01 23:43:38,227:INFO:master_model_container: 19
2022-10-01 23:43:38,227:INFO:display_container: 3
2022-10-01 23:43:38,227:INFO:Lasso(random_state=123)
2022-10-01 23:43:38,227:INFO:create_model() successfully completed......................................
2022-10-01 23:43:38,341:INFO:Initializing predict_model()
2022-10-01 23:43:38,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002117F67F550>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000021108169990>)
2022-10-01 23:43:38,341:INFO:Checking exceptions
2022-10-01 23:43:38,341:INFO:Preloading libraries
2022-10-01 23:43:38,341:INFO:Set up data.
2022-10-01 23:43:38,345:INFO:Set up index.
2022-10-01 23:43:38,470:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:56: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

2022-10-01 23:45:11,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:11,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:11,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:11,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:11,991:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-01 23:45:12,941:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\flask_marshmallow\__init__.py:26: UserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.
  warnings.warn(

2022-10-01 23:45:13,933:INFO:PyCaret RegressionExperiment
2022-10-01 23:45:13,933:INFO:Logging name: reg-default-name
2022-10-01 23:45:13,933:INFO:ML Usecase: MLUsecase.REGRESSION
2022-10-01 23:45:13,933:INFO:version 3.0.0.rc4
2022-10-01 23:45:13,933:INFO:Initializing setup()
2022-10-01 23:45:13,933:INFO:self.USI: 0d5d
2022-10-01 23:45:13,933:INFO:self.variable_keys: {'memory', 'seed', 'gpu_param', 'master_model_container', 'n_jobs_param', 'logging_param', 'USI', 'y_test', 'fold_generator', 'idx', '_available_plots', 'exp_name_log', '_ml_usecase', 'fold_shuffle_param', 'log_plots_param', 'y_train', 'X_train', 'pipeline', 'y', 'transform_target_method_param', '_all_models', '_all_models_internal', 'X', '_all_metrics', 'X_test', 'variable_keys', 'html_param', 'fold_groups_param', 'display_container', 'transform_target_param', 'data', 'exp_id', '_gpu_n_jobs_param', 'target_param'}
2022-10-01 23:45:13,933:INFO:Checking environment
2022-10-01 23:45:13,933:INFO:python_version: 3.10.7
2022-10-01 23:45:13,933:INFO:python_build: ('tags/v3.10.7:6cc6b13', 'Sep  5 2022 14:08:36')
2022-10-01 23:45:13,933:INFO:machine: AMD64
2022-10-01 23:45:13,944:INFO:platform: Windows-10-10.0.22621-SP0
2022-10-01 23:45:13,944:INFO:Memory: svmem(total=8497213440, available=2490966016, percent=70.7, used=6006247424, free=2490966016)
2022-10-01 23:45:13,944:INFO:Physical Core: 6
2022-10-01 23:45:13,945:INFO:Logical Core: 12
2022-10-01 23:45:13,945:INFO:Checking libraries
2022-10-01 23:45:13,945:INFO:System:
2022-10-01 23:45:13,945:INFO:    python: 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]
2022-10-01 23:45:13,945:INFO:executable: E:\PROGRAMMING\FYP\cryptoing_backend\.venv\Scripts\python.exe
2022-10-01 23:45:13,945:INFO:   machine: Windows-10-10.0.22621-SP0
2022-10-01 23:45:13,945:INFO:PyCaret required dependencies:
2022-10-01 23:45:13,945:INFO:                 pip: 22.2.2
2022-10-01 23:45:13,945:INFO:          setuptools: 63.2.0
2022-10-01 23:45:13,945:INFO:             pycaret: 3.0.0rc4
2022-10-01 23:45:13,945:INFO:             IPython: 8.5.0
2022-10-01 23:45:13,945:INFO:          ipywidgets: 8.0.2
2022-10-01 23:45:13,945:INFO:                tqdm: 4.64.1
2022-10-01 23:45:13,945:INFO:               numpy: 1.22.4
2022-10-01 23:45:13,945:INFO:              pandas: 1.4.4
2022-10-01 23:45:13,945:INFO:              jinja2: 3.1.2
2022-10-01 23:45:13,945:INFO:               scipy: 1.8.1
2022-10-01 23:45:13,945:INFO:              joblib: 1.2.0
2022-10-01 23:45:13,945:INFO:             sklearn: 1.1.2
2022-10-01 23:45:13,945:INFO:                pyod: 1.0.5
2022-10-01 23:45:13,945:INFO:            imblearn: 0.9.1
2022-10-01 23:45:13,945:INFO:   category_encoders: 2.5.0
2022-10-01 23:45:13,945:INFO:            lightgbm: 3.3.2
2022-10-01 23:45:13,946:INFO:               numba: 0.55.2
2022-10-01 23:45:13,946:INFO:            requests: 2.28.1
2022-10-01 23:45:13,946:INFO:          matplotlib: 3.6.0
2022-10-01 23:45:13,946:INFO:          scikitplot: 0.3.7
2022-10-01 23:45:13,946:INFO:         yellowbrick: 1.5
2022-10-01 23:45:13,946:INFO:              plotly: 5.10.0
2022-10-01 23:45:13,946:INFO:             kaleido: 0.2.1
2022-10-01 23:45:13,946:INFO:         statsmodels: 0.13.2
2022-10-01 23:45:13,946:INFO:              sktime: 0.13.4
2022-10-01 23:45:13,946:INFO:               tbats: 1.1.0
2022-10-01 23:45:13,946:INFO:            pmdarima: 1.8.5
2022-10-01 23:45:13,946:INFO:              psutil: 5.9.2
2022-10-01 23:45:13,946:INFO:PyCaret optional dependencies:
2022-10-01 23:45:13,959:INFO:                shap: Not installed
2022-10-01 23:45:13,959:INFO:           interpret: Not installed
2022-10-01 23:45:13,959:INFO:                umap: Not installed
2022-10-01 23:45:13,959:INFO:    pandas_profiling: Not installed
2022-10-01 23:45:13,959:INFO:  explainerdashboard: Not installed
2022-10-01 23:45:13,959:INFO:             autoviz: Not installed
2022-10-01 23:45:13,959:INFO:           fairlearn: Not installed
2022-10-01 23:45:13,959:INFO:             xgboost: Not installed
2022-10-01 23:45:13,959:INFO:            catboost: Not installed
2022-10-01 23:45:13,960:INFO:              kmodes: Not installed
2022-10-01 23:45:13,960:INFO:             mlxtend: Not installed
2022-10-01 23:45:13,960:INFO:       statsforecast: Not installed
2022-10-01 23:45:13,960:INFO:        tune_sklearn: Not installed
2022-10-01 23:45:13,960:INFO:                 ray: Not installed
2022-10-01 23:45:13,960:INFO:            hyperopt: Not installed
2022-10-01 23:45:13,960:INFO:              optuna: Not installed
2022-10-01 23:45:13,960:INFO:               skopt: Not installed
2022-10-01 23:45:13,960:INFO:              mlflow: Not installed
2022-10-01 23:45:13,960:INFO:              gradio: Not installed
2022-10-01 23:45:13,960:INFO:             fastapi: Not installed
2022-10-01 23:45:13,960:INFO:             uvicorn: Not installed
2022-10-01 23:45:13,960:INFO:              m2cgen: Not installed
2022-10-01 23:45:13,960:INFO:           evidently: Not installed
2022-10-01 23:45:13,960:INFO:                nltk: Not installed
2022-10-01 23:45:13,960:INFO:            pyLDAvis: Not installed
2022-10-01 23:45:13,960:INFO:              gensim: Not installed
2022-10-01 23:45:13,960:INFO:               spacy: Not installed
2022-10-01 23:45:13,960:INFO:           wordcloud: Not installed
2022-10-01 23:45:13,960:INFO:            textblob: Not installed
2022-10-01 23:45:13,960:INFO:               fugue: Not installed
2022-10-01 23:45:13,960:INFO:           streamlit: Not installed
2022-10-01 23:45:13,960:INFO:             prophet: Not installed
2022-10-01 23:45:13,960:INFO:None
2022-10-01 23:45:13,961:INFO:Set up GPU usage.
2022-10-01 23:45:13,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:13,961:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.0.0.rc4
2022-10-01 23:45:13,961:INFO:Set up data.
2022-10-01 23:45:13,964:INFO:Set up train/test split.
2022-10-01 23:45:13,966:INFO:Set up index.
2022-10-01 23:45:13,966:INFO:Set up folding strategy.
2022-10-01 23:45:13,966:INFO:Assigning column types.
2022-10-01 23:45:13,969:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-10-01 23:45:13,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:13,969:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:45:13,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:13,973:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:45:13,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:13,977:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:45:13,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:14,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:14,429:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,429:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,429:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,435:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,442:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,526:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:14,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:14,805:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-10-01 23:45:14,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,813:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,819:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,901:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:14,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:14,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:15,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:15,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,177:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,184:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,277:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:15,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:15,555:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-10-01 23:45:15,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,652:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:15,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:15,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:15,941:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-10-01 23:45:15,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:16,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,067:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:16,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:16,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:16,297:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-10-01 23:45:16,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,397:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:16,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:16,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:16,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:16,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,681:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,770:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:16,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-10-01 23:45:16,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:16,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:17,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:17,037:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-10-01 23:45:17,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:17,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:17,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:17,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-10-01 23:45:17,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:17,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:17,837:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-10-01 23:45:17,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:17,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:18,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:18,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:18,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:18,603:INFO:Preparing preprocessing pipeline...
2022-10-01 23:45:18,604:INFO:Set up simple imputation.
2022-10-01 23:45:18,604:INFO:Set up variance threshold.
2022-10-01 23:45:18,620:INFO:Finished creating preprocessing pipeline.
2022-10-01 23:45:18,627:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['high', 'low', 'volumefrom',
                                             'volumeto', 'open'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-10-01 23:45:18,627:INFO:Creating final display dataframe.
2022-10-01 23:45:18,708:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target      Future_price
2              Target type        Regression
3               Data shape          (425, 6)
4         Train data shape          (297, 6)
5          Test data shape          (128, 6)
6         Numeric features                 5
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU              True
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              0d5d
2022-10-01 23:45:18,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:18,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:19,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:19,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-01 23:45:19,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:19,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-01 23:45:19,458:INFO:setup() successfully completed in 5.54s...............
2022-10-01 23:45:19,458:INFO:Initializing compare_models()
2022-10-01 23:45:19,458:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, include=None, fold=None, round=4, cross_validation=True, sort=r2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'r2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-10-01 23:45:19,458:INFO:Checking exceptions
2022-10-01 23:45:19,459:INFO:Preparing display monitor
2022-10-01 23:45:19,463:INFO:Initializing Linear Regression
2022-10-01 23:45:19,463:INFO:Total runtime is 0.0 minutes
2022-10-01 23:45:19,463:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:19,463:INFO:Initializing create_model()
2022-10-01 23:45:19,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:19,464:INFO:Checking exceptions
2022-10-01 23:45:19,465:INFO:Importing libraries
2022-10-01 23:45:19,465:INFO:Copying training dataset
2022-10-01 23:45:19,467:INFO:Defining folds
2022-10-01 23:45:19,467:INFO:Declaring metric variables
2022-10-01 23:45:19,467:INFO:Importing untrained model
2022-10-01 23:45:19,467:INFO:Linear Regression Imported successfully
2022-10-01 23:45:19,468:INFO:Starting cross validation
2022-10-01 23:45:19,471:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:19,680:INFO:Calculating mean and std
2022-10-01 23:45:19,681:INFO:Creating metrics dataframe
2022-10-01 23:45:19,684:INFO:Uploading results into container
2022-10-01 23:45:19,684:INFO:Uploading model into container now
2022-10-01 23:45:19,684:INFO:master_model_container: 1
2022-10-01 23:45:19,684:INFO:display_container: 2
2022-10-01 23:45:19,685:INFO:LinearRegression(n_jobs=-1)
2022-10-01 23:45:19,685:INFO:create_model() successfully completed......................................
2022-10-01 23:45:19,774:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:19,774:INFO:Creating metrics dataframe
2022-10-01 23:45:19,777:INFO:Initializing Lasso Regression
2022-10-01 23:45:19,777:INFO:Total runtime is 0.005243051052093506 minutes
2022-10-01 23:45:19,778:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:19,778:INFO:Initializing create_model()
2022-10-01 23:45:19,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:19,778:INFO:Checking exceptions
2022-10-01 23:45:19,779:INFO:Importing libraries
2022-10-01 23:45:19,779:INFO:Copying training dataset
2022-10-01 23:45:19,781:INFO:Defining folds
2022-10-01 23:45:19,781:INFO:Declaring metric variables
2022-10-01 23:45:19,781:INFO:Importing untrained model
2022-10-01 23:45:19,781:INFO:Lasso Regression Imported successfully
2022-10-01 23:45:19,782:INFO:Starting cross validation
2022-10-01 23:45:19,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:19,908:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:19,942:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:19,960:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:19,968:INFO:Calculating mean and std
2022-10-01 23:45:19,968:INFO:Creating metrics dataframe
2022-10-01 23:45:19,970:INFO:Uploading results into container
2022-10-01 23:45:19,971:INFO:Uploading model into container now
2022-10-01 23:45:19,971:INFO:master_model_container: 2
2022-10-01 23:45:19,971:INFO:display_container: 2
2022-10-01 23:45:19,971:INFO:Lasso(random_state=123)
2022-10-01 23:45:19,971:INFO:create_model() successfully completed......................................
2022-10-01 23:45:20,046:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:20,046:INFO:Creating metrics dataframe
2022-10-01 23:45:20,050:INFO:Initializing Ridge Regression
2022-10-01 23:45:20,050:INFO:Total runtime is 0.009791227181752522 minutes
2022-10-01 23:45:20,050:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:20,050:INFO:Initializing create_model()
2022-10-01 23:45:20,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:20,050:INFO:Checking exceptions
2022-10-01 23:45:20,051:INFO:Importing libraries
2022-10-01 23:45:20,051:INFO:Copying training dataset
2022-10-01 23:45:20,053:INFO:Defining folds
2022-10-01 23:45:20,053:INFO:Declaring metric variables
2022-10-01 23:45:20,054:INFO:Importing untrained model
2022-10-01 23:45:20,054:INFO:Ridge Regression Imported successfully
2022-10-01 23:45:20,054:INFO:Starting cross validation
2022-10-01 23:45:20,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:20,065:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.52593e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,085:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.7619e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,105:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68731e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,122:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.77646e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,140:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.46308e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,156:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.67102e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,174:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.43089e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,191:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=3.41032e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,209:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.68322e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,226:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_ridge.py:212: LinAlgWarning: Ill-conditioned matrix (rcond=2.50461e-14): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2022-10-01 23:45:20,233:INFO:Calculating mean and std
2022-10-01 23:45:20,234:INFO:Creating metrics dataframe
2022-10-01 23:45:20,236:INFO:Uploading results into container
2022-10-01 23:45:20,236:INFO:Uploading model into container now
2022-10-01 23:45:20,236:INFO:master_model_container: 3
2022-10-01 23:45:20,237:INFO:display_container: 2
2022-10-01 23:45:20,237:INFO:Ridge(random_state=123)
2022-10-01 23:45:20,237:INFO:create_model() successfully completed......................................
2022-10-01 23:45:20,316:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:20,316:INFO:Creating metrics dataframe
2022-10-01 23:45:20,320:INFO:Initializing Elastic Net
2022-10-01 23:45:20,320:INFO:Total runtime is 0.014295152823130288 minutes
2022-10-01 23:45:20,321:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:20,321:INFO:Initializing create_model()
2022-10-01 23:45:20,321:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:20,321:INFO:Checking exceptions
2022-10-01 23:45:20,322:INFO:Importing libraries
2022-10-01 23:45:20,322:INFO:Copying training dataset
2022-10-01 23:45:20,323:INFO:Defining folds
2022-10-01 23:45:20,324:INFO:Declaring metric variables
2022-10-01 23:45:20,324:INFO:Importing untrained model
2022-10-01 23:45:20,324:INFO:Elastic Net Imported successfully
2022-10-01 23:45:20,324:INFO:Starting cross validation
2022-10-01 23:45:20,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:20,442:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.006e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:20,495:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.152e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:20,503:INFO:Calculating mean and std
2022-10-01 23:45:20,504:INFO:Creating metrics dataframe
2022-10-01 23:45:20,506:INFO:Uploading results into container
2022-10-01 23:45:20,507:INFO:Uploading model into container now
2022-10-01 23:45:20,507:INFO:master_model_container: 4
2022-10-01 23:45:20,507:INFO:display_container: 2
2022-10-01 23:45:20,507:INFO:ElasticNet(random_state=123)
2022-10-01 23:45:20,507:INFO:create_model() successfully completed......................................
2022-10-01 23:45:20,586:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:20,587:INFO:Creating metrics dataframe
2022-10-01 23:45:20,590:INFO:Initializing Least Angle Regression
2022-10-01 23:45:20,590:INFO:Total runtime is 0.018792009353637694 minutes
2022-10-01 23:45:20,591:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:20,591:INFO:Initializing create_model()
2022-10-01 23:45:20,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:20,591:INFO:Checking exceptions
2022-10-01 23:45:20,592:INFO:Importing libraries
2022-10-01 23:45:20,592:INFO:Copying training dataset
2022-10-01 23:45:20,594:INFO:Defining folds
2022-10-01 23:45:20,594:INFO:Declaring metric variables
2022-10-01 23:45:20,594:INFO:Importing untrained model
2022-10-01 23:45:20,594:INFO:Least Angle Regression Imported successfully
2022-10-01 23:45:20,594:INFO:Starting cross validation
2022-10-01 23:45:20,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:20,605:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,624:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,642:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,661:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,678:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,696:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,714:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,731:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,752:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,771:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:20,780:INFO:Calculating mean and std
2022-10-01 23:45:20,781:INFO:Creating metrics dataframe
2022-10-01 23:45:20,783:INFO:Uploading results into container
2022-10-01 23:45:20,783:INFO:Uploading model into container now
2022-10-01 23:45:20,784:INFO:master_model_container: 5
2022-10-01 23:45:20,784:INFO:display_container: 2
2022-10-01 23:45:20,784:INFO:Lars(random_state=123)
2022-10-01 23:45:20,784:INFO:create_model() successfully completed......................................
2022-10-01 23:45:20,865:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:20,866:INFO:Creating metrics dataframe
2022-10-01 23:45:20,869:INFO:Initializing Lasso Least Angle Regression
2022-10-01 23:45:20,869:INFO:Total runtime is 0.02343692382176717 minutes
2022-10-01 23:45:20,870:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:20,870:INFO:Initializing create_model()
2022-10-01 23:45:20,870:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:20,870:INFO:Checking exceptions
2022-10-01 23:45:20,871:INFO:Importing libraries
2022-10-01 23:45:20,871:INFO:Copying training dataset
2022-10-01 23:45:20,873:INFO:Defining folds
2022-10-01 23:45:20,873:INFO:Declaring metric variables
2022-10-01 23:45:20,873:INFO:Importing untrained model
2022-10-01 23:45:20,873:INFO:Lasso Least Angle Regression Imported successfully
2022-10-01 23:45:20,873:INFO:Starting cross validation
2022-10-01 23:45:20,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:20,884:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:20,901:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:20,919:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:20,936:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:20,953:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:20,970:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:20,988:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:21,005:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:21,022:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:21,040:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-01 23:45:21,048:INFO:Calculating mean and std
2022-10-01 23:45:21,049:INFO:Creating metrics dataframe
2022-10-01 23:45:21,051:INFO:Uploading results into container
2022-10-01 23:45:21,052:INFO:Uploading model into container now
2022-10-01 23:45:21,052:INFO:master_model_container: 6
2022-10-01 23:45:21,052:INFO:display_container: 2
2022-10-01 23:45:21,052:INFO:LassoLars(random_state=123)
2022-10-01 23:45:21,052:INFO:create_model() successfully completed......................................
2022-10-01 23:45:21,133:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:21,134:INFO:Creating metrics dataframe
2022-10-01 23:45:21,138:INFO:Initializing Orthogonal Matching Pursuit
2022-10-01 23:45:21,138:INFO:Total runtime is 0.027916820844014485 minutes
2022-10-01 23:45:21,138:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:21,138:INFO:Initializing create_model()
2022-10-01 23:45:21,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:21,138:INFO:Checking exceptions
2022-10-01 23:45:21,139:INFO:Importing libraries
2022-10-01 23:45:21,139:INFO:Copying training dataset
2022-10-01 23:45:21,141:INFO:Defining folds
2022-10-01 23:45:21,141:INFO:Declaring metric variables
2022-10-01 23:45:21,141:INFO:Importing untrained model
2022-10-01 23:45:21,141:INFO:Orthogonal Matching Pursuit Imported successfully
2022-10-01 23:45:21,141:INFO:Starting cross validation
2022-10-01 23:45:21,142:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:21,151:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,168:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,184:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,202:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,219:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,236:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,252:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,269:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,286:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,303:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-01 23:45:21,312:INFO:Calculating mean and std
2022-10-01 23:45:21,312:INFO:Creating metrics dataframe
2022-10-01 23:45:21,315:INFO:Uploading results into container
2022-10-01 23:45:21,315:INFO:Uploading model into container now
2022-10-01 23:45:21,315:INFO:master_model_container: 7
2022-10-01 23:45:21,315:INFO:display_container: 2
2022-10-01 23:45:21,315:INFO:OrthogonalMatchingPursuit()
2022-10-01 23:45:21,316:INFO:create_model() successfully completed......................................
2022-10-01 23:45:21,396:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:21,396:INFO:Creating metrics dataframe
2022-10-01 23:45:21,400:INFO:Initializing Bayesian Ridge
2022-10-01 23:45:21,400:INFO:Total runtime is 0.032287593682607016 minutes
2022-10-01 23:45:21,400:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:21,400:INFO:Initializing create_model()
2022-10-01 23:45:21,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:21,401:INFO:Checking exceptions
2022-10-01 23:45:21,402:INFO:Importing libraries
2022-10-01 23:45:21,402:INFO:Copying training dataset
2022-10-01 23:45:21,403:INFO:Defining folds
2022-10-01 23:45:21,403:INFO:Declaring metric variables
2022-10-01 23:45:21,403:INFO:Importing untrained model
2022-10-01 23:45:21,404:INFO:Bayesian Ridge Imported successfully
2022-10-01 23:45:21,404:INFO:Starting cross validation
2022-10-01 23:45:21,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:21,577:INFO:Calculating mean and std
2022-10-01 23:45:21,577:INFO:Creating metrics dataframe
2022-10-01 23:45:21,580:INFO:Uploading results into container
2022-10-01 23:45:21,580:INFO:Uploading model into container now
2022-10-01 23:45:21,580:INFO:master_model_container: 8
2022-10-01 23:45:21,580:INFO:display_container: 2
2022-10-01 23:45:21,580:INFO:BayesianRidge()
2022-10-01 23:45:21,581:INFO:create_model() successfully completed......................................
2022-10-01 23:45:21,661:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:21,662:INFO:Creating metrics dataframe
2022-10-01 23:45:21,665:INFO:Initializing Passive Aggressive Regressor
2022-10-01 23:45:21,665:INFO:Total runtime is 0.03669850031534831 minutes
2022-10-01 23:45:21,666:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:21,666:INFO:Initializing create_model()
2022-10-01 23:45:21,666:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:21,666:INFO:Checking exceptions
2022-10-01 23:45:21,667:INFO:Importing libraries
2022-10-01 23:45:21,667:INFO:Copying training dataset
2022-10-01 23:45:21,669:INFO:Defining folds
2022-10-01 23:45:21,669:INFO:Declaring metric variables
2022-10-01 23:45:21,669:INFO:Importing untrained model
2022-10-01 23:45:21,669:INFO:Passive Aggressive Regressor Imported successfully
2022-10-01 23:45:21,669:INFO:Starting cross validation
2022-10-01 23:45:21,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:21,842:INFO:Calculating mean and std
2022-10-01 23:45:21,843:INFO:Creating metrics dataframe
2022-10-01 23:45:21,845:INFO:Uploading results into container
2022-10-01 23:45:21,845:INFO:Uploading model into container now
2022-10-01 23:45:21,846:INFO:master_model_container: 9
2022-10-01 23:45:21,846:INFO:display_container: 2
2022-10-01 23:45:21,846:INFO:PassiveAggressiveRegressor(random_state=123)
2022-10-01 23:45:21,846:INFO:create_model() successfully completed......................................
2022-10-01 23:45:21,926:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:21,926:INFO:Creating metrics dataframe
2022-10-01 23:45:21,930:INFO:Initializing Huber Regressor
2022-10-01 23:45:21,930:INFO:Total runtime is 0.041120064258575444 minutes
2022-10-01 23:45:21,930:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:21,930:INFO:Initializing create_model()
2022-10-01 23:45:21,930:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:21,930:INFO:Checking exceptions
2022-10-01 23:45:21,931:INFO:Importing libraries
2022-10-01 23:45:21,931:INFO:Copying training dataset
2022-10-01 23:45:21,933:INFO:Defining folds
2022-10-01 23:45:21,933:INFO:Declaring metric variables
2022-10-01 23:45:21,933:INFO:Importing untrained model
2022-10-01 23:45:21,933:INFO:Huber Regressor Imported successfully
2022-10-01 23:45:21,934:INFO:Starting cross validation
2022-10-01 23:45:21,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:22,186:INFO:Calculating mean and std
2022-10-01 23:45:22,186:INFO:Creating metrics dataframe
2022-10-01 23:45:22,189:INFO:Uploading results into container
2022-10-01 23:45:22,189:INFO:Uploading model into container now
2022-10-01 23:45:22,189:INFO:master_model_container: 10
2022-10-01 23:45:22,190:INFO:display_container: 2
2022-10-01 23:45:22,190:INFO:HuberRegressor()
2022-10-01 23:45:22,190:INFO:create_model() successfully completed......................................
2022-10-01 23:45:22,270:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:22,271:INFO:Creating metrics dataframe
2022-10-01 23:45:22,275:INFO:Initializing K Neighbors Regressor
2022-10-01 23:45:22,275:INFO:Total runtime is 0.046876180171966556 minutes
2022-10-01 23:45:22,275:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:22,275:INFO:Initializing create_model()
2022-10-01 23:45:22,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:22,275:INFO:Checking exceptions
2022-10-01 23:45:22,276:INFO:Importing libraries
2022-10-01 23:45:22,276:INFO:Copying training dataset
2022-10-01 23:45:22,278:INFO:Defining folds
2022-10-01 23:45:22,278:INFO:Declaring metric variables
2022-10-01 23:45:22,278:INFO:Importing untrained model
2022-10-01 23:45:22,278:INFO:K Neighbors Regressor Imported successfully
2022-10-01 23:45:22,279:INFO:Starting cross validation
2022-10-01 23:45:22,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:25,635:INFO:Calculating mean and std
2022-10-01 23:45:25,636:INFO:Creating metrics dataframe
2022-10-01 23:45:25,638:INFO:Uploading results into container
2022-10-01 23:45:25,639:INFO:Uploading model into container now
2022-10-01 23:45:25,639:INFO:master_model_container: 11
2022-10-01 23:45:25,639:INFO:display_container: 2
2022-10-01 23:45:25,639:INFO:KNeighborsRegressor(n_jobs=-1)
2022-10-01 23:45:25,639:INFO:create_model() successfully completed......................................
2022-10-01 23:45:25,721:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:25,722:INFO:Creating metrics dataframe
2022-10-01 23:45:25,725:INFO:Initializing Decision Tree Regressor
2022-10-01 23:45:25,726:INFO:Total runtime is 0.10439419746398926 minutes
2022-10-01 23:45:25,726:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:25,726:INFO:Initializing create_model()
2022-10-01 23:45:25,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:25,726:INFO:Checking exceptions
2022-10-01 23:45:25,727:INFO:Importing libraries
2022-10-01 23:45:25,727:INFO:Copying training dataset
2022-10-01 23:45:25,729:INFO:Defining folds
2022-10-01 23:45:25,729:INFO:Declaring metric variables
2022-10-01 23:45:25,729:INFO:Importing untrained model
2022-10-01 23:45:25,729:INFO:Decision Tree Regressor Imported successfully
2022-10-01 23:45:25,729:INFO:Starting cross validation
2022-10-01 23:45:25,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:25,906:INFO:Calculating mean and std
2022-10-01 23:45:25,907:INFO:Creating metrics dataframe
2022-10-01 23:45:25,909:INFO:Uploading results into container
2022-10-01 23:45:25,910:INFO:Uploading model into container now
2022-10-01 23:45:25,910:INFO:master_model_container: 12
2022-10-01 23:45:25,910:INFO:display_container: 2
2022-10-01 23:45:25,910:INFO:DecisionTreeRegressor(random_state=123)
2022-10-01 23:45:25,910:INFO:create_model() successfully completed......................................
2022-10-01 23:45:25,993:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:25,993:INFO:Creating metrics dataframe
2022-10-01 23:45:25,997:INFO:Initializing Random Forest Regressor
2022-10-01 23:45:25,997:INFO:Total runtime is 0.10891390244166056 minutes
2022-10-01 23:45:25,997:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:25,997:INFO:Initializing create_model()
2022-10-01 23:45:25,998:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:25,998:INFO:Checking exceptions
2022-10-01 23:45:25,999:INFO:Importing libraries
2022-10-01 23:45:25,999:INFO:Copying training dataset
2022-10-01 23:45:26,000:INFO:Defining folds
2022-10-01 23:45:26,000:INFO:Declaring metric variables
2022-10-01 23:45:26,000:INFO:Importing untrained model
2022-10-01 23:45:26,001:INFO:Random Forest Regressor Imported successfully
2022-10-01 23:45:26,001:INFO:Starting cross validation
2022-10-01 23:45:26,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:27,180:INFO:Calculating mean and std
2022-10-01 23:45:27,180:INFO:Creating metrics dataframe
2022-10-01 23:45:27,183:INFO:Uploading results into container
2022-10-01 23:45:27,183:INFO:Uploading model into container now
2022-10-01 23:45:27,184:INFO:master_model_container: 13
2022-10-01 23:45:27,184:INFO:display_container: 2
2022-10-01 23:45:27,184:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:45:27,184:INFO:create_model() successfully completed......................................
2022-10-01 23:45:27,265:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:27,265:INFO:Creating metrics dataframe
2022-10-01 23:45:27,269:INFO:Initializing Extra Trees Regressor
2022-10-01 23:45:27,269:INFO:Total runtime is 0.1301096240679423 minutes
2022-10-01 23:45:27,270:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:27,270:INFO:Initializing create_model()
2022-10-01 23:45:27,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:27,270:INFO:Checking exceptions
2022-10-01 23:45:27,271:INFO:Importing libraries
2022-10-01 23:45:27,271:INFO:Copying training dataset
2022-10-01 23:45:27,273:INFO:Defining folds
2022-10-01 23:45:27,273:INFO:Declaring metric variables
2022-10-01 23:45:27,273:INFO:Importing untrained model
2022-10-01 23:45:27,273:INFO:Extra Trees Regressor Imported successfully
2022-10-01 23:45:27,273:INFO:Starting cross validation
2022-10-01 23:45:27,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:28,410:INFO:Calculating mean and std
2022-10-01 23:45:28,411:INFO:Creating metrics dataframe
2022-10-01 23:45:28,413:INFO:Uploading results into container
2022-10-01 23:45:28,414:INFO:Uploading model into container now
2022-10-01 23:45:28,414:INFO:master_model_container: 14
2022-10-01 23:45:28,414:INFO:display_container: 2
2022-10-01 23:45:28,414:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-10-01 23:45:28,414:INFO:create_model() successfully completed......................................
2022-10-01 23:45:28,495:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:28,495:INFO:Creating metrics dataframe
2022-10-01 23:45:28,499:INFO:Initializing AdaBoost Regressor
2022-10-01 23:45:28,499:INFO:Total runtime is 0.15060507853825886 minutes
2022-10-01 23:45:28,499:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:28,500:INFO:Initializing create_model()
2022-10-01 23:45:28,500:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:28,500:INFO:Checking exceptions
2022-10-01 23:45:28,501:INFO:Importing libraries
2022-10-01 23:45:28,501:INFO:Copying training dataset
2022-10-01 23:45:28,502:INFO:Defining folds
2022-10-01 23:45:28,502:INFO:Declaring metric variables
2022-10-01 23:45:28,503:INFO:Importing untrained model
2022-10-01 23:45:28,503:INFO:AdaBoost Regressor Imported successfully
2022-10-01 23:45:28,503:INFO:Starting cross validation
2022-10-01 23:45:28,504:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:29,166:INFO:Calculating mean and std
2022-10-01 23:45:29,167:INFO:Creating metrics dataframe
2022-10-01 23:45:29,169:INFO:Uploading results into container
2022-10-01 23:45:29,170:INFO:Uploading model into container now
2022-10-01 23:45:29,170:INFO:master_model_container: 15
2022-10-01 23:45:29,170:INFO:display_container: 2
2022-10-01 23:45:29,170:INFO:AdaBoostRegressor(random_state=123)
2022-10-01 23:45:29,170:INFO:create_model() successfully completed......................................
2022-10-01 23:45:29,254:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:29,254:INFO:Creating metrics dataframe
2022-10-01 23:45:29,258:INFO:Initializing Gradient Boosting Regressor
2022-10-01 23:45:29,258:INFO:Total runtime is 0.16324828068415323 minutes
2022-10-01 23:45:29,258:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:29,258:INFO:Initializing create_model()
2022-10-01 23:45:29,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:29,258:INFO:Checking exceptions
2022-10-01 23:45:29,259:INFO:Importing libraries
2022-10-01 23:45:29,260:INFO:Copying training dataset
2022-10-01 23:45:29,261:INFO:Defining folds
2022-10-01 23:45:29,261:INFO:Declaring metric variables
2022-10-01 23:45:29,261:INFO:Importing untrained model
2022-10-01 23:45:29,262:INFO:Gradient Boosting Regressor Imported successfully
2022-10-01 23:45:29,262:INFO:Starting cross validation
2022-10-01 23:45:29,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:29,848:INFO:Calculating mean and std
2022-10-01 23:45:29,849:INFO:Creating metrics dataframe
2022-10-01 23:45:29,851:INFO:Uploading results into container
2022-10-01 23:45:29,852:INFO:Uploading model into container now
2022-10-01 23:45:29,852:INFO:master_model_container: 16
2022-10-01 23:45:29,852:INFO:display_container: 2
2022-10-01 23:45:29,852:INFO:GradientBoostingRegressor(random_state=123)
2022-10-01 23:45:29,852:INFO:create_model() successfully completed......................................
2022-10-01 23:45:29,934:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:29,934:INFO:Creating metrics dataframe
2022-10-01 23:45:29,938:INFO:Initializing Light Gradient Boosting Machine
2022-10-01 23:45:29,938:INFO:Total runtime is 0.17459325790405272 minutes
2022-10-01 23:45:29,938:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:29,938:INFO:Initializing create_model()
2022-10-01 23:45:29,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:29,938:INFO:Checking exceptions
2022-10-01 23:45:29,939:INFO:Importing libraries
2022-10-01 23:45:29,939:INFO:Copying training dataset
2022-10-01 23:45:29,940:INFO:Defining folds
2022-10-01 23:45:29,940:INFO:Declaring metric variables
2022-10-01 23:45:29,940:INFO:Importing untrained model
2022-10-01 23:45:29,942:INFO:Light Gradient Boosting Machine Imported successfully
2022-10-01 23:45:29,942:INFO:Starting cross validation
2022-10-01 23:45:29,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:34,677:INFO:Calculating mean and std
2022-10-01 23:45:34,677:INFO:Creating metrics dataframe
2022-10-01 23:45:34,681:INFO:Uploading results into container
2022-10-01 23:45:34,681:INFO:Uploading model into container now
2022-10-01 23:45:34,681:INFO:master_model_container: 17
2022-10-01 23:45:34,682:INFO:display_container: 2
2022-10-01 23:45:34,682:INFO:LGBMRegressor(device='gpu', random_state=123)
2022-10-01 23:45:34,682:INFO:create_model() successfully completed......................................
2022-10-01 23:45:34,774:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:34,774:INFO:Creating metrics dataframe
2022-10-01 23:45:34,779:INFO:Initializing Dummy Regressor
2022-10-01 23:45:34,779:INFO:Total runtime is 0.25527688264846804 minutes
2022-10-01 23:45:34,779:INFO:SubProcess create_model() called ==================================
2022-10-01 23:45:34,780:INFO:Initializing create_model()
2022-10-01 23:45:34,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6F1E25210>, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:34,780:INFO:Checking exceptions
2022-10-01 23:45:34,781:INFO:Importing libraries
2022-10-01 23:45:34,781:INFO:Copying training dataset
2022-10-01 23:45:34,783:INFO:Defining folds
2022-10-01 23:45:34,783:INFO:Declaring metric variables
2022-10-01 23:45:34,783:INFO:Importing untrained model
2022-10-01 23:45:34,784:INFO:Dummy Regressor Imported successfully
2022-10-01 23:45:34,784:INFO:Starting cross validation
2022-10-01 23:45:34,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:34,941:INFO:Calculating mean and std
2022-10-01 23:45:34,942:INFO:Creating metrics dataframe
2022-10-01 23:45:34,944:INFO:Uploading results into container
2022-10-01 23:45:34,944:INFO:Uploading model into container now
2022-10-01 23:45:34,944:INFO:master_model_container: 18
2022-10-01 23:45:34,945:INFO:display_container: 2
2022-10-01 23:45:34,945:INFO:DummyRegressor()
2022-10-01 23:45:34,945:INFO:create_model() successfully completed......................................
2022-10-01 23:45:35,027:INFO:SubProcess create_model() end ==================================
2022-10-01 23:45:35,028:INFO:Creating metrics dataframe
2022-10-01 23:45:35,033:INFO:Initializing create_model()
2022-10-01 23:45:35,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:35,033:INFO:Checking exceptions
2022-10-01 23:45:35,034:INFO:Importing libraries
2022-10-01 23:45:35,034:INFO:Copying training dataset
2022-10-01 23:45:35,036:INFO:Defining folds
2022-10-01 23:45:35,036:INFO:Declaring metric variables
2022-10-01 23:45:35,036:INFO:Importing untrained model
2022-10-01 23:45:35,036:INFO:Declaring custom model
2022-10-01 23:45:35,037:INFO:Lasso Regression Imported successfully
2022-10-01 23:45:35,037:INFO:Cross validation set to False
2022-10-01 23:45:35,037:INFO:Fitting Model
2022-10-01 23:45:35,047:INFO:Lasso(random_state=123)
2022-10-01 23:45:35,047:INFO:create_model() successfully completed......................................
2022-10-01 23:45:35,140:INFO:master_model_container: 18
2022-10-01 23:45:35,141:INFO:display_container: 2
2022-10-01 23:45:35,141:INFO:Lasso(random_state=123)
2022-10-01 23:45:35,141:INFO:compare_models() successfully completed......................................
2022-10-01 23:45:35,141:INFO:Initializing create_model()
2022-10-01 23:45:35,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-01 23:45:35,141:INFO:Checking exceptions
2022-10-01 23:45:35,144:INFO:Importing libraries
2022-10-01 23:45:35,145:INFO:Copying training dataset
2022-10-01 23:45:35,146:INFO:Defining folds
2022-10-01 23:45:35,146:INFO:Declaring metric variables
2022-10-01 23:45:35,147:INFO:Importing untrained model
2022-10-01 23:45:35,147:INFO:Declaring custom model
2022-10-01 23:45:35,147:INFO:Lasso Regression Imported successfully
2022-10-01 23:45:35,147:INFO:Starting cross validation
2022-10-01 23:45:35,148:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-10-01 23:45:35,297:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.136e+03, tolerance: 3.027e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:35,333:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.608e+03, tolerance: 2.862e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:35,351:WARNING:E:\PROGRAMMING\FYP\cryptoing_backend\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:648: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.290e+03, tolerance: 3.016e+02
  model = cd_fast.enet_coordinate_descent(

2022-10-01 23:45:35,359:INFO:Calculating mean and std
2022-10-01 23:45:35,360:INFO:Creating metrics dataframe
2022-10-01 23:45:35,361:INFO:Finalizing model
2022-10-01 23:45:35,371:INFO:Uploading results into container
2022-10-01 23:45:35,372:INFO:Uploading model into container now
2022-10-01 23:45:35,382:INFO:master_model_container: 19
2022-10-01 23:45:35,382:INFO:display_container: 3
2022-10-01 23:45:35,382:INFO:Lasso(random_state=123)
2022-10-01 23:45:35,382:INFO:create_model() successfully completed......................................
2022-10-01 23:45:35,482:INFO:Initializing predict_model()
2022-10-01 23:45:35,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6E948F550>, estimator=Lasso(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F6F1F6D990>)
2022-10-01 23:45:35,482:INFO:Checking exceptions
2022-10-01 23:45:35,483:INFO:Preloading libraries
2022-10-01 23:45:35,483:INFO:Set up data.
2022-10-01 23:45:35,486:INFO:Set up index.
2022-10-01 23:45:35,638:WARNING:e:\PROGRAMMING\FYP\cryptoing_backend\app.py:56: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  unseen_predictions = unseen_predictions.append({'high' : np.nan, 'low' : np.nan, 'volumefrom' : np.nan, 'Future_price' : np.nan, 'prediction_label' : np.nan},ignore_index = True)

